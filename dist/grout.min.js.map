{"version":3,"sources":["grout.min.js","/source/grout.js"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","call","parent","getPrototypeOf","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","global","factory","exports","module","require","define","amd","Grout","Matter","_","AWS","Firebase","this","_setAWSConfig","config","update","credentials","CognitoIdentityCredentials","IdentityPoolId","aws","cognito","poolId","region","setAWSConfig","childrenStructureFromArray","fileArray","mappedStructure","map","file","buildStructureObject","combineLikeObjs","pathArray","has","path","split","Key","pick","name","currentObj","type","finalObj","each","loc","ind","list","take","join","children","$id","mappedArray","takenNames","finishedArray","obj","indexOf","push","likeObj","findWhere","union","serverUrl","tokenName","fbUrl","appName","matterOptions","localServer","params","AuthRoleArn","UnauthRoleArn","matter","________request","utils","request","___________logger","logger","_Directory","actionData","isObject","directoryName","isString","error","description","func","Error","directoryEndpoint","then","response","info","errRes","Promise","reject","directoryData","debug","put","endpointArray","endpoint","app","splice","endpointStr","log","_______request","__________logger","DirectoriesAction","action","providedData","directoriesEndpoint","descrption","appData","post","query","searchEndpoint","resolve","______request","_________logger","_Group","groupData","groupEndpoint","text","del","accountsData","accountsArray","message","accounts","_____request","________logger","GroupsAction","groupsEndpoint","newGroupData","____request","_______logger","_Account","accountData","extend","username","accountEndpoint","______logger","AccountsAction","accountsEndpoint","newAccount","___request","_____logger","_Template","templateData","templateEndpoint","____logger","__request","TemplatesAction","templatesEndpoint","___logger","_File","fileData","_this","frontend","err","_ret","s3","S3","getData","Bucket","bucketName","contentType","ContentType","finalData","v","getObject","data","content","Body","toString","metaData","Metadata","_this2","_ret2","saveParams","ACL","putObject","_this3","_ret3","deleteObject","ext","re","exec","__logger","Files","filesData","isArray","_this4","warn","applicationData","_ret4","listParams","listObjects","Contents","filesArray","childStruct","childStructure","_request","_logger","Application","fbRef","appEndpoint","application","_this5","userData","AppsAction","appsEndpoint","_Matter","template","user"],"mappings":"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","file":"grout.min.js","sourcesContent":[null,"(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kyper-matter'), require('lodash'), require('aws-sdk'), require('firebase')) :\n\ttypeof define === 'function' && define.amd ? define(['kyper-matter', 'lodash', 'aws-sdk', 'firebase'], factory) :\n\tglobal.Grout = factory(global.Matter,global._,global.AWS,global.Firebase);\n}(this, function (Matter,_,AWS,Firebase) { 'use strict';\n\n\tMatter = 'default' in Matter ? Matter['default'] : Matter;\n\t_ = 'default' in _ ? _['default'] : _;\n\tAWS = 'default' in AWS ? AWS['default'] : AWS;\n\tFirebase = 'default' in Firebase ? Firebase['default'] : Firebase;\n\n\tlet config = {\n\t\tserverUrl: 'http://tessellate.elasticbeanstalk.com',\n\t\ttokenName: 'grout',\n\t\tfbUrl: 'https://kyper-tech.firebaseio.com/tessellate',\n\t\tappName: 'tessellate',\n\t\tmatterOptions: {\n\t\t\tlocalServer: false\n\t\t},\n\t\taws: {\n\t\t\tregion: 'us-east-1',\n\t\t\tcognito: {\n\t\t\t\tpoolId: 'us-east-1:72a20ffd-c638-48b0-b234-3312b3e64b2e',\n\t\t\t\tparams: {\n\t\t\t\t\tAuthRoleArn: 'arn:aws:iam::823322155619:role/Cognito_TessellateUnauth_Role',\n\t\t\t\t\tUnauthRoleArn: 'arn:aws:iam::823322155619:role/Cognito_TessellateAuth_Role'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tlet matter = new Matter(config.appName, config.matterOptions);\n\n\tlet ________request = matter.utils.request;\n\tlet ___________logger = matter.utils.logger;\n\n\t//Actions for specific directory\n\tclass Directory {\n\t\tconstructor(actionData) {\n\t\t\tif (actionData && _.isObject(actionData) && (_.has(actionData, 'directoryName') || _.has(actionData, 'name'))) { //Data is object containing directory data\n\t\t\t\tthis.name = actionData.directoryName || actionData.name;\n\t\t\t\tif (_.has(actionData, 'appName')) {\n\t\t\t\t\tthis.appName = actionData.appName;\n\t\t\t\t}\n\t\t\t} else if (actionData && _.isString(actionData)) { //Data is string name\n\t\t\t\tthis.name = actionData;\n\t\t\t} else {\n\t\t\t\t___________logger.error({\n\t\t\t\t\tdescription: 'Action data object with name is required to start a Directory Action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Directory Data object with name is required to start a Directory action.');\n\t\t\t}\n\t\t}\n\t\tget directoryEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'directories', this.name];\n\t\t\t//Check for app account action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t___________logger.log({\n\t\t\t\tdescription: 'Directory endpoint built.',\n\t\t\t\tendpoint: endpointStr, func: 'directoryEndpoint',\n\t\t\t\tobj: 'Directory'\n\t\t\t});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get userlications or single userlication\n\t\tget() {\n\t\t\treturn ________request.get(this.directoryEndpoint).then((response) => {\n\t\t\t\t___________logger.info({\n\t\t\t\t\tdescription: 'Directory data loaded successfully.',\n\t\t\t\t\tresponse: response, func: 'get', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t___________logger.info({\n\t\t\t\t\tdescription: 'Error getting directory.',\n\t\t\t\t\terror: errRes, func: 'get', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update an Directory\n\t\tupdate(directoryData) {\n\t\t\t___________logger.debug({\n\t\t\t\tdescription: 'Directory updated called.',\n\t\t\t\tdirectoryData: directoryData, func: 'update', obj: 'Directory'\n\t\t\t});\n\t\t\treturn matter.utils.request.put(this.directoryEndpoint, directoryData).then((response) => {\n\t\t\t\t___________logger.info({\n\t\t\t\t\tdescription: 'Directory updated successfully.',\n\t\t\t\t\tdirectoryData: directoryData, response: response,\n\t\t\t\t\tfunc: 'update', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t___________logger.error({\n\t\t\t\t\tdescription: 'Error updating directory.',\n\t\t\t\t\tdirectoryData: directoryData, error: errRes,\n\t\t\t\t\tfunc: 'update', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete an Directory\n\t\tdel(directoryData) {\n\t\t\t___________logger.debug({\n\t\t\t\tdescription: 'Delete directory called.',\n\t\t\t\tdirectoryData: directoryData, func: 'del', obj: 'Directory'\n\t\t\t});\n\t\t\treturn ________request.delete(this.directoryEndpoint, directoryData).then((response) => {\n\t\t\t\t___________logger.info({\n\t\t\t\t\tdescription: 'Directory deleted successfully.',\n\t\t\t\t\tdirectoryData: directoryData, func: 'del', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t___________logger.error({\n\t\t\t\t\tdescription: 'Error deleting directory.',\n\t\t\t\t\terror: errRes, func: 'del', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet _______request = matter.utils.request;\n\tlet __________logger = matter.utils.logger;\n\n\t//Actions for directories list\n\tclass DirectoriesAction {\n\t\tconstructor(actionData) {\n\t\t\t//Check to see if action is for a specific app\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'app')) {\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\t__________logger.log({description: 'Provided app data set to app parameter.', action: this, providedData: actionData, func: 'constructor', obj: 'DirectoriesAction'});\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\tthis.app = {name: actionData};\n\t\t\t\t__________logger.log({description: 'App name provided as string was set.', action: this, providedData: actionData, func: 'constructor', obj: 'DirectoriesAction'});\n\t\t\t}\n\t\t\t__________logger.info({description: 'New directories action.', action: this, providedData: actionData, func: 'constructor', obj: 'DirectoriesAction'});\n\t\t}\n\t\tget directoriesEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'directories'];\n\t\t\t//Check for app groups action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t__________logger.log({description: 'Directories endpoint built.', endpoint: endpointStr, func: 'directoriesEndpoint', obj: 'DirectoriesAction'});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get users or single application\n\t\tget() {\n\t\t\t__________logger.debug({description: 'Directories get called.', action: this, func: 'get', obj: 'DirectoriesAction'});\n\t\t\treturn _______request.get(this.directoriesEndpoint).then((response) => {\n\t\t\t\t__________logger.info({descrption: 'Directories loaded successfully.', response: response, func: 'get', obj: 'DirectoriesAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t__________logger.error({descrption: 'error getting users', error: errRes, func: 'get', obj: 'DirectoriesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\t__________logger.debug({description: 'Add directory called.', action: this, appData: appData, func: 'get', obj: 'DirectoriesAction'});\n\t\t\treturn _______request.post(this.directoriesEndpoint, appData).then((response) => {\n\t\t\t\t__________logger.log({description: 'Application added successfully.', response: response, func: 'add', obj: 'DirectoriesAction'});\n\t\t\t\t//TODO: Return list of group objects\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t__________logger.error({description: 'Error adding group.', error: errRes, func: 'add', obj: 'DirectoriesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Search with partial of directory name\n\t\tsearch(query) {\n\t\t\tvar searchEndpoint = this.directoriesEndpoint + '/search/';\n\t\t\tif (query && _.isString(query)) {\n\t\t\t\tsearchEndpoint += query;\n\t\t\t}\n\t\t\tif (!query || query == '') {\n\t\t\t\t__________logger.debug({description: 'Null query, returning empty array.', func: 'search', obj: 'DirectoriesAction'});\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\treturn _______request.get(searchEndpoint).then((response) => {\n\t\t\t\t__________logger.log({description: 'Found directories based on search.', response: response, func: 'search', obj: 'DirectoriesAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t__________logger.error({description: 'Error searching directories.', error: errRes, func: 'search', obj: 'DirectoriesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet ______request = matter.utils.request;\n\tlet _________logger = matter.utils.logger;\n\n\t//Actions for specific user\n\tclass Group {\n\t\tconstructor(actionData) {\n\t\t\t//Call matter with name and settings\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'groupData')) { //Data is object containing group data\n\t\t\t\tthis.name = _.isObject(actionData.groupData) ? actionData.groupData.name : actionData.groupData;\n\t\t\t\tif (_.has(actionData, 'app')) {\n\t\t\t\t\tthis.app = actionData.app;\n\t\t\t\t}\n\t\t\t} else if (actionData && _.isString(actionData)) { //Data is string name\n\t\t\t\tthis.name = actionData;\n\t\t\t} else {\n\t\t\t\t_________logger.error({description: 'Action data is required to start a Group Action.', func: 'constructor', obj: 'Group'});\n\t\t\t\tthrow new Error('Username is required to start an Group');\n\t\t\t}\n\t\t}\n\t\tget groupEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'groups', this.name];\n\t\t\t//Check for app account action\n\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t_________logger.log({description: 'Group Endpoint built.', endpoint: endpointStr, func: 'groupEndpoint', obj: 'Group'});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get userlications or single userlication\n\t\tget() {\n\t\t\treturn ______request.get(this.groupEndpoint).then((response) => {\n\t\t\t\t_________logger.info({description: 'Group data loaded successfully.', response: response, func: 'get', obj: 'Group'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_________logger.info({description: 'Error getting group.', error: errRes, func: 'get', obj: 'Group'});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\t//Update an Group\n\t\tupdate(groupData) {\n\t\t\t_________logger.log({description: 'Group updated called.', groupData: groupData, func: 'update', obj: 'Group'});\n\t\t\treturn matter.utils.request.put(this.groupEndpoint, groupData).then((response) => {\n\t\t\t\t_________logger.info({description: 'Group updated successfully.', groupData: groupData, response: response, func: 'update', obj: 'Group'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_________logger.error({description: 'Error updating group.', groupData: groupData, error: errRes, func: 'update', obj: 'Group'});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\t//Delete an Group\n\t\tdel(groupData) {\n\t\t\t_________logger.log({description: 'Delete group called.', groupData: groupData, func: 'del', obj: 'Group'});\n\t\t\treturn ______request.del(this.groupEndpoint, {}).then((response) => {\n\t\t\t\t_________logger.info({description: 'Group deleted successfully.', groupData: groupData, func: 'del', obj: 'Group'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_________logger.error({description: 'Error deleting group.', error: errRes, text: errRes.response.text, groupData: groupData,  func: 'del', obj: 'Group'});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\t//Update an Group\n\t\taddAccounts(accountsData) {\n\t\t\t_________logger.log({description: 'Group updated called.', accountsData: accountsData, func: 'update', obj: 'Group'});\n\t\t\tlet accountsArray = accountsData;\n\t\t\t//Handle provided data being a string list\n\t\t\tif (_.isString(accountsData)) {\n\t\t\t\taccountsArray = accountsData.split(',');\n\t\t\t}\n\t\t\t//Check item in array to see if it is a string (username) instead of _id\n\t\t\tif (_.isString(accountsArray[0])) {\n\t\t\t\t_________logger.error({description: 'Accounts array only currently supports account._id not account.username.', accountsData: accountsData, func: 'update', obj: 'Group'});\n\t\t\t\treturn Promise.reject({message: 'Accounts array only currently supports account._id not account.username.'});\n\t\t\t}\n\t\t\t_________logger.log({description: 'Updating group with accounts array.', accountsArray: accountsArray, func: 'update', obj: 'Group'});\n\t\t\treturn this.update({accounts: accountsArray}).then((response) => {\n\t\t\t\t_________logger.info({description: 'Account(s) added to group successfully.', response: response, func: 'addAccounts', obj: 'Group'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_________logger.error({description: 'Error addAccountseting group.', error: errRes,  func: 'addAccounts', obj: 'Group'});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet _____request = matter.utils.request;\n\tlet ________logger = matter.utils.logger;\n\n\t//Actions for users list\n\tclass GroupsAction {\n\t\tconstructor(actionData) {\n\t\t\t//Check to see if action is for a specific app\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'app')) {\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Provided app data set to app parameter.',\n\t\t\t\t\taction: this, providedData: actionData,\n\t\t\t\t\tfunc: 'constructor', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\tthis.app = {name: actionData};\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'App name provided as string was set.',\n\t\t\t\t\taction: this, providedData: actionData,\n\t\t\t\t\tfunc: 'constructor', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t}\n\t\t\t________logger.info({\n\t\t\t\tdescription: 'New Groups action.', action: this,\n\t\t\t\tprovidedData: actionData, func: 'constructor', obj: 'GroupsAction'\n\t\t\t});\n\t\t}\n\t\tget groupsEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'groups'];\n\t\t\t//Check for app groups action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t________logger.log({\n\t\t\t\tdescription: 'Groups Endpoint built.', endpoint: endpointStr,\n\t\t\t\tfunc: 'groupsEndpoint', obj: 'GroupsAction'\n\t\t\t});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get users or single application\n\t\tget() {\n\t\t\t________logger.log({\n\t\t\t\tdescription: 'Get group called.',\n\t\t\t\tfunc: 'get', obj: 'GroupsAction'\n\t\t\t});\n\t\t\treturn _____request.get(this.groupsEndpoint).then((response) => {\n\t\t\t\t________logger.info({\n\t\t\t\t\tdescription: 'Groups loaded successfully.',\n\t\t\t\t\tresponse: response, func: 'get', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t________logger.info({\n\t\t\t\t\tdescription: 'Error getting groups.', error: errRes,\n\t\t\t\t\tfunc: 'get', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(groupData) {\n\t\t\tvar newGroupData = groupData;\n\t\t\t________logger.debug({\n\t\t\t\tdescription: 'Add group called.', groupData: groupData,\n\t\t\t\tfunc: 'add', obj: 'GroupsAction'\n\t\t\t});\n\t\t\tif (_.isString(groupData)) {\n\t\t\t\t//Group data is string\n\t\t\t\tnewGroupData = {name: groupData};\n\t\t\t}\n\t\t\t________logger.debug({\n\t\t\t\tdescription: 'Add group called.', newGroupData: newGroupData,\n\t\t\t\tfunc: 'add', obj: 'GroupsAction'\n\t\t\t});\n\t\t\treturn _____request.post(this.groupsEndpoint, newGroupData).then((response) => {\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Group added to application successfully.',\n\t\t\t\t\tresponse: response, func: 'add', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\t//TODO: Return list of group objects\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t________logger.error({\n\t\t\t\t\tdescription: 'Error adding group.',\n\t\t\t\t\terror: errRes, func: 'add', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Search with partial of username\n\t\tsearch(query) {\n\t\t\t________logger.debug({\n\t\t\t\tdescription: 'Search groups called.', query: query,\n\t\t\t\tfunc: 'search', obj: 'GroupsAction'\n\t\t\t});\n\t\t\tif (!query || query == '' || !_.isString(query)) {\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Null or invalid query, returning empty array.',\n\t\t\t\t\tfunc: 'search', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\tlet searchEndpoint = `${this.groupsEndpoint}/search/${query}`;\n\t\t\t________logger.debug({\n\t\t\t\tdescription: 'Search endpoint created.',\n\t\t\t\tendpoint: searchEndpoint, func: 'search', obj: 'GroupsAction'\n\t\t\t});\n\t\t\treturn _____request.get(searchEndpoint).then((response) => {\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Found groups based on search.',\n\t\t\t\t\tresponse: response, func: 'search', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t________logger.error({\n\t\t\t\t\tdescription: 'Error searching groups.',\n\t\t\t\t\terror: errRes, func: 'search', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet ____request = matter.utils.request;\n\tlet _______logger = matter.utils.logger;\n\n\t//Actions for specific user\n\tclass Account {\n\t\tconstructor(accountData) {\n\t\t\t//Call matter with name and settings\n\t\t\tif (accountData && _.isObject(accountData) && _.has(accountData, 'username')) {\n\t\t\t\t_.extend(this, accountData);\n\t\t\t} else if (accountData && _.isString(accountData)) {\n\t\t\t\tthis.username = accountData;\n\t\t\t} else {\n\t\t\t\t_______logger.error({\n\t\t\t\t\tdescription: 'AccountData is required to start an AccountAction',\n\t\t\t\t\tfunc: 'constructor', obj: 'Account'\n\t\t\t\t});\n\t\t\t\tthrow new Error('username is required to start an AccountAction');\n\t\t\t}\n\t\t}\n\t\t//Build endpoint based on accountData\n\t\tget accountEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'accounts', this.username];\n\t\t\t//Check for app account action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t_______logger.log({description: 'Account Endpoint built.', endpoint: endpointStr, func: 'accountEndpoint', obj: 'Account'});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get a user\n\t\tget() {\n\t\t\t_______logger.debug({description: 'Account data loaded successfully.', func: 'get', obj: 'Account'});\n\t\t\treturn ____request.get(this.accountEndpoint).then((response) => {\n\t\t\t\t_______logger.info({description: 'Account data loaded successfully.', response: response, func: 'get', obj: 'Account'});\n\t\t\t\treturn new Account(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_______logger.error({description: 'Error getting user.', error: errRes, func: 'get', obj: 'Account'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update a Account\n\t\tupdate(accountData) {\n\t\t\t_______logger.debug({description: 'Update user called.', accountData: accountData, func: 'update', obj: 'Account'});\n\t\t\treturn ____request.put(this.accountEndpoint, accountData).then((response) => {\n\t\t\t\t_______logger.info({description: 'Account updated successfully.', func: 'update', obj: 'Account'});\n\t\t\t\t//TODO: Extend this with current info before returning\n\t\t\t\treturn new Account(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_______logger.error({description: 'Error updating user.', func: 'update', obj: 'Account'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete a Account\n\t\tdel(accountData) {\n\t\t\t_______logger.debug({description: 'Delete user called.', func: 'del', obj: 'Account'});\n\t\t\treturn ____request.del(this.accountEndpoint, accountData).then((response) => {\n\t\t\t\t_______logger.info({description: 'Delete user successful.', response: response, func: 'del', obj: 'Account'});\n\t\t\t\treturn new Account(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_______logger.error({description: 'Error deleting user.', accountData: accountData, error: errRes, func: 'del', obj: 'Account'});\n\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet ______logger = matter.utils.logger;\n\t//Actions for accounts list\n\tclass AccountsAction {\n\t\tconstructor(actionData) {\n\t\t\t//Check to see if action is for a specific app\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'app')) {\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\t______logger.log({description: 'Provided app data set to app parameter.', action: this, providedData: actionData, func: 'constructor', obj: 'AccountsAction'});\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\tthis.app = {name: actionData};\n\t\t\t\t______logger.log({description: 'App name provided as string was set.', action: this, providedData: actionData, func: 'constructor', obj: 'AccountsAction'});\n\t\t\t}\n\t\t\t______logger.info({description: 'New Accounts action.', action: this, providedData: actionData, func: 'constructor', obj: 'AccountsAction'});\n\t\t}\n\t\tget accountsEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'accounts'];\n\t\t\t//Check for app account action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t//Splice apps, appName into index 1\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t______logger.log({description: 'Accounts Endpoint built.', endpoint: endpointStr, func: 'accountsEndpoint', obj: 'AccountsAction'});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get accounts or single application\n\t\tget() {\n\t\t\t______logger.log({description: 'Accounts get called.', func: 'get', obj: 'AccountsAction'});\n\t\t\treturn matter.utils.request.get(this.accountsEndpoint).then((response) => {\n\t\t\t\t______logger.info({description: 'Accounts loaded successfully.', func: 'get', obj: 'AccountsAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t______logger.info({description: 'Error getting accounts.', error: errRes, func: 'get', obj: 'AccountsAction'});\n\t\t\t\treturn Promise.reject(errRes.message || 'Error getting accounts.');\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(accountData) {\n\t\t\t______logger.info({description: 'Account add called.', accountData: accountData, func: 'add', obj: 'AccountsAction'});\n\t\t\treturn this.utils.request.post(this.accountsEndpoint, accountData).then((response) => {\n\t\t\t\t______logger.info({description: 'Account added successfully.', response: response, newAccount: new Account(response), func: 'add', obj: 'AccountsAction'});\n\t\t\t\treturn new Account(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t______logger.error({description: 'Account add called.', error: errRes, accountData: accountData, func: 'add', obj: 'AccountsAction'});\n\t\t\t\treturn Promise.reject(errRes.message || 'Error adding account.');\n\t\t\t});\n\t\t}\n\t\t//Search with partial of accountname\n\t\tsearch(query) {\n\t\t\t______logger.log({description: 'Accounts search called.', query: query, func: 'search', obj: 'AccountsAction'});\n\t\t\tvar searchEndpoint = this.accountsEndpoint + '/search/';\n\t\t\tif (query && _.isString(query)) {\n\t\t\t\tsearchEndpoint += query;\n\t\t\t}\n\t\t\tif (!query || query == '') {\n\t\t\t\t______logger.log({description: 'Null query, returning empty array.', func: 'search', obj: 'AccountsAction'});\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\treturn matter.utils.request.get(searchEndpoint).then((response) => {\n\t\t\t\t______logger.log({description: 'Accounts search responded.', response: response, query: query, func: 'search', obj: 'AccountsAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t______logger.error({description: 'Error searching Accounts.', error: errRes, query: query, func: 'search', obj: 'AccountsAction'});\n\t\t\t\treturn Promise.reject(errRes.message || 'Error searching accounts.');\n\t\t\t});\n\t\t}\n\t}\n\n\tlet ___request = matter.utils.request;\n\tlet _____logger = matter.utils.logger;\n\t//Actions for specific user\n\tclass Template {\n\t\tconstructor(templateData) {\n\t\t\t//Call matter with name and settings\n\t\t\tif (templateData && _.isString(templateData)) {\n\t\t\t\tthis.name = templateData;\n\t\t\t} else {\n\t\t\t\t_____logger.error({\n\t\t\t\t\tdescription: 'Template data is required to start a Template action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Template'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Template data is required to start a Template action.');\n\t\t\t}\n\t\t}\n\t\tget templateEndpoint() {\n\t\t\treturn `${matter.endpoint}/templates/${this.name}`;\n\t\t}\n\t\t//Get userlications or single userlication\n\t\tget() {\n\t\t\t_____logger.log({description: 'Get template called.', name: this.name, func: 'get', obj: 'Template'});\n\t\t\treturn ___request.get(this.templateEndpoint).then((response) => {\n\t\t\t\t_____logger.log({description: 'Get template responded.', response: response, func: 'get', obj: 'Template'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_____logger.error({description: 'Error getting template.', error: errRes, func: 'get', obj: 'Template'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update an userlication\n\t\tupdate(templateData) {\n\t\t\t_____logger.log({description: 'Update template called.', templateData: templateData, func: 'update', obj: 'Template'});\n\t\t\treturn ___request.put(this.templateEndpoint, templateData).then((response) => {\n\t\t\t\t_____logger.log({description: 'Update template responded.', response: response, templateData: templateData, func: 'update', obj: 'Template'});\n\t\t\t\t//TODO: Return template object\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_____logger.error({description: 'Error updating template.', error: errRes, func: 'update', obj: 'Template'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete a template\n\t\tdel(templateData) {\n\t\t\t_____logger.log({description: 'Delete template called.', templateData: templateData, func: 'del', obj: 'Template'});\n\t\t\treturn ___request.delete(this.endpoint, templateData).then((response) => {\n\t\t\t\t_____logger.log({description: 'Template deleted successfully.', response: response, func: 'del', obj: 'Template'});\n\t\t\t\t//TODO: Return template object\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_____logger.error({description: 'Error deleting template.', error: errRes, func: 'del', obj: 'Template'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet ____logger = matter.utils.logger;\n\tlet __request = matter.utils.request;\n\n\t//Actions for templates list\n\tclass TemplatesAction {\n\t\tget templatesEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'templates'];\n\t\t\t//Check for app groups action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t// endpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t\t____logger.log({description: 'Templates action is not currently supported for a specific application.', func: 'accountsEndpoint', obj: 'AccountsAction'});\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t____logger.log({description: 'Templates endpoint built.', endpoint: endpointStr, func: 'templatesEndpoint', obj: 'TemplatesAction'});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get templates or single application\n\t\tget() {\n\t\t\t____logger.log({description: 'Get template called.', func: 'get', obj: 'TemplatesAction'});\n\t\t\treturn __request.get(this.templatesEndpoint).then((response) => {\n\t\t\t\t____logger.log({description: 'Templates loaded.', response: response, func: 'get', obj: 'TemplatesAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t____logger.error({description: 'Error getting templates.', error: errRes, func: 'get', obj: 'TemplatesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\t____logger.log({description: 'Add template called.', func: 'add', obj: 'TemplatesAction'});\n\t\t\treturn __request.post(this.templatesEndpoint, appData).then((response) => {\n\t\t\t\t____logger.log({description: 'Templates added successfully.', func: 'add', obj: 'TemplatesAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t____logger.error({description: 'Error adding template.', error: errRes, func: 'add', obj: 'TemplatesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Search with partial of username\n\t\tsearch(query) {\n\t\t\t____logger.log({description: 'Search template called.', query: query, func: 'search', obj: 'TemplatesAction'});\n\t\t\tvar searchEndpoint = this.templatesEndpoint + '/search/';\n\t\t\tif (query && _.isString(query)) {\n\t\t\t\tsearchEndpoint += query;\n\t\t\t}\n\t\t\t____logger.log({description: 'Search endpoint created.', endpoint: searchEndpoint, func: 'search', obj: 'TemplatesAction'});\n\t\t\treturn __request.get(searchEndpoint).then((response) => {\n\t\t\t\t____logger.log({description: 'Template(s) found successfully.', response: response, endpoint: searchEndpoint, func: 'search', obj: 'TemplatesAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t____logger.log({description: 'Error searching for templates.', query: query, error: errRes, endpoint: searchEndpoint, func: 'search', obj: 'TemplatesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\t//Convenience vars\n\tlet ___logger = matter.utils.logger;\n\n\tclass File {\n\t\tconstructor(actionData) {\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'fileData') && _.has(actionData, 'app')) {\n\t\t\t\t_.extend(this, actionData.fileData);\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\tthis.pathArray = this.path.split('/');\n\t\t\t\t//Get name from data or from pathArray\n\t\t\t\tthis.name = _.has(actionData.fileData, 'name') ? actionData.fileData.name : this.pathArray[this.pathArray.length - 1];\n\t\t\t} else if (actionData && !_.isObject(actionData)) {\n\t\t\t\t___logger.error({\n\t\t\t\t\tdescription: 'File data is not an object. File data must be an object that includes path and appName.',\n\t\t\t\t\tfunc: 'constructor', obj: 'File'\n\t\t\t\t});\n\t\t\t\t//TODO: Get appName from path data?\n\t\t\t\tthrow new Error('File data must be an object that includes path and appName.');\n\t\t\t} else {\n\t\t\t\t___logger.error({description: 'File data that includes path and app is needed to create a File action.', func: 'constructor', obj: 'File'});\n\t\t\t\tthrow new Error('File data with path and app is needed to create file action.');\n\t\t\t}\n\t\t\tthis.type = 'file';\n\t\t\t___logger.debug({description: 'File object constructed.', file: this, func: 'constructor', obj: 'File'});\n\t\t}\n\n\t\tget() {\n\t\t\tif (!this.app || !this.app.frontend) {\n\t\t\t\t___logger.log({\n\t\t\t\t\tdescription: 'Application Frontend data not available. Calling applicaiton get.', func: 'get', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn this.app.get().then((appData) => {\n\t\t\t\t\tthis.app = appData;\n\t\t\t\t\t___logger.log({\n\t\t\t\t\t\tdescription: 'Application get successful. Getting file.',\n\t\t\t\t\t\tapp: appData, func: 'get', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\treturn this.get();\n\t\t\t\t}, (err) => {\n\t\t\t\t\t___logger.error({\n\t\t\t\t\t\tdescription: 'Application Frontend data not available.',\n\t\t\t\t\t\terror: err, func: 'get', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject({message: 'Front end data is required to get file.'});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t___logger.log({\n\t\t\t\t\t\tdescription: 'AWS creds do not exist, so they are being set.',\n\t\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\t_setAWSConfig();\n\t\t\t\t}\n\t\t\t\tlet s3 = new AWS.S3();\n\t\t\t\tlet getData = {\n\t\t\t\t\tBucket: this.app.frontend.bucketName,\n\t\t\t\t\tKey: this.path\n\t\t\t\t};\n\t\t\t\t//Set contentType from actionData to ContentType parameter of new object\n\t\t\t\tif (this.contentType) {\n\t\t\t\t\tgetData.ContentType = this.contentType;\n\t\t\t\t}\n\t\t\t\t___logger.debug({\n\t\t\t\t\tdescription: 'File get params built.', getData: getData,\n\t\t\t\t\tfile: this, func: 'get', obj: 'File'\n\t\t\t\t});\n\t\t\t\tlet finalData = this;\n\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ts3.getObject(getData, (err, data) => {\n\t\t\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\tdescription: 'File loaded successfully.',\n\t\t\t\t\t\t\t\tdata: data, func: 'get', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (_.has(data, 'Body')) {\n\t\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\t\tdescription: 'File has content.',\n\t\t\t\t\t\t\t\t\tcontent: data.Body.toString(),\n\t\t\t\t\t\t\t\t\tmetaData: data.Metadata.toString(),\n\t\t\t\t\t\t\t\t\tfunc: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tfinalData.content = data.Body.toString();\n\t\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\t\tdescription: 'File content has been added to file.',\n\t\t\t\t\t\t\t\t\tfile: finalData,\n\t\t\t\t\t\t\t\t\tfunc: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresolve(finalData);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\t\tdescription: 'Error loading file from S3.',\n\t\t\t\t\t\t\t\terror: err, func: 'get', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t//Alias for get\n\t\topen() {\n\t\t\treturn this.get();\n\t\t}\n\t\tpublish(fileData) {\n\t\t\t//TODO: Publish file to application\n\t\t\t___logger.debug({description: 'File publish called.', file: this, fileData: fileData, func: 'publish', obj: 'File'});\n\t\t\tif (!this.app.frontend) {\n\t\t\t\t___logger.error({description: 'Application Frontend data not available. Make sure to call .get().', func: 'publish', obj: 'File'});\n\t\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t\t} else {\n\t\t\t\tif (!_.has(fileData, ['content', 'path'])) {\n\t\t\t\t\t___logger.error({description: 'File data including path and content required to publish.', func: 'publish', obj: 'File'});\n\t\t\t\t\treturn Promise.reject({message: 'File data including path and content required to publish.'});\n\t\t\t\t}\n\t\t\t\tlet saveParams = {\n\t\t\t\t\tBucket: this.app.frontend.bucketName,\n\t\t\t\t\tKey: fileData.path,\n\t\t\t\t\tBody: fileData.content,\n\t\t\t\t\tACL: 'public-read'\n\t\t\t\t};\n\t\t\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\t\t\tif (this.contentType) {\n\t\t\t\t\tsaveParams.ContentType = this.contentType;\n\t\t\t\t}\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t___logger.debug({description: 'AWS creds do not exist, so they are being set.', func: 'publish', obj: 'File'});\n\t\t\t\t\t_setAWSConfig();\n\t\t\t\t}\n\t\t\t\tlet s3 = new AWS.S3();\n\n\t\t\t\t___logger.debug({description: 'File publish params built.', saveParams: saveParams, fileData: this, func: 'publish', obj: 'File'});\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ts3.putObject(saveParams, function(err, data) {\n\t\t\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t___logger.log({description: 'File saved successfully.', response: data, func: 'publish', obj: 'File'});\n\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t}\telse {\n\t\t\t\t\t\t\t___logger.error({description: 'Error saving file to S3.', error: err, func: 'publish', obj: 'File'});\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tdel() {\n\t\t\tif (!this.app || !this.app.frontend) {\n\t\t\t\t___logger.log({description: 'Application Frontend data not available. Calling applicaiton get.', func: 'get', obj: 'File'});\n\t\t\t\treturn this.app.get().then((appData) => {\n\t\t\t\t\tthis.app = appData;\n\t\t\t\t\t___logger.log({description: 'Application get successful. Getting file.', app: appData, func: 'get', obj: 'File'});\n\t\t\t\t\treturn this.get();\n\t\t\t\t}, (err) => {\n\t\t\t\t\t___logger.error({description: 'Application Frontend data not available. Make sure to call .get().', error: err, func: 'get', obj: 'File'});\n\t\t\t\t\treturn Promise.reject({message: 'Front end data is required to get file.'});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t___logger.debug({description: 'AWS creds do not exist, so they are being set.', func: 'publish', obj: 'File'});\n\t\t\t\t\t_setAWSConfig();\n\t\t\t\t}\n\t\t\t\tlet s3 = new AWS.S3();\n\t\t\t\tlet saveParams = {\n\t\t\t\t\tBucket: this.app.frontend.bucketName,\n\t\t\t\t\tKey: this.path\n\t\t\t\t};\n\t\t\t\t//Set contentType from actionData to ContentType parameter of new object\n\t\t\t\tif (this.contentType) {\n\t\t\t\t\tsaveParams.ContentType = this.contentType;\n\t\t\t\t}\n\t\t\t\t___logger.debug({description: 'File get params built.', saveParams: saveParams, file: this, func: 'get', obj: 'File'});\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ts3.deleteObject(saveParams, function(err, data) {\n\t\t\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t___logger.info({description: 'File loaded successfully.', fileData: data, func: 'get', obj: 'File'});\n\t\t\t\t\t\t\tif (_.has(data, 'Body')) {\n\t\t\t\t\t\t\t\t___logger.info({description: 'File has content.', fileData: data.Body.toString(), func: 'get', obj: 'File'});\n\t\t\t\t\t\t\t\tresolve(data.Body.toString());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\telse {\n\t\t\t\t\t\t\t___logger.error({description: 'Error loading file from S3.', error: err, func: 'get', obj: 'File'});\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tget fileType() {\n\t\t\tif (this.ext == 'js') {\n\t\t\t\treturn 'javascript';\n\t\t\t} else {\n\t\t\t\treturn this.ext;\n\t\t\t}\n\t\t}\n\t\tget ext() {\n\t\t\tlet re = /(?:\\.([^.]+))?$/;\n\t\t\treturn re.exec(this.name)[1];\n\t\t}\n\t\tgetTypes() {\n\t\t\t//Get content type and file type from extension\n\t\t}\n\t\topenWithFirepad() {\n\t\t\t//TODO:Create new Firepad instance within div\n\t\t}\n\t\tgetDefaultContent() {\n\t\t\t//TODO: Fill with default data for matching file type\n\t\t}\n\t}\n\t//------------------ Utility Functions ------------------//\n\n\t// AWS Config\n\tfunction _setAWSConfig() {\n\t\tAWS.config.update({\n\t\t\tcredentials: new AWS.CognitoIdentityCredentials({\n\t\t\tIdentityPoolId: config.aws.cognito.poolId\n\t\t}),\n\t\t\tregion: config.aws.region\n\t\t});\n\t}\n\n\t//Convenience vars\n\tlet __logger = matter.utils.logger;\n\n\tclass Files {\n\t\tconstructor(filesData) {\n\t\t\tif (filesData && _.isObject(filesData) && _.has(filesData, 'app')) { //Data is object containing directory data\n\t\t\t\tthis.app = filesData.app;\n\t\t\t} else if (filesData && _.isString(filesData)) { //Data is string name\n\t\t\t\tthis.app = {name: filesData};\n\t\t\t} else if (filesData && _.isArray(filesData)) {\n\t\t\t\t//TODO: Handle an array of files being passed as data\n\t\t\t\t__logger.error({description: 'Action data object with name is required to start a Files Action.', func: 'constructor', obj: 'Files'});\n\t\t\t\tthrow new Error('Files Data object with application is required to start a Files action.');\n\t\t\t} else {\n\t\t\t\t__logger.error({description: 'Action data object with name is required to start a Files Action.', func: 'constructor', obj: 'Files'});\n\t\t\t\tthrow new Error('Files Data object with name is required to start a Files action.');\n\t\t\t}\n\t\t\t__logger.debug({description: 'Files object constructed.', func: 'constructor', obj: 'Files'});\n\t\t}\n\t\tpublish() {\n\t\t\t//TODO: Publish all files\n\t\t}\n\t\tget() {\n\t\t\tif (!this.app.frontend || !this.app.frontend.bucketName) {\n\t\t\t\t__logger.warn({description: 'Application Frontend data not available. Calling .get().', app: this.app, func: 'get', obj: 'Files'});\n\t\t\t\treturn this.app.get().then((applicationData) => {\n\t\t\t\t\t__logger.log({description: 'Application get returned.', data: applicationData, func: 'get', obj: 'Files'});\n\t\t\t\t\tthis.app = applicationData;\n\t\t\t\t\tif (_.has(applicationData, 'frontend')) {\n\t\t\t\t\t\treturn this.get();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t__logger.error({description: 'Application does not have Frontend to get files from.', func: 'get', obj: 'Files'});\n\t\t\t\t\t\treturn Promise.reject({message: 'Application does not have frontend to get files from.'});\n\t\t\t\t\t}\n\t\t\t\t}, (err) => {\n\t\t\t\t\t__logger.error({\n\t\t\t\t\t\tdescription: 'Application Frontend data not available. Make sure to call .get().',\n\t\t\t\t\t\terror: err, func: 'get', obj: 'Files'});\n\t\t\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t// logger.info('AWS creds are being updated to make request');\n\t\t\t\t\tsetAWSConfig();\n\t\t\t\t}\n\t\t\t\tlet s3 = new AWS.S3();\n\t\t\t\tlet listParams = {Bucket: this.app.frontend.bucketName};\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ts3.listObjects(listParams, function(err, data) {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t__logger.info({description: 'Files list loaded.', filesData: data, func: 'get', obj: 'Files'});\n\t\t\t\t\t\t\treturn resolve(data.Contents);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t__logger.error({description: 'Error getting files from S3.', error: err, func: 'get', obj: 'Files'});\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tadd() {\n\t\t\t//TODO: Add a file to files list\n\t\t}\n\t\tdel() {\n\t\t\t//TODO: Delete a file from files list\n\t\t}\n\t\tbuildStructure() {\n\t\t\t__logger.debug({description: 'Build Structure called.', func: 'buildStructure', obj: 'Application'});\n\t\t\treturn this.get().then((filesArray) => {\n\t\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\t\t//TODO: have child objects have correct classes (file/folder)\n\t\t\t\t__logger.log({description: 'Child struct from array.', childStructure: childStruct, func: 'buildStructure', obj: 'Application'});\n\t\t\t\treturn childStruct;\n\t\t\t}, (err) => {\n\t\t\t\t__logger.error({description: 'Error getting application files.', error: err, func: 'buildStructure', obj: 'Application'});\n\t\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t\t});\n\t\t}\n\t\t//ALIAS FOR buildStructure\n\t\t// get structure() {\n\t\t// \treturn this.buildStructure();\n\t\t// }\n\t}\n\t//------------------ Utility Functions ------------------//\n\n\t// AWS Config\n\tfunction setAWSConfig() {\n\t\tAWS.config.update({\n\t\t\tcredentials: new AWS.CognitoIdentityCredentials({\n\t\t\tIdentityPoolId: config.aws.cognito.poolId\n\t\t}),\n\t\t\tregion: config.aws.region\n\t\t});\n\t}\n\t//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n\t//Examples for two files (index.html and /testFolder/file.js):\n\t//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n\t//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\n\tfunction childrenStructureFromArray(fileArray) {\n\t\t// logger.log('childStructureFromArray called:', fileArray);\n\t\t//Create a object for each file that stores the file in the correct 'children' level\n\t\tvar mappedStructure = fileArray.map(function(file) {\n\t\t\treturn buildStructureObject(file);\n\t\t});\n\t\treturn combineLikeObjs(mappedStructure);\n\t}\n\t//Convert file with key into a folder/file children object\n\tfunction buildStructureObject(file) {\n\t\tvar pathArray;\n\t\t// console.log('buildStructureObject with:', file);\n\t\tif (_.has(file, 'path')) {\n\t\t\t//Coming from files already having path (structure)\n\t\t\tpathArray = file.path.split('/');\n\t\t} else {\n\t\t\t//Coming from aws\n\t\t\tpathArray = file.Key.split('/');\n\t\t\t// console.log('file before pick:', file);\n\t\t\tfile = _.pick(file, 'Key');\n\t\t\tfile.path = file.Key;\n\t\t\tfile.name = file.Key;\n\t\t}\n\t\tvar currentObj = file;\n\t\tif (pathArray.length == 1) {\n\t\t\tcurrentObj.name = pathArray[0];\n\t\t\tif (!_.has(currentObj,'type')) {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t}\n\t\t\tcurrentObj.path = pathArray[0];\n\t\t\treturn currentObj;\n\t\t} else {\n\t\t\tvar finalObj = {};\n\t\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = _.take(list, ind + 1).join('/');\n\t\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t\t//TODO: Find out why this works\n\t\t\t\t\tif (ind == 0) {\n\t\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t\t} else {\n\t\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\t\tif (file.$id) {\n\t\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn finalObj;\n\t\t}\n\t}\n\t//Recursivley combine children of object's that have the same names\n\tfunction combineLikeObjs(mappedArray) {\n\t\tvar takenNames = [];\n\t\tvar finishedArray = [];\n\t\t_.each(mappedArray, (obj) => {\n\t\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\t\ttakenNames.push(obj.name);\n\t\t\t\tfinishedArray.push(obj);\n\t\t\t} else {\n\t\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t\t//Combine children of like objects\n\t\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t\t// logger.log('extended obj:',likeObj);\n\t\t\t}\n\t\t});\n\t\treturn finishedArray;\n\t}\n\n\t//Convenience vars\n\tlet _request = matter.utils.request;\n\tlet _logger = matter.utils.logger;\n\n\t/**\n\t * Application class.\n\t *\n\t */\n\tclass Application {\n\t\tconstructor(appData) {\n\t\t\t//Setup application data based on input\n\t\t\tif (appData && _.isObject(appData)) {\n\t\t\t\t_.extend(this, appData);\n\t\t\t} else if (appData && _.isString(appData)) {\n\t\t\t\tthis.name = appData;\n\t\t\t}\n\t\t\tif (Firebase && _.has(config, 'fbUrl') && _.has(this, 'name')) {\n\t\t\t\tthis.fbRef = new Firebase(config.fbUrl + this.name);\n\t\t\t}\n\t\t\t// logger.debug({description: 'Application object created.', application: this, func: 'constructor', obj: 'Application'});\n\t\t}\n\t\tget appEndpoint() {\n\t\t\treturn `${matter.endpoint}/apps/${this.name}`;\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Application get called.', func: 'get', obj: 'Application'\n\t\t\t});\n\t\t\treturn _request.get(this.appEndpoint).then((response) => {\n\t\t\t\t_logger.info({\n\t\t\t\t\tdescription: 'Application loaded successfully.', response: response,\n\t\t\t\t\tapplication: new Application(response), func: 'get', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_logger.error({\n\t\t\t\t\tdescription: 'Error getting Application.',\n\t\t\t\t\tmessage: errRes.response.text ,error: errRes,\n\t\t\t\t\tfunc: 'get', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\t//Update an application\n\t\tupdate(appData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Application update called.',\n\t\t\t\tfunc: 'update', obj: 'Application'\n\t\t\t});\n\t\t\treturn _request.put(this.appEndpoint, appData).then((response) => {\n\t\t\t\t_logger.info({\n\t\t\t\t\tdescription: 'Application updated successfully.',\n\t\t\t\t\tresponse: response, func: 'update', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_logger.error({\n\t\t\t\t\tdescription: 'Error updating application.',\n\t\t\t\t\terror: errRes, func: 'update', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\n\t\taddStorage() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Application add storage called.', application: this,\n\t\t\t\tfunc: 'addStorage', obj: 'Application'\n\t\t\t});\n\t\t\treturn _request.post(`${this.appEndpoint}/storage`, {}).then((response) => {\n\t\t\t\t_logger.info({\n\t\t\t\t\tdescription: 'Storage successfully added to application.',\n\t\t\t\t\tresponse: response, application: new Application(response),\n\t\t\t\t\tfunc: 'addStorage', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_logger.error({\n\t\t\t\t\tdescription: 'Error adding storage to application.',\n\t\t\t\t\terror: errRes, func: 'addStorage', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\tapplyTemplate() {\n\t\t\t_logger.error({\n\t\t\t\tdescription: 'Applying templates to existing applications is not currently supported.',\n\t\t\t\tfunc: 'applyTemplate', obj: 'Application'\n\t\t\t});\n\t\t\treturn _request.post(this.appEndpoint, {}).then((response) => {\n\t\t\t\t_logger.info({\n\t\t\t\t\tdescription: 'Template successfully applied to application.',\n\t\t\t\t\tresponse: response, application: this,\n\t\t\t\t\tfunc: 'applyTemplate', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_logger.error({\n\t\t\t\t\tdescription: 'Error applying template to application.',\n\t\t\t\t\terror: errRes, application: this,\n\t\t\t\t\tfunc: 'applyTemplate', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\t//Files object that contains files methods\n\t\tget Files() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications files action called.',\n\t\t\t\tapplication: this, func: 'files', obj: 'Application'\n\t\t\t});\n\t\t\treturn new Files({app: this});\n\t\t}\n\t\tFile(fileData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications file action called.',\n\t\t\t\tfileData: fileData, application: this,\n\t\t\t\tfunc: 'file', obj: 'Application'\n\t\t\t});\n\t\t\treturn new File({app: this, fileData: fileData});\n\t\t}\n\t\tget Users() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications users action called.',\n\t\t\t\tapplication: this, func: 'user', obj: 'Application'\n\t\t\t});\n\t\t\treturn new AccountsAction({app: this});\n\t\t}\n\t\tUser(userData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications user action called.',\n\t\t\t\tuserData: userData, application: this, func: 'user',\n\t\t\t\tobj: 'Application'\n\t\t\t});\n\t\t\treturn new Account({app: this, userData: userData});\n\t\t}\n\t\tget Accounts() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications account action called.',\n\t\t\t\tapplication: this, func: 'user', obj: 'Application'\n\t\t\t});\n\t\t\treturn new AccountsAction({app: this});\n\t\t}\n\t\tAccount(userData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications account action called.',\n\t\t\t\tuserData: userData, application: this,\n\t\t\t\tfunc: 'user', obj: 'Application'\n\t\t\t});\n\t\t\treturn new Account({app: this, userData: userData});\n\t\t}\n\t\tget Groups() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications groups action called.',\n\t\t\t\tapplication: this, func: 'groups', obj: 'Application'\n\t\t\t});\n\t\t\treturn new GroupsAction({app: this});\n\t\t}\n\t\tGroup(groupData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications group action called.',\n\t\t\t\tgroupData: groupData, application: this,\n\t\t\t\tfunc: 'group', obj: 'Application'\n\t\t\t});\n\t\t\treturn new Group({app: this, groupData: groupData});\n\t\t}\n\t\tget Directories() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications directories action called.',\n\t\t\t\tapplication: this, func: 'directories', obj: 'Application'\n\t\t\t});\n\t\t\treturn new DirectoriesAction({app: this});\n\t\t}\n\t\tDirectory(directoryData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications directory action called.',\n\t\t\t\tdirectoryData: directoryData, application: this,\n\t\t\t\tfunc: 'directory', obj: 'Application'\n\t\t\t});\n\t\t\treturn new Directory({app: this, directoryData: directoryData});\n\t\t}\n\t}\n\n\tlet request = matter.utils.request;\n\tlet logger = matter.utils.logger;\n\n\t//Actions for applications list\n\tclass AppsAction {\n\t\tconstructor() {\n\t\t\t//Call matter with name and settings\n\t\t}\n\t\tget appsEndpoint() {\n\t\t\treturn `${matter.endpoint}/apps`;\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\tlogger.debug({description: 'Apps get called.', action: this, func: 'get', obj: 'AppsAction'});\n\t\t\treturn request.get(this.appsEndpoint).then((response) => {\n\t\t\t\tlogger.info({description: 'Apps data loaded successfully.', response: response, func: 'get', obj: 'AppsAction'});\n\t\t\t\t//TODO: Return application object\n\t\t\t\t// return new Application(response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error getting apps data.', error: errRes, func: 'get', obj: 'AppsAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\tlogger.debug({description: 'Application add called.', appData: appData, func: 'add', obj: 'AppsAction'});\n\t\t\treturn matter.utils.request.post(this.appsEndpoint, appData).then((response) => {\n\t\t\t\tlogger.info({description: 'Application added successfully.', response: response, func: 'add', obj: 'AppsAction'});\n\t\t\t\t// TODO: Return application object\n\t\t\t\t// return new Application(response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error adding app.', error: errRes, func: 'add', obj: 'AppsAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**Grout Client Class\n\t * @ description Extending matter provides token storage and login/logout/signup capabilities\n\t */\n\tclass Grout extends Matter {\n\t\t//TODO: Use getter/setter to make this not a function\n\t\tconstructor() {\n\t\t\t//Call matter with tessellate\n\t\t\tsuper(config.appName, config.matterOptions);\n\t\t}\n\t\t//Start a new Apps Action\n\t\tget Apps() {\n\t\t\tthis.utils.logger.debug({\n\t\t\t\tdescription: 'Apps Action called.', action: new AppsAction(),\n\t\t\t\tfunc: 'Apps', obj: 'Grout'\n\t\t\t});\n\t\t\treturn new AppsAction();\n\t\t}\n\t\t//Start a new App action\n\t\tApp(appName) {\n\t\t\tthis.utils.logger.debug({description: 'Application action called.', appName: appName, template: new Application(appName), func: 'App', obj: 'Grout'});\n\t\t\treturn new Application(appName);\n\t\t}\n\t\t//Start a new Apps Action\n\t\tget Templates() {\n\t\t\tthis.utils.logger.debug({description: 'Templates Action called.', action: new TemplatesAction(), func: 'Templates', obj: 'Grout'});\n\t\t\treturn new TemplatesAction();\n\t\t}\n\t\t//Start a new App action\n\t\tTemplate(templateData) {\n\t\t\tthis.utils.logger.debug({description: 'Template Action called.', templateData: templateData, template: new Template(templateData), func: 'Template', obj: 'Grout'});\n\t\t\treturn new Template(templateData);\n\t\t}\n\t\t//Start a new Accounts action\n\t\tget Accounts() {\n\t\t\tthis.utils.logger.debug({description: 'Account Action called.', action: new AccountsAction(), func: 'users', obj: 'Grout'});\n\t\t\treturn new AccountsAction();\n\t\t}\n\t\t//Start a new Account action\n\t\tAccount(userData) {\n\t\t\tthis.utils.logger.debug({description: 'Account Action called.', userData: userData, user: new Account(userData), func: 'user', obj: 'Grout'});\n\t\t\treturn new Account(userData);\n\t\t}\n\t\t//ALIAS OF ACCOUNTS\n\t\t//Start a new Accounts action\n\t\tget Users() {\n\t\t\tthis.utils.logger.debug({description: 'Accounts Action called.', action: new AccountsAction(), func: 'Users', obj: 'Grout'});\n\t\t\treturn new AccountsAction();\n\t\t}\n\t\t//ALIAS OF ACCOUNT\n\t\t//Start a new Account action\n\t\tUser(userData) {\n\t\t\tthis.utils.logger.debug({description: 'Account Action called.', userData: userData, user: new Account(userData), func: 'user', obj: 'Grout'});\n\t\t\treturn new Account(userData);\n\t\t}\n\t\t//Start a new Groups action\n\t\tget Groups() {\n\t\t\tthis.utils.logger.debug({\n\t\t\t\tdescription: 'Groups Action called.', action: new GroupsAction(), func: 'groups', obj: 'Grout'\n\t\t\t});\n\t\t\treturn new GroupsAction();\n\t\t}\n\t\t//Start a new Group action\n\t\tGroup(groupData) {\n\t\t\tthis.utils.logger.debug({\n\t\t\t\tdescription: 'Group Action called.', groupData: groupData,\n\t\t\t\taction: new Group({app: this, groupData: groupData}),\n\t\t\t\tfunc: 'group', obj: 'Grout'\n\t\t\t});\n\t\t\treturn new Group(groupData);\n\t\t}\n\t\t//Start a new Directories action\n\t\tget Directories() {\n\t\t\tthis.utils.logger.debug({\n\t\t\t\tdescription: 'Directories Action called.',\n\t\t\t\taction: new DirectoriesAction(), func: 'directories', obj: 'Grout'\n\t\t\t});\n\t\t\treturn new DirectoriesAction();\n\t\t}\n\t\t//Start a new Group action\n\t\tDirectory(directoryData) {\n\t\t\tthis.utils.logger.debug({\n\t\t\t\tdescription: 'Directory Action called.', directoryData: directoryData,\n\t\t\t\taction: new Directory(directoryData), func: 'directory', obj: 'Grout'\n\t\t\t});\n\t\t\treturn new Directory(directoryData);\n\t\t}\n\t}\n\n\treturn Grout;\n\n}));"],"sourceRoot":"/source/"}