{"version":3,"sources":["grout.min.js","/source/grout.js"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","call","parent","getPrototypeOf","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","global","factory","exports","module","require","define","amd","Grout","Matter","_","Firepad","AWS","Firebase","this","_setAWSConfig","config","update","credentials","CognitoIdentityCredentials","IdentityPoolId","aws","cognito","poolId","region","setAWSConfig","childrenStructureFromArray","fileArray","mappedStructure","map","file","buildStructureObject","combineLikeObjs","pathArray","has","path","split","Key","pick","name","console","error","currentObj","type","finalObj","each","loc","ind","list","take","join","children","$id","mappedArray","takenNames","finishedArray","obj","indexOf","push","likeObj","findWhere","union","serverUrl","tokenName","fbUrl","appName","matterOptions","localServer","logLevel","params","AuthRoleArn","UnauthRoleArn","matter","________request","utils","request","___________logger","logger","_Directory","actionData","isObject","directoryName","isString","description","func","Error","directoryEndpoint","then","response","info","errRes","Promise","reject","directoryData","debug","put","endpointArray","endpoint","app","splice","endpointStr","log","_______request","__________logger","DirectoriesAction","action","providedData","directoriesEndpoint","descrption","appData","post","query","searchEndpoint","resolve","______request","_________logger","_Group","groupData","groupEndpoint","text","del","accountsData","accountsArray","message","accounts","_____request","________logger","GroupsAction","groupsEndpoint","newGroupData","____request","_______logger","_Account","accountData","extend","username","accountEndpoint","______logger","AccountsAction","accountsEndpoint","newAccount","___request","_____logger","_Template","templateData","templateEndpoint","____logger","__request","TemplatesAction","templatesEndpoint","___logger","_File","fileData","ref","pathArrayFromRef","_this","headless","fbRef","getText","dispose","_this2","frontend","err","_ret","s3","S3","getData","Bucket","bucketName","contentType","ContentType","finalData","v","getObject","data","content","Body","toString","metaData","Metadata","_this3","_ret2","saveParams","ACL","putObject","_this4","_ret3","deleteObject","editor","_this5","firepad","firepadFromAce","on","setTheme","fromACE","settings","defaultText","isLoggedIn","currentUser","userId","_this6","child","usersSnap","val","usersArray","forEach","userSnap","user","users","o","ext","re","exec","safeArray","replace","safePathArray","url","safePath","Headless","__logger","Files","filesData","isArray","_this7","warn","pathArrayFromFbRef","once","filesSnap","filesArray","objSnap","objData","hasChild","_this8","applicationData","_ret5","listParams","listObjects","Contents","childStructure","childStruct","removeArray","shift","fbRefArray","_request","_logger","Application","appEndpoint","application","_this9","userData","AppsAction","appsEndpoint","_Matter","template"],"mappings":"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","file":"grout.min.js","sourcesContent":["var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kyper-matter'), require('lodash'), require('firepad'), require('aws-sdk'), require('firebase')) : typeof define === 'function' && define.amd ? define(['kyper-matter', 'lodash', 'firepad', 'aws-sdk', 'firebase'], factory) : global.Grout = factory(global.Matter, global._, global.Firepad, global.AWS, global.Firebase);\n})(this, function (Matter, _, Firepad, AWS, Firebase) {\n\t'use strict';\n\n\tMatter = 'default' in Matter ? Matter['default'] : Matter;\n\t_ = 'default' in _ ? _['default'] : _;\n\tFirepad = 'default' in Firepad ? Firepad['default'] : Firepad;\n\tAWS = 'default' in AWS ? AWS['default'] : AWS;\n\tFirebase = 'default' in Firebase ? Firebase['default'] : Firebase;\n\n\tvar config = {\n\t\tserverUrl: 'http://tessellate.elasticbeanstalk.com',\n\t\ttokenName: 'grout',\n\t\tfbUrl: 'https://kyper-tech.firebaseio.com/tessellate',\n\t\tappName: 'tessellate',\n\t\tmatterOptions: {\n\t\t\tlocalServer: false,\n\t\t\tlogLevel: 'trace'\n\t\t},\n\t\taws: {\n\t\t\tregion: 'us-east-1',\n\t\t\tcognito: {\n\t\t\t\tpoolId: 'us-east-1:72a20ffd-c638-48b0-b234-3312b3e64b2e',\n\t\t\t\tparams: {\n\t\t\t\t\tAuthRoleArn: 'arn:aws:iam::823322155619:role/Cognito_TessellateUnauth_Role',\n\t\t\t\t\tUnauthRoleArn: 'arn:aws:iam::823322155619:role/Cognito_TessellateAuth_Role'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar matter = new Matter(config.appName, config.matterOptions);\n\n\tvar ________request = matter.utils.request;\n\tvar ___________logger = matter.utils.logger;\n\n\t//Actions for specific directory\n\n\tvar _Directory = (function () {\n\t\tfunction _Directory(actionData) {\n\t\t\t_classCallCheck(this, _Directory);\n\n\t\t\tif (actionData && _.isObject(actionData) && (_.has(actionData, 'directoryName') || _.has(actionData, 'name'))) {\n\t\t\t\t//Data is object containing directory data\n\t\t\t\tthis.name = actionData.directoryName || actionData.name;\n\t\t\t\tif (_.has(actionData, 'appName')) {\n\t\t\t\t\tthis.appName = actionData.appName;\n\t\t\t\t}\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\t//Data is string name\n\t\t\t\tthis.name = actionData;\n\t\t\t} else {\n\t\t\t\t___________logger.error({\n\t\t\t\t\tdescription: 'Action data object with name is required to start a Directory Action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Directory Data object with name is required to start a Directory action.');\n\t\t\t}\n\t\t}\n\n\t\t_createClass(_Directory, [{\n\t\t\tkey: 'get',\n\n\t\t\t//Get userlications or single userlication\n\t\t\tvalue: function get() {\n\t\t\t\treturn ________request.get(this.directoryEndpoint).then(function (response) {\n\t\t\t\t\t___________logger.info({\n\t\t\t\t\t\tdescription: 'Directory data loaded successfully.',\n\t\t\t\t\t\tresponse: response, func: 'get', obj: 'Directory'\n\t\t\t\t\t});\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t___________logger.info({\n\t\t\t\t\t\tdescription: 'Error getting directory.',\n\t\t\t\t\t\terror: errRes, func: 'get', obj: 'Directory'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Update an Directory\n\t\t}, {\n\t\t\tkey: 'update',\n\t\t\tvalue: function update(directoryData) {\n\t\t\t\t___________logger.debug({\n\t\t\t\t\tdescription: 'Directory updated called.',\n\t\t\t\t\tdirectoryData: directoryData, func: 'update', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn matter.utils.request.put(this.directoryEndpoint, directoryData).then(function (response) {\n\t\t\t\t\t___________logger.info({\n\t\t\t\t\t\tdescription: 'Directory updated successfully.',\n\t\t\t\t\t\tdirectoryData: directoryData, response: response,\n\t\t\t\t\t\tfunc: 'update', obj: 'Directory'\n\t\t\t\t\t});\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t___________logger.error({\n\t\t\t\t\t\tdescription: 'Error updating directory.',\n\t\t\t\t\t\tdirectoryData: directoryData, error: errRes,\n\t\t\t\t\t\tfunc: 'update', obj: 'Directory'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Delete an Directory\n\t\t}, {\n\t\t\tkey: 'del',\n\t\t\tvalue: function del(directoryData) {\n\t\t\t\t___________logger.debug({\n\t\t\t\t\tdescription: 'Delete directory called.',\n\t\t\t\t\tdirectoryData: directoryData, func: 'del', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn ________request['delete'](this.directoryEndpoint, directoryData).then(function (response) {\n\t\t\t\t\t___________logger.info({\n\t\t\t\t\t\tdescription: 'Directory deleted successfully.',\n\t\t\t\t\t\tdirectoryData: directoryData, func: 'del', obj: 'Directory'\n\t\t\t\t\t});\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t___________logger.error({\n\t\t\t\t\t\tdescription: 'Error deleting directory.',\n\t\t\t\t\t\terror: errRes, func: 'del', obj: 'Directory'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'directoryEndpoint',\n\t\t\tget: function get() {\n\t\t\t\tvar endpointArray = [matter.endpoint, 'directories', this.name];\n\t\t\t\t//Check for app account action\n\t\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t\t}\n\t\t\t\t//Create string from endpointArray\n\t\t\t\tvar endpointStr = endpointArray.join('/');\n\t\t\t\t___________logger.log({\n\t\t\t\t\tdescription: 'Directory endpoint built.',\n\t\t\t\t\tendpoint: endpointStr, func: 'directoryEndpoint',\n\t\t\t\t\tobj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn endpointStr;\n\t\t\t}\n\t\t}]);\n\n\t\treturn _Directory;\n\t})();\n\n\tvar _______request = matter.utils.request;\n\tvar __________logger = matter.utils.logger;\n\n\t//Actions for directories list\n\n\tvar DirectoriesAction = (function () {\n\t\tfunction DirectoriesAction(actionData) {\n\t\t\t_classCallCheck(this, DirectoriesAction);\n\n\t\t\t//Check to see if action is for a specific app\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'app')) {\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\t__________logger.log({ description: 'Provided app data set to app parameter.', action: this, providedData: actionData, func: 'constructor', obj: 'DirectoriesAction' });\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\tthis.app = { name: actionData };\n\t\t\t\t__________logger.log({ description: 'App name provided as string was set.', action: this, providedData: actionData, func: 'constructor', obj: 'DirectoriesAction' });\n\t\t\t}\n\t\t\t__________logger.info({ description: 'New directories action.', action: this, providedData: actionData, func: 'constructor', obj: 'DirectoriesAction' });\n\t\t}\n\n\t\t_createClass(DirectoriesAction, [{\n\t\t\tkey: 'get',\n\n\t\t\t//Get users or single application\n\t\t\tvalue: function get() {\n\t\t\t\t__________logger.debug({ description: 'Directories get called.', action: this, func: 'get', obj: 'DirectoriesAction' });\n\t\t\t\treturn _______request.get(this.directoriesEndpoint).then(function (response) {\n\t\t\t\t\t__________logger.info({ descrption: 'Directories loaded successfully.', response: response, func: 'get', obj: 'DirectoriesAction' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t__________logger.error({ descrption: 'error getting users', error: errRes, func: 'get', obj: 'DirectoriesAction' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Add an application\n\t\t}, {\n\t\t\tkey: 'add',\n\t\t\tvalue: function add(appData) {\n\t\t\t\t__________logger.debug({ description: 'Add directory called.', action: this, appData: appData, func: 'get', obj: 'DirectoriesAction' });\n\t\t\t\treturn _______request.post(this.directoriesEndpoint, appData).then(function (response) {\n\t\t\t\t\t__________logger.log({ description: 'Application added successfully.', response: response, func: 'add', obj: 'DirectoriesAction' });\n\t\t\t\t\t//TODO: Return list of group objects\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t__________logger.error({ description: 'Error adding group.', error: errRes, func: 'add', obj: 'DirectoriesAction' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Search with partial of directory name\n\t\t}, {\n\t\t\tkey: 'search',\n\t\t\tvalue: function search(query) {\n\t\t\t\tvar searchEndpoint = this.directoriesEndpoint + '/search/';\n\t\t\t\tif (query && _.isString(query)) {\n\t\t\t\t\tsearchEndpoint += query;\n\t\t\t\t}\n\t\t\t\tif (!query || query == '') {\n\t\t\t\t\t__________logger.debug({ description: 'Null query, returning empty array.', func: 'search', obj: 'DirectoriesAction' });\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t\treturn _______request.get(searchEndpoint).then(function (response) {\n\t\t\t\t\t__________logger.log({ description: 'Found directories based on search.', response: response, func: 'search', obj: 'DirectoriesAction' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t__________logger.error({ description: 'Error searching directories.', error: errRes, func: 'search', obj: 'DirectoriesAction' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'directoriesEndpoint',\n\t\t\tget: function get() {\n\t\t\t\tvar endpointArray = [matter.endpoint, 'directories'];\n\t\t\t\t//Check for app groups action\n\t\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t\t}\n\t\t\t\t//Create string from endpointArray\n\t\t\t\tvar endpointStr = endpointArray.join('/');\n\t\t\t\t__________logger.log({ description: 'Directories endpoint built.', endpoint: endpointStr, func: 'directoriesEndpoint', obj: 'DirectoriesAction' });\n\t\t\t\treturn endpointStr;\n\t\t\t}\n\t\t}]);\n\n\t\treturn DirectoriesAction;\n\t})();\n\n\tvar ______request = matter.utils.request;\n\tvar _________logger = matter.utils.logger;\n\n\t//Actions for specific user\n\n\tvar _Group = (function () {\n\t\tfunction _Group(actionData) {\n\t\t\t_classCallCheck(this, _Group);\n\n\t\t\t//Call matter with name and settings\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'groupData')) {\n\t\t\t\t//Data is object containing group data\n\t\t\t\tthis.name = _.isObject(actionData.groupData) ? actionData.groupData.name : actionData.groupData;\n\t\t\t\tif (_.has(actionData, 'app')) {\n\t\t\t\t\tthis.app = actionData.app;\n\t\t\t\t}\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\t//Data is string name\n\t\t\t\tthis.name = actionData;\n\t\t\t} else {\n\t\t\t\t_________logger.error({ description: 'Action data is required to start a Group Action.', func: 'constructor', obj: 'Group' });\n\t\t\t\tthrow new Error('Username is required to start an Group');\n\t\t\t}\n\t\t}\n\n\t\t_createClass(_Group, [{\n\t\t\tkey: 'get',\n\n\t\t\t//Get userlications or single userlication\n\t\t\tvalue: function get() {\n\t\t\t\treturn ______request.get(this.groupEndpoint).then(function (response) {\n\t\t\t\t\t_________logger.info({ description: 'Group data loaded successfully.', response: response, func: 'get', obj: 'Group' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_________logger.info({ description: 'Error getting group.', error: errRes, func: 'get', obj: 'Group' });\n\t\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Update an Group\n\t\t}, {\n\t\t\tkey: 'update',\n\t\t\tvalue: function update(groupData) {\n\t\t\t\t_________logger.log({ description: 'Group updated called.', groupData: groupData, func: 'update', obj: 'Group' });\n\t\t\t\treturn matter.utils.request.put(this.groupEndpoint, groupData).then(function (response) {\n\t\t\t\t\t_________logger.info({ description: 'Group updated successfully.', groupData: groupData, response: response, func: 'update', obj: 'Group' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_________logger.error({ description: 'Error updating group.', groupData: groupData, error: errRes, func: 'update', obj: 'Group' });\n\t\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Delete an Group\n\t\t}, {\n\t\t\tkey: 'del',\n\t\t\tvalue: function del(groupData) {\n\t\t\t\t_________logger.log({ description: 'Delete group called.', groupData: groupData, func: 'del', obj: 'Group' });\n\t\t\t\treturn ______request.del(this.groupEndpoint, {}).then(function (response) {\n\t\t\t\t\t_________logger.info({ description: 'Group deleted successfully.', groupData: groupData, func: 'del', obj: 'Group' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_________logger.error({ description: 'Error deleting group.', error: errRes, text: errRes.response.text, groupData: groupData, func: 'del', obj: 'Group' });\n\t\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Update an Group\n\t\t}, {\n\t\t\tkey: 'addAccounts',\n\t\t\tvalue: function addAccounts(accountsData) {\n\t\t\t\t_________logger.log({ description: 'Group updated called.', accountsData: accountsData, func: 'update', obj: 'Group' });\n\t\t\t\tvar accountsArray = accountsData;\n\t\t\t\t//Handle provided data being a string list\n\t\t\t\tif (_.isString(accountsData)) {\n\t\t\t\t\taccountsArray = accountsData.split(',');\n\t\t\t\t}\n\t\t\t\t//Check item in array to see if it is a string (username) instead of _id\n\t\t\t\tif (_.isString(accountsArray[0])) {\n\t\t\t\t\t_________logger.error({ description: 'Accounts array only currently supports account._id not account.username.', accountsData: accountsData, func: 'update', obj: 'Group' });\n\t\t\t\t\treturn Promise.reject({ message: 'Accounts array only currently supports account._id not account.username.' });\n\t\t\t\t}\n\t\t\t\t_________logger.log({ description: 'Updating group with accounts array.', accountsArray: accountsArray, func: 'update', obj: 'Group' });\n\t\t\t\treturn this.update({ accounts: accountsArray }).then(function (response) {\n\t\t\t\t\t_________logger.info({ description: 'Account(s) added to group successfully.', response: response, func: 'addAccounts', obj: 'Group' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_________logger.error({ description: 'Error addAccountseting group.', error: errRes, func: 'addAccounts', obj: 'Group' });\n\t\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'groupEndpoint',\n\t\t\tget: function get() {\n\t\t\t\tvar endpointArray = [matter.endpoint, 'groups', this.name];\n\t\t\t\t//Check for app account action\n\n\t\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t\t}\n\t\t\t\t//Create string from endpointArray\n\t\t\t\tvar endpointStr = endpointArray.join('/');\n\t\t\t\t_________logger.log({ description: 'Group Endpoint built.', endpoint: endpointStr, func: 'groupEndpoint', obj: 'Group' });\n\t\t\t\treturn endpointStr;\n\t\t\t}\n\t\t}]);\n\n\t\treturn _Group;\n\t})();\n\n\tvar _____request = matter.utils.request;\n\tvar ________logger = matter.utils.logger;\n\n\t//Actions for users list\n\n\tvar GroupsAction = (function () {\n\t\tfunction GroupsAction(actionData) {\n\t\t\t_classCallCheck(this, GroupsAction);\n\n\t\t\t//Check to see if action is for a specific app\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'app')) {\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Provided app data set to app parameter.',\n\t\t\t\t\taction: this, providedData: actionData,\n\t\t\t\t\tfunc: 'constructor', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\tthis.app = { name: actionData };\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'App name provided as string was set.',\n\t\t\t\t\taction: this, providedData: actionData,\n\t\t\t\t\tfunc: 'constructor', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t}\n\t\t\t________logger.info({\n\t\t\t\tdescription: 'New Groups action.', action: this,\n\t\t\t\tprovidedData: actionData, func: 'constructor', obj: 'GroupsAction'\n\t\t\t});\n\t\t}\n\n\t\t_createClass(GroupsAction, [{\n\t\t\tkey: 'get',\n\n\t\t\t//Get users or single application\n\t\t\tvalue: function get() {\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Get group called.',\n\t\t\t\t\tfunc: 'get', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn _____request.get(this.groupsEndpoint).then(function (response) {\n\t\t\t\t\t________logger.info({\n\t\t\t\t\t\tdescription: 'Groups loaded successfully.',\n\t\t\t\t\t\tresponse: response, func: 'get', obj: 'GroupsAction'\n\t\t\t\t\t});\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t________logger.info({\n\t\t\t\t\t\tdescription: 'Error getting groups.', error: errRes,\n\t\t\t\t\t\tfunc: 'get', obj: 'GroupsAction'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Add an application\n\t\t}, {\n\t\t\tkey: 'add',\n\t\t\tvalue: function add(groupData) {\n\t\t\t\tvar newGroupData = groupData;\n\t\t\t\t________logger.debug({\n\t\t\t\t\tdescription: 'Add group called.', groupData: groupData,\n\t\t\t\t\tfunc: 'add', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\tif (_.isString(groupData)) {\n\t\t\t\t\t//Group data is string\n\t\t\t\t\tnewGroupData = { name: groupData };\n\t\t\t\t}\n\t\t\t\t________logger.debug({\n\t\t\t\t\tdescription: 'Add group called.', newGroupData: newGroupData,\n\t\t\t\t\tfunc: 'add', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn _____request.post(this.groupsEndpoint, newGroupData).then(function (response) {\n\t\t\t\t\t________logger.log({\n\t\t\t\t\t\tdescription: 'Group added to application successfully.',\n\t\t\t\t\t\tresponse: response, func: 'add', obj: 'GroupsAction'\n\t\t\t\t\t});\n\t\t\t\t\t//TODO: Return list of group objects\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t________logger.error({\n\t\t\t\t\t\tdescription: 'Error adding group.',\n\t\t\t\t\t\terror: errRes, func: 'add', obj: 'GroupsAction'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Search with partial of username\n\t\t}, {\n\t\t\tkey: 'search',\n\t\t\tvalue: function search(query) {\n\t\t\t\t________logger.debug({\n\t\t\t\t\tdescription: 'Search groups called.', query: query,\n\t\t\t\t\tfunc: 'search', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\tif (!query || query == '' || !_.isString(query)) {\n\t\t\t\t\t________logger.log({\n\t\t\t\t\t\tdescription: 'Null or invalid query, returning empty array.',\n\t\t\t\t\t\tfunc: 'search', obj: 'GroupsAction'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t\tvar searchEndpoint = this.groupsEndpoint + '/search/' + query;\n\t\t\t\t________logger.debug({\n\t\t\t\t\tdescription: 'Search endpoint created.',\n\t\t\t\t\tendpoint: searchEndpoint, func: 'search', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn _____request.get(searchEndpoint).then(function (response) {\n\t\t\t\t\t________logger.log({\n\t\t\t\t\t\tdescription: 'Found groups based on search.',\n\t\t\t\t\t\tresponse: response, func: 'search', obj: 'GroupsAction'\n\t\t\t\t\t});\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t________logger.error({\n\t\t\t\t\t\tdescription: 'Error searching groups.',\n\t\t\t\t\t\terror: errRes, func: 'search', obj: 'GroupsAction'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'groupsEndpoint',\n\t\t\tget: function get() {\n\t\t\t\tvar endpointArray = [matter.endpoint, 'groups'];\n\t\t\t\t//Check for app groups action\n\t\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t\t}\n\t\t\t\t//Create string from endpointArray\n\t\t\t\tvar endpointStr = endpointArray.join('/');\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Groups Endpoint built.', endpoint: endpointStr,\n\t\t\t\t\tfunc: 'groupsEndpoint', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn endpointStr;\n\t\t\t}\n\t\t}]);\n\n\t\treturn GroupsAction;\n\t})();\n\n\tvar ____request = matter.utils.request;\n\tvar _______logger = matter.utils.logger;\n\n\t//Actions for specific user\n\n\tvar _Account = (function () {\n\t\tfunction _Account(accountData) {\n\t\t\t_classCallCheck(this, _Account);\n\n\t\t\t//Call matter with name and settings\n\t\t\tif (accountData && _.isObject(accountData) && _.has(accountData, 'username')) {\n\t\t\t\t_.extend(this, accountData);\n\t\t\t} else if (accountData && _.isString(accountData)) {\n\t\t\t\tthis.username = accountData;\n\t\t\t} else {\n\t\t\t\t_______logger.error({\n\t\t\t\t\tdescription: 'AccountData is required to start an AccountAction',\n\t\t\t\t\tfunc: 'constructor', obj: 'Account'\n\t\t\t\t});\n\t\t\t\tthrow new Error('username is required to start an AccountAction');\n\t\t\t}\n\t\t}\n\n\t\t//Build endpoint based on accountData\n\n\t\t_createClass(_Account, [{\n\t\t\tkey: 'get',\n\n\t\t\t//Get a user\n\t\t\tvalue: function get() {\n\t\t\t\t_______logger.debug({ description: 'Account data loaded successfully.', func: 'get', obj: 'Account' });\n\t\t\t\treturn ____request.get(this.accountEndpoint).then(function (response) {\n\t\t\t\t\t_______logger.info({ description: 'Account data loaded successfully.', response: response, func: 'get', obj: 'Account' });\n\t\t\t\t\treturn new _Account(response);\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_______logger.error({ description: 'Error getting user.', error: errRes, func: 'get', obj: 'Account' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Update a Account\n\t\t}, {\n\t\t\tkey: 'update',\n\t\t\tvalue: function update(accountData) {\n\t\t\t\t_______logger.debug({ description: 'Update user called.', accountData: accountData, func: 'update', obj: 'Account' });\n\t\t\t\treturn ____request.put(this.accountEndpoint, accountData).then(function (response) {\n\t\t\t\t\t_______logger.info({ description: 'Account updated successfully.', func: 'update', obj: 'Account' });\n\t\t\t\t\t//TODO: Extend this with current info before returning\n\t\t\t\t\treturn new _Account(response);\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_______logger.error({ description: 'Error updating user.', func: 'update', obj: 'Account' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Delete a Account\n\t\t}, {\n\t\t\tkey: 'del',\n\t\t\tvalue: function del(accountData) {\n\t\t\t\t_______logger.debug({ description: 'Delete user called.', func: 'del', obj: 'Account' });\n\t\t\t\treturn ____request.del(this.accountEndpoint, accountData).then(function (response) {\n\t\t\t\t\t_______logger.info({ description: 'Delete user successful.', response: response, func: 'del', obj: 'Account' });\n\t\t\t\t\treturn new _Account(response);\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_______logger.error({ description: 'Error deleting user.', accountData: accountData, error: errRes, func: 'del', obj: 'Account' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'accountEndpoint',\n\t\t\tget: function get() {\n\t\t\t\tvar endpointArray = [matter.endpoint, 'accounts', this.username];\n\t\t\t\t//Check for app account action\n\t\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t\t}\n\t\t\t\t//Create string from endpointArray\n\t\t\t\tvar endpointStr = endpointArray.join('/');\n\t\t\t\t_______logger.log({ description: 'Account Endpoint built.', endpoint: endpointStr, func: 'accountEndpoint', obj: 'Account' });\n\t\t\t\treturn endpointStr;\n\t\t\t}\n\t\t}]);\n\n\t\treturn _Account;\n\t})();\n\n\tvar ______logger = matter.utils.logger;\n\t//Actions for accounts list\n\n\tvar AccountsAction = (function () {\n\t\tfunction AccountsAction(actionData) {\n\t\t\t_classCallCheck(this, AccountsAction);\n\n\t\t\t//Check to see if action is for a specific app\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'app')) {\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\t______logger.log({ description: 'Provided app data set to app parameter.', action: this, providedData: actionData, func: 'constructor', obj: 'AccountsAction' });\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\tthis.app = { name: actionData };\n\t\t\t\t______logger.log({ description: 'App name provided as string was set.', action: this, providedData: actionData, func: 'constructor', obj: 'AccountsAction' });\n\t\t\t}\n\t\t\t______logger.info({ description: 'New Accounts action.', action: this, providedData: actionData, func: 'constructor', obj: 'AccountsAction' });\n\t\t}\n\n\t\t_createClass(AccountsAction, [{\n\t\t\tkey: 'get',\n\n\t\t\t//Get accounts or single application\n\t\t\tvalue: function get() {\n\t\t\t\t______logger.log({ description: 'Accounts get called.', func: 'get', obj: 'AccountsAction' });\n\t\t\t\treturn matter.utils.request.get(this.accountsEndpoint).then(function (response) {\n\t\t\t\t\t______logger.info({ description: 'Accounts loaded successfully.', func: 'get', obj: 'AccountsAction' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t______logger.info({ description: 'Error getting accounts.', error: errRes, func: 'get', obj: 'AccountsAction' });\n\t\t\t\t\treturn Promise.reject(errRes.message || 'Error getting accounts.');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Add an application\n\t\t}, {\n\t\t\tkey: 'add',\n\t\t\tvalue: function add(accountData) {\n\t\t\t\t______logger.info({ description: 'Account add called.', accountData: accountData, func: 'add', obj: 'AccountsAction' });\n\t\t\t\treturn this.utils.request.post(this.accountsEndpoint, accountData).then(function (response) {\n\t\t\t\t\t______logger.info({ description: 'Account added successfully.', response: response, newAccount: new _Account(response), func: 'add', obj: 'AccountsAction' });\n\t\t\t\t\treturn new _Account(response);\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t______logger.error({ description: 'Account add called.', error: errRes, accountData: accountData, func: 'add', obj: 'AccountsAction' });\n\t\t\t\t\treturn Promise.reject(errRes.message || 'Error adding account.');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Search with partial of accountname\n\t\t}, {\n\t\t\tkey: 'search',\n\t\t\tvalue: function search(query) {\n\t\t\t\t______logger.log({ description: 'Accounts search called.', query: query, func: 'search', obj: 'AccountsAction' });\n\t\t\t\tvar searchEndpoint = this.accountsEndpoint + '/search/';\n\t\t\t\tif (query && _.isString(query)) {\n\t\t\t\t\tsearchEndpoint += query;\n\t\t\t\t}\n\t\t\t\tif (!query || query == '') {\n\t\t\t\t\t______logger.log({ description: 'Null query, returning empty array.', func: 'search', obj: 'AccountsAction' });\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t\treturn matter.utils.request.get(searchEndpoint).then(function (response) {\n\t\t\t\t\t______logger.log({ description: 'Accounts search responded.', response: response, query: query, func: 'search', obj: 'AccountsAction' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t______logger.error({ description: 'Error searching Accounts.', error: errRes, query: query, func: 'search', obj: 'AccountsAction' });\n\t\t\t\t\treturn Promise.reject(errRes.message || 'Error searching accounts.');\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'accountsEndpoint',\n\t\t\tget: function get() {\n\t\t\t\tvar endpointArray = [matter.endpoint, 'accounts'];\n\t\t\t\t//Check for app account action\n\t\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t\t//Splice apps, appName into index 1\n\t\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t\t}\n\t\t\t\t//Create string from endpointArray\n\t\t\t\tvar endpointStr = endpointArray.join('/');\n\t\t\t\t______logger.log({ description: 'Accounts Endpoint built.', endpoint: endpointStr, func: 'accountsEndpoint', obj: 'AccountsAction' });\n\t\t\t\treturn endpointStr;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AccountsAction;\n\t})();\n\n\tvar ___request = matter.utils.request;\n\tvar _____logger = matter.utils.logger;\n\t//Actions for specific user\n\n\tvar _Template = (function () {\n\t\tfunction _Template(templateData) {\n\t\t\t_classCallCheck(this, _Template);\n\n\t\t\t//Call matter with name and settings\n\t\t\tif (templateData && _.isString(templateData)) {\n\t\t\t\tthis.name = templateData;\n\t\t\t} else {\n\t\t\t\t_____logger.error({\n\t\t\t\t\tdescription: 'Template data is required to start a Template action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Template'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Template data is required to start a Template action.');\n\t\t\t}\n\t\t}\n\n\t\t_createClass(_Template, [{\n\t\t\tkey: 'get',\n\n\t\t\t//Get userlications or single userlication\n\t\t\tvalue: function get() {\n\t\t\t\t_____logger.log({ description: 'Get template called.', name: this.name, func: 'get', obj: 'Template' });\n\t\t\t\treturn ___request.get(this.templateEndpoint).then(function (response) {\n\t\t\t\t\t_____logger.log({ description: 'Get template responded.', response: response, func: 'get', obj: 'Template' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_____logger.error({ description: 'Error getting template.', error: errRes, func: 'get', obj: 'Template' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Update an userlication\n\t\t}, {\n\t\t\tkey: 'update',\n\t\t\tvalue: function update(templateData) {\n\t\t\t\t_____logger.log({ description: 'Update template called.', templateData: templateData, func: 'update', obj: 'Template' });\n\t\t\t\treturn ___request.put(this.templateEndpoint, templateData).then(function (response) {\n\t\t\t\t\t_____logger.log({ description: 'Update template responded.', response: response, templateData: templateData, func: 'update', obj: 'Template' });\n\t\t\t\t\t//TODO: Return template object\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_____logger.error({ description: 'Error updating template.', error: errRes, func: 'update', obj: 'Template' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Delete a template\n\t\t}, {\n\t\t\tkey: 'del',\n\t\t\tvalue: function del(templateData) {\n\t\t\t\t_____logger.log({ description: 'Delete template called.', templateData: templateData, func: 'del', obj: 'Template' });\n\t\t\t\treturn ___request['delete'](this.endpoint, templateData).then(function (response) {\n\t\t\t\t\t_____logger.log({ description: 'Template deleted successfully.', response: response, func: 'del', obj: 'Template' });\n\t\t\t\t\t//TODO: Return template object\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_____logger.error({ description: 'Error deleting template.', error: errRes, func: 'del', obj: 'Template' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'templateEndpoint',\n\t\t\tget: function get() {\n\t\t\t\treturn matter.endpoint + '/templates/' + this.name;\n\t\t\t}\n\t\t}]);\n\n\t\treturn _Template;\n\t})();\n\n\tvar ____logger = matter.utils.logger;\n\tvar __request = matter.utils.request;\n\n\t//Actions for templates list\n\n\tvar TemplatesAction = (function () {\n\t\tfunction TemplatesAction() {\n\t\t\t_classCallCheck(this, TemplatesAction);\n\t\t}\n\n\t\t//Convenience vars\n\n\t\t_createClass(TemplatesAction, [{\n\t\t\tkey: 'get',\n\n\t\t\t//Get templates or single application\n\t\t\tvalue: function get() {\n\t\t\t\t____logger.log({ description: 'Get template called.', func: 'get', obj: 'TemplatesAction' });\n\t\t\t\treturn __request.get(this.templatesEndpoint).then(function (response) {\n\t\t\t\t\t____logger.log({ description: 'Templates loaded.', response: response, func: 'get', obj: 'TemplatesAction' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t____logger.error({ description: 'Error getting templates.', error: errRes, func: 'get', obj: 'TemplatesAction' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Add an application\n\t\t}, {\n\t\t\tkey: 'add',\n\t\t\tvalue: function add(appData) {\n\t\t\t\t____logger.log({ description: 'Add template called.', func: 'add', obj: 'TemplatesAction' });\n\t\t\t\treturn __request.post(this.templatesEndpoint, appData).then(function (response) {\n\t\t\t\t\t____logger.log({ description: 'Templates added successfully.', func: 'add', obj: 'TemplatesAction' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t____logger.error({ description: 'Error adding template.', error: errRes, func: 'add', obj: 'TemplatesAction' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Search with partial of username\n\t\t}, {\n\t\t\tkey: 'search',\n\t\t\tvalue: function search(query) {\n\t\t\t\t____logger.log({ description: 'Search template called.', query: query, func: 'search', obj: 'TemplatesAction' });\n\t\t\t\tvar searchEndpoint = this.templatesEndpoint + '/search/';\n\t\t\t\tif (query && _.isString(query)) {\n\t\t\t\t\tsearchEndpoint += query;\n\t\t\t\t}\n\t\t\t\t____logger.log({ description: 'Search endpoint created.', endpoint: searchEndpoint, func: 'search', obj: 'TemplatesAction' });\n\t\t\t\treturn __request.get(searchEndpoint).then(function (response) {\n\t\t\t\t\t____logger.log({ description: 'Template(s) found successfully.', response: response, endpoint: searchEndpoint, func: 'search', obj: 'TemplatesAction' });\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t____logger.log({ description: 'Error searching for templates.', query: query, error: errRes, endpoint: searchEndpoint, func: 'search', obj: 'TemplatesAction' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'templatesEndpoint',\n\t\t\tget: function get() {\n\t\t\t\tvar endpointArray = [matter.endpoint, 'templates'];\n\t\t\t\t//Check for app groups action\n\t\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t\t// endpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t\t\t____logger.log({ description: 'Templates action is not currently supported for a specific application.', func: 'accountsEndpoint', obj: 'AccountsAction' });\n\t\t\t\t}\n\t\t\t\t//Create string from endpointArray\n\t\t\t\tvar endpointStr = endpointArray.join('/');\n\t\t\t\t____logger.log({ description: 'Templates endpoint built.', endpoint: endpointStr, func: 'templatesEndpoint', obj: 'TemplatesAction' });\n\t\t\t\treturn endpointStr;\n\t\t\t}\n\t\t}]);\n\n\t\treturn TemplatesAction;\n\t})();\n\n\tvar ___logger = matter.utils.logger;\n\n\tvar _File = (function () {\n\t\tfunction _File(actionData) {\n\t\t\t_classCallCheck(this, _File);\n\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'fileData') && _.has(actionData, 'app')) {\n\t\t\t\t_.extend(this, actionData.fileData);\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\tif (!this.path) {\n\t\t\t\t\tif (!this.ref) {\n\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\tdescription: 'Path or ref required to create file.',\n\t\t\t\t\t\t\tfunc: 'constructor', obj: 'File'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthrow new Error('Path or ref required to create file.');\n\t\t\t\t\t}\n\t\t\t\t\tthis.path = this.pathArrayFromRef.join('/');\n\t\t\t\t}\n\t\t\t\tthis.pathArray = this.path.split('/');\n\t\t\t\t//Get name from data or from pathArray\n\t\t\t\tthis.name = _.has(actionData.fileData, 'name') ? actionData.fileData.name : this.pathArray[this.pathArray.length - 1];\n\t\t\t} else if (actionData && !_.isObject(actionData)) {\n\t\t\t\t___logger.error({\n\t\t\t\t\tdescription: 'Action data is not an object. Action data must be an object that includes app and fileData.',\n\t\t\t\t\tfunc: 'constructor', obj: 'File'\n\t\t\t\t});\n\t\t\t\t//TODO: Get appName from path data?\n\t\t\t\tthrow new Error('File data must be an object that includes path and appName.');\n\t\t\t} else {\n\t\t\t\t___logger.error({\n\t\t\t\t\tdescription: 'File data that includes path and app is needed to create a File action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'File'\n\t\t\t\t});\n\t\t\t\tthrow new Error('File data with path and app is needed to create file action.');\n\t\t\t}\n\t\t\tthis.type = 'file';\n\t\t\t___logger.debug({\n\t\t\t\tdescription: 'File object constructed.', file: this,\n\t\t\t\tfunc: 'constructor', obj: 'File'\n\t\t\t});\n\t\t}\n\n\t\t//------------------ Utility Functions ------------------//\n\n\t\t// AWS Config\n\n\t\t_createClass(_File, [{\n\t\t\tkey: 'get',\n\t\t\tvalue: function get() {\n\t\t\t\tvar _this = this;\n\n\t\t\t\t// TODO: Load file from firepad content\n\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\tvar headless = new Firepad.headless(_this.fbRef);\n\t\t\t\t\theadless.getText(function (text) {\n\t\t\t\t\t\theadless.dispose();\n\t\t\t\t\t\tresolve(text);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getFromS3',\n\t\t\tvalue: function getFromS3() {\n\t\t\t\tvar _this2 = this;\n\n\t\t\t\tif (!this.app || !this.app.frontend) {\n\t\t\t\t\t___logger.log({\n\t\t\t\t\t\tdescription: 'Application Frontend data not available. Calling applicaiton get.',\n\t\t\t\t\t\tfunc: 'get', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\treturn this.app.get().then(function (appData) {\n\t\t\t\t\t\t_this2.app = appData;\n\t\t\t\t\t\t___logger.log({\n\t\t\t\t\t\t\tdescription: 'Application get successful. Getting file.',\n\t\t\t\t\t\t\tapp: appData, func: 'get', obj: 'File'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn _this2.get();\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\tdescription: 'Application Frontend data not available.',\n\t\t\t\t\t\t\terror: err, func: 'get', obj: 'File'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn Promise.reject({ message: 'Front end data is required to get file.' });\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar _ret = (function () {\n\t\t\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t\t\t___logger.log({\n\t\t\t\t\t\t\t\tdescription: 'AWS creds do not exist, so they are being set.',\n\t\t\t\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t_setAWSConfig();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar s3 = new AWS.S3();\n\t\t\t\t\t\tvar getData = {\n\t\t\t\t\t\t\tBucket: _this2.app.frontend.bucketName,\n\t\t\t\t\t\t\tKey: _this2.path\n\t\t\t\t\t\t};\n\t\t\t\t\t\t//Set contentType from actionData to ContentType parameter of new object\n\t\t\t\t\t\tif (_this2.contentType) {\n\t\t\t\t\t\t\tgetData.ContentType = _this2.contentType;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t___logger.debug({\n\t\t\t\t\t\t\tdescription: 'File get params built.', getData: getData,\n\t\t\t\t\t\t\tfile: _this2, func: 'get', obj: 'File'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar finalData = _this2;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tv: new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\t\ts3.getObject(getData, function (err, data) {\n\t\t\t\t\t\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\t\t\t\tdescription: 'File loaded successfully.',\n\t\t\t\t\t\t\t\t\t\t\tdata: data, func: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tif (_.has(data, 'Body')) {\n\t\t\t\t\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\t\t\t\t\tdescription: 'File has content.',\n\t\t\t\t\t\t\t\t\t\t\t\tcontent: data.Body.toString(),\n\t\t\t\t\t\t\t\t\t\t\t\tmetaData: data.Metadata.toString(),\n\t\t\t\t\t\t\t\t\t\t\t\tfunc: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tfinalData.content = data.Body.toString();\n\t\t\t\t\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\t\t\t\t\tdescription: 'File content has been added to file.',\n\t\t\t\t\t\t\t\t\t\t\t\tfile: finalData,\n\t\t\t\t\t\t\t\t\t\t\t\tfunc: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tresolve(finalData);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\t\t\t\t\tdescription: 'Error loading file from S3.',\n\t\t\t\t\t\t\t\t\t\t\terror: err, func: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t};\n\t\t\t\t\t})();\n\n\t\t\t\t\tif (typeof _ret === 'object') return _ret.v;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Alias for get\n\t\t}, {\n\t\t\tkey: 'open',\n\t\t\tvalue: function open() {\n\t\t\t\treturn this.get();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'publish',\n\t\t\tvalue: function publish(fileData) {\n\t\t\t\tvar _this3 = this;\n\n\t\t\t\t//TODO: Publish file to application\n\t\t\t\t___logger.debug({\n\t\t\t\t\tdescription: 'File publish called.', file: this,\n\t\t\t\t\tfileData: fileData, func: 'publish', obj: 'File'\n\t\t\t\t});\n\t\t\t\tif (!this.app.frontend) {\n\t\t\t\t\t___logger.error({\n\t\t\t\t\t\tdescription: 'Application Frontend data not available. Make sure to call .get().',\n\t\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject({ message: 'Front end data is required to publish file.' });\n\t\t\t\t} else {\n\t\t\t\t\tvar _ret2 = (function () {\n\t\t\t\t\t\tif (!_.has(fileData, ['content', 'path'])) {\n\t\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\t\tdescription: 'File data including path and content required to publish.',\n\t\t\t\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tv: Promise.reject({ message: 'File data including path and content required to publish.' })\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar saveParams = {\n\t\t\t\t\t\t\tBucket: _this3.app.frontend.bucketName,\n\t\t\t\t\t\t\tKey: fileData.path,\n\t\t\t\t\t\t\tBody: fileData.content,\n\t\t\t\t\t\t\tACL: 'public-read'\n\t\t\t\t\t\t};\n\t\t\t\t\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\t\t\t\t\tif (_this3.contentType) {\n\t\t\t\t\t\t\tsaveParams.ContentType = _this3.contentType;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t\t\t___logger.debug({\n\t\t\t\t\t\t\t\tdescription: 'AWS creds do not exist, so they are being set.',\n\t\t\t\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t_setAWSConfig();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar s3 = new AWS.S3();\n\t\t\t\t\t\t___logger.debug({\n\t\t\t\t\t\t\tdescription: 'File publish params built.',\n\t\t\t\t\t\t\tsaveParams: saveParams, fileData: _this3,\n\t\t\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tv: new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\t\ts3.putObject(saveParams, function (err, data) {\n\t\t\t\t\t\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t___logger.log({\n\t\t\t\t\t\t\t\t\t\t\tdescription: 'File saved successfully.',\n\t\t\t\t\t\t\t\t\t\t\tresponse: data, func: 'publish', obj: 'File'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\t\t\t\t\tdescription: 'Error saving file to S3.',\n\t\t\t\t\t\t\t\t\t\t\terror: err, func: 'publish', obj: 'File'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t};\n\t\t\t\t\t})();\n\n\t\t\t\t\tif (typeof _ret2 === 'object') return _ret2.v;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'del',\n\t\t\tvalue: function del() {\n\t\t\t\tvar _this4 = this;\n\n\t\t\t\tif (!this.app || !this.app.frontend) {\n\t\t\t\t\t___logger.log({ description: 'Application Frontend data not available. Calling applicaiton get.', func: 'get', obj: 'File' });\n\t\t\t\t\treturn this.app.get().then(function (appData) {\n\t\t\t\t\t\t_this4.app = appData;\n\t\t\t\t\t\t___logger.log({ description: 'Application get successful. Getting file.', app: appData, func: 'get', obj: 'File' });\n\t\t\t\t\t\treturn _this4.get();\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\t___logger.error({ description: 'Application Frontend data not available. Make sure to call .get().', error: err, func: 'get', obj: 'File' });\n\t\t\t\t\t\treturn Promise.reject({ message: 'Front end data is required to get file.' });\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar _ret3 = (function () {\n\t\t\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t\t\t___logger.debug({ description: 'AWS creds do not exist, so they are being set.', func: 'publish', obj: 'File' });\n\t\t\t\t\t\t\t_setAWSConfig();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar s3 = new AWS.S3();\n\t\t\t\t\t\tvar saveParams = {\n\t\t\t\t\t\t\tBucket: _this4.app.frontend.bucketName,\n\t\t\t\t\t\t\tKey: _this4.path\n\t\t\t\t\t\t};\n\t\t\t\t\t\t//Set contentType from actionData to ContentType parameter of new object\n\t\t\t\t\t\tif (_this4.contentType) {\n\t\t\t\t\t\t\tsaveParams.ContentType = _this4.contentType;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t___logger.debug({\n\t\t\t\t\t\t\tdescription: 'File get params built.',\n\t\t\t\t\t\t\tsaveParams: saveParams, file: _this4,\n\t\t\t\t\t\t\tfunc: 'get', obj: 'File'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tv: new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\t\ts3.deleteObject(saveParams, function (err, data) {\n\t\t\t\t\t\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\t\t\t\tdescription: 'File loaded successfully.',\n\t\t\t\t\t\t\t\t\t\t\tfileData: data, func: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tif (_.has(data, 'Body')) {\n\t\t\t\t\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\t\t\t\t\tdescription: 'File has content.',\n\t\t\t\t\t\t\t\t\t\t\t\tfileData: data.Body.toString(), func: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tresolve(data.Body.toString());\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\t\t\t\t\tdescription: 'Error loading file from S3.',\n\t\t\t\t\t\t\t\t\t\t\terror: err, func: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t};\n\t\t\t\t\t})();\n\n\t\t\t\t\tif (typeof _ret3 === 'object') return _ret3.v;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'openInFirepad',\n\t\t\tvalue: function openInFirepad(editor) {\n\t\t\t\tvar _this5 = this;\n\n\t\t\t\t//Load file contents from s3\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t_this5.get().then(function (file) {\n\t\t\t\t\t\t___logger.log({\n\t\t\t\t\t\t\tdescription: 'File contents loaded. Opening firepad.',\n\t\t\t\t\t\t\teditor: editor, file: file,\n\t\t\t\t\t\t\tfunc: 'openInFirepad', obj: 'File'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//Open firepad from ace with file content as default\n\t\t\t\t\t\tvar firepad = file.firepadFromAce(editor);\n\t\t\t\t\t\t//Wait for firepad to be ready\n\t\t\t\t\t\tfirepad.on('ready', function () {\n\t\t\t\t\t\t\tresolve(file);\n\t\t\t\t\t\t\t// firepad.setText()\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\tdescription: 'Valid ace editor instance required to create firepad.',\n\t\t\t\t\t\t\tfunc: 'openInFirepad', obj: 'File', editor: editor\n\t\t\t\t\t\t});\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'firepadFromAce',\n\t\t\tvalue: function firepadFromAce(editor) {\n\t\t\t\t//TODO:Create new Firepad instance within div\n\t\t\t\tif (!editor || typeof editor.setTheme !== 'function') {\n\t\t\t\t\t___logger.error({\n\t\t\t\t\t\tdescription: 'Valid ace editor instance required to create firepad.',\n\t\t\t\t\t\tfunc: 'fbRef', obj: 'File', editor: editor\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof Firepad.fromACE !== 'function') {\n\t\t\t\t\t___logger.error({\n\t\t\t\t\t\tdescription: 'Firepad does not have fromACE method.',\n\t\t\t\t\t\tfirepad: Firepad, func: 'fbRef', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar settings = {};\n\t\t\t\tif (this.content) {\n\t\t\t\t\tsettings.defaultText = this.content;\n\t\t\t\t}\n\t\t\t\tif (matter.isLoggedIn && matter.currentUser) {\n\t\t\t\t\tsettings.userId = matter.currentUser.username || matter.currentUser.name;\n\t\t\t\t}\n\t\t\t\t___logger.log({\n\t\t\t\t\tdescription: 'Creating firepad from ace.',\n\t\t\t\t\tsettings: settings, func: 'fbRef', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn Firepad.fromACE(this.fbRef, editor, settings);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getConnectedUsers',\n\t\t\tvalue: function getConnectedUsers() {\n\t\t\t\tvar _this6 = this;\n\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t_this6.fbRef.child('users').on('value', function (usersSnap) {\n\t\t\t\t\t\tif (usersSnap.val() === null) {\n\t\t\t\t\t\t\tresolve([]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t(function () {\n\t\t\t\t\t\t\t\tvar usersArray = [];\n\t\t\t\t\t\t\t\tusersSnap.forEach(function (userSnap) {\n\t\t\t\t\t\t\t\t\tvar user = userSnap.val();\n\t\t\t\t\t\t\t\t\tuser.username = userSnap.key();\n\t\t\t\t\t\t\t\t\tusersArray.push(user);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t___logger.log({\n\t\t\t\t\t\t\t\t\tdescription: 'Connected users array built.',\n\t\t\t\t\t\t\t\t\tusers: usersArray, func: 'connectedUsers', obj: 'File'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresolve(usersArray);\n\t\t\t\t\t\t\t})();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\tdescription: 'Error loading connected users.',\n\t\t\t\t\t\t\terror: err, func: 'connectedUsers', obj: 'File'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getDefaultContent',\n\t\t\tvalue: function getDefaultContent() {\n\t\t\t\t//TODO: Fill with default data for matching file type\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'pathArrayFromRef',\n\t\t\tget: function get() {\n\t\t\t\tif (!this.fbRef) {\n\t\t\t\t\t___logger.error({\n\t\t\t\t\t\tdescription: 'File fbRef is required to get path array.', file: this,\n\t\t\t\t\t\tfunc: 'pathArrayFromRef', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this.fbRef.path.o;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'fileType',\n\t\t\tget: function get() {\n\t\t\t\tif (this.ext == 'js') {\n\t\t\t\t\treturn 'javascript';\n\t\t\t\t} else {\n\t\t\t\t\treturn this.ext;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'ext',\n\t\t\tget: function get() {\n\t\t\t\tvar re = /(?:\\.([^.]+))?$/;\n\t\t\t\treturn re.exec(this.name)[1];\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'safePathArray',\n\t\t\tget: function get() {\n\t\t\t\tvar safeArray = this.pathArray.map(function (loc) {\n\t\t\t\t\t//Replace periods with colons and other unsafe chars as --\n\t\t\t\t\treturn loc.replace(/[.]/g, ':').replace(/[#$\\[\\]]/g, '--');\n\t\t\t\t});\n\t\t\t\t___logger.log({\n\t\t\t\t\tdescription: 'Safe path array created.',\n\t\t\t\t\tsafeArray: safeArray, func: 'safePathArray', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn safeArray;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'safePath',\n\t\t\tget: function get() {\n\t\t\t\treturn this.safePathArray.join('/');\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'fbUrl',\n\t\t\tget: function get() {\n\t\t\t\tvar url = [config.fbUrl, 'files', this.app.name, this.safePath].join('/');\n\t\t\t\t___logger.log({\n\t\t\t\t\tdescription: 'File ref url generated',\n\t\t\t\t\turl: url, func: 'fbRef', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'fbRef',\n\t\t\tget: function get() {\n\t\t\t\tif (this.ref) {\n\t\t\t\t\t___logger.log({\n\t\t\t\t\t\tdescription: 'File already has reference.',\n\t\t\t\t\t\tref: this.ref, func: 'fbRef', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\treturn this.ref;\n\t\t\t\t}\n\t\t\t\t___logger.log({\n\t\t\t\t\tdescription: 'Fb ref generatating.',\n\t\t\t\t\turl: this.fbUrl, func: 'fbRef', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn new Firebase(this.fbUrl);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'headless',\n\t\t\tget: function get() {\n\t\t\t\treturn new Firepad.Headless(this.fbRef);\n\t\t\t}\n\t\t}]);\n\n\t\treturn _File;\n\t})();\n\n\tfunction _setAWSConfig() {\n\t\tAWS.config.update({\n\t\t\tcredentials: new AWS.CognitoIdentityCredentials({\n\t\t\t\tIdentityPoolId: config.aws.cognito.poolId\n\t\t\t}),\n\t\t\tregion: config.aws.region\n\t\t});\n\t}\n\n\t//Convenience vars\n\tvar __logger = matter.utils.logger;\n\n\tvar Files = (function () {\n\t\tfunction Files(filesData) {\n\t\t\t_classCallCheck(this, Files);\n\n\t\t\tif (filesData && _.isObject(filesData) && _.has(filesData, 'app')) {\n\t\t\t\t//Data is object containing directory data\n\t\t\t\tthis.app = filesData.app;\n\t\t\t} else if (filesData && _.isString(filesData)) {\n\t\t\t\t//Data is string name\n\t\t\t\tthis.app = { name: filesData };\n\t\t\t} else if (filesData && _.isArray(filesData)) {\n\t\t\t\t//TODO: Handle an array of files being passed as data\n\t\t\t\t__logger.error({\n\t\t\t\t\tdescription: 'Action data object with name is required to start a Files Action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Files'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Files Data object with application is required to start a Files action.');\n\t\t\t} else {\n\t\t\t\t__logger.error({\n\t\t\t\t\tdescription: 'Action data object with name is required to start a Files Action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Files'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Files Data object with name is required to start a Files action.');\n\t\t\t}\n\t\t\t__logger.debug({\n\t\t\t\tdescription: 'Files object constructed.',\n\t\t\t\tfunc: 'constructor', obj: 'Files'\n\t\t\t});\n\t\t}\n\n\t\t//------------------ Utility Functions ------------------//\n\n\t\t// AWS Config\n\n\t\t_createClass(Files, [{\n\t\t\tkey: 'get',\n\t\t\tvalue: function get() {\n\t\t\t\tvar _this7 = this;\n\n\t\t\t\t// TODO: get files list from firebase\n\t\t\t\tconsole.warn(this.pathArrayFromFbRef);\n\t\t\t\t__logger.log({\n\t\t\t\t\tdescription: 'Files get called.',\n\t\t\t\t\tfunc: 'get', obj: 'Files'\n\t\t\t\t});\n\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t_this7.fbRef.once('value', function (filesSnap) {\n\t\t\t\t\t\t__logger.warn({\n\t\t\t\t\t\t\tdescription: 'Files loaded from firebase.',\n\t\t\t\t\t\t\tval: filesSnap.val(), func: 'get', obj: 'Files'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar filesArray = [];\n\t\t\t\t\t\t// let filesPathArray =  this.pathArrayFromFbRef;\n\t\t\t\t\t\tfilesSnap.forEach(function (objSnap) {\n\t\t\t\t\t\t\tvar objData = objSnap.hasChild('meta') ? objSnap.child('meta').val() : { path: objSnap.key() };\n\t\t\t\t\t\t\t//TODO: Have a better fallback for when meta does not exist\n\t\t\t\t\t\t\t// if (!objData.path) {\n\t\t\t\t\t\t\t// \tobjSnap.ref().path.o.splice(0, filesPathArray.length);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tobjData.key = objSnap.key();\n\t\t\t\t\t\t\tfilesArray.push(objData);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t__logger.warn({\n\t\t\t\t\t\t\tdescription: 'Files array built.',\n\t\t\t\t\t\t\tval: filesArray, func: 'get', obj: 'Files'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresolve(filesArray);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getFromS3',\n\t\t\tvalue: function getFromS3() {\n\t\t\t\tvar _this8 = this;\n\n\t\t\t\tif (!this.app.frontend || !this.app.frontend.bucketName) {\n\t\t\t\t\t__logger.warn({\n\t\t\t\t\t\tdescription: 'Application Frontend data not available. Calling .get().',\n\t\t\t\t\t\tapp: this.app, func: 'getFromS3', obj: 'Files'\n\t\t\t\t\t});\n\t\t\t\t\treturn this.app.get().then(function (applicationData) {\n\t\t\t\t\t\t__logger.log({\n\t\t\t\t\t\t\tdescription: 'Application get returned.',\n\t\t\t\t\t\t\tdata: applicationData, func: 'getFromS3', obj: 'Files'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t_this8.app = applicationData;\n\t\t\t\t\t\tif (_.has(applicationData, 'frontend')) {\n\t\t\t\t\t\t\treturn _this8.get();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t__logger.error({\n\t\t\t\t\t\t\t\tdescription: 'Application does not have Frontend to get files from.',\n\t\t\t\t\t\t\t\tfunc: 'getFromS3', obj: 'Files'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn Promise.reject({\n\t\t\t\t\t\t\t\tmessage: 'Application does not have frontend to get files from.'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\t__logger.error({\n\t\t\t\t\t\t\tdescription: 'Application Frontend data not available. Make sure to call .get().',\n\t\t\t\t\t\t\terror: err, func: 'getFromS3', obj: 'Files'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn Promise.reject({\n\t\t\t\t\t\t\tmessage: 'Bucket name required to get objects'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar _ret5 = (function () {\n\t\t\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t\t\t// logger.info('AWS creds are being updated to make request');\n\t\t\t\t\t\t\tsetAWSConfig();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar s3 = new AWS.S3();\n\t\t\t\t\t\tvar listParams = { Bucket: _this8.app.frontend.bucketName };\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tv: new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\t\ts3.listObjects(listParams, function (err, data) {\n\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t__logger.info({\n\t\t\t\t\t\t\t\t\t\t\tdescription: 'Files list loaded.', filesData: data, func: 'get', obj: 'Files'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn resolve(data.Contents);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t__logger.error({\n\t\t\t\t\t\t\t\t\t\t\tdescription: 'Error getting files from S3.', error: err, func: 'get', obj: 'Files'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t};\n\t\t\t\t\t})();\n\n\t\t\t\t\tif (typeof _ret5 === 'object') return _ret5.v;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'add',\n\t\t\tvalue: function add() {\n\t\t\t\t//TODO: Add a file to files list\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'del',\n\t\t\tvalue: function del() {\n\t\t\t\t//TODO: Delete a file from files list\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'publish',\n\t\t\tvalue: function publish() {\n\t\t\t\t//TODO: Publish all files\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'buildStructure',\n\t\t\tvalue: function buildStructure() {\n\t\t\t\t__logger.debug({\n\t\t\t\t\tdescription: 'Build Structure called.',\n\t\t\t\t\tfunc: 'buildStructure', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn this.get().then(function (filesArray) {\n\t\t\t\t\t__logger.log({\n\t\t\t\t\t\tdescription: 'Child struct from array.',\n\t\t\t\t\t\tchildStructure: childStruct,\n\t\t\t\t\t\tfunc: 'buildStructure', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\tvar childStruct = childrenStructureFromArray(filesArray);\n\t\t\t\t\t//TODO: have child objects have correct classes (file/folder)\n\t\t\t\t\t__logger.log({\n\t\t\t\t\t\tdescription: 'Child struct from array.',\n\t\t\t\t\t\tchildStructure: childStruct,\n\t\t\t\t\t\tfunc: 'buildStructure', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\treturn childStruct;\n\t\t\t\t}, function (err) {\n\t\t\t\t\t__logger.error({\n\t\t\t\t\t\tdescription: 'Error getting application files.',\n\t\t\t\t\t\terror: err, func: 'buildStructure', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject({\n\t\t\t\t\t\tmessage: 'Error getting files.',\n\t\t\t\t\t\terror: err\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//ALIAS FOR buildStructure\n\t\t\t// get structure() {\n\t\t\t// \treturn this.buildStructure();\n\t\t\t// }\n\t\t}, {\n\t\t\tkey: 'fbUrl',\n\t\t\tget: function get() {\n\t\t\t\treturn config.fbUrl + '/files/' + this.app.name;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'fbRef',\n\t\t\tget: function get() {\n\t\t\t\t__logger.log({\n\t\t\t\t\tdescription: 'Url created for files fbRef.',\n\t\t\t\t\turl: this.fbUrl, func: 'fbRef', obj: 'Files'\n\t\t\t\t});\n\t\t\t\treturn new Firebase(this.fbUrl);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'pathArrayFromFbRef',\n\t\t\tget: function get() {\n\t\t\t\t//Handle fbUrls that have multiple levels\n\t\t\t\tvar removeArray = config.fbUrl.replace('https://', '').split('/');\n\t\t\t\tremoveArray.shift();\n\t\t\t\t__logger.warn({\n\t\t\t\t\tdescription: 'Remove array started.',\n\t\t\t\t\tremoveArray: removeArray, fbRefArray: this.fbRef.path.o, func: 'fbRef', obj: 'Files'\n\t\t\t\t});\n\t\t\t\tvar pathArray = this.fbRef.path.o.splice(0, removeArray.length);\n\t\t\t\t__logger.warn({\n\t\t\t\t\tdescription: 'Path array built.',\n\t\t\t\t\tpathArray: pathArray, func: 'fbRef', obj: 'Files'\n\t\t\t\t});\n\t\t\t\treturn pathArray;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Files;\n\t})();\n\n\tfunction setAWSConfig() {\n\t\tAWS.config.update({\n\t\t\tcredentials: new AWS.CognitoIdentityCredentials({\n\t\t\t\tIdentityPoolId: config.aws.cognito.poolId\n\t\t\t}),\n\t\t\tregion: config.aws.region\n\t\t});\n\t}\n\t//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n\t//Examples for two files (index.html and /testFolder/file.js):\n\t//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n\t//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\n\tfunction childrenStructureFromArray(fileArray) {\n\t\t// logger.log('childStructureFromArray called:', fileArray);\n\t\t//Create a object for each file that stores the file in the correct 'children' level\n\t\tvar mappedStructure = fileArray.map(function (file) {\n\t\t\treturn buildStructureObject(file);\n\t\t});\n\t\treturn combineLikeObjs(mappedStructure);\n\t}\n\t//Convert file with key into a folder/file children object\n\tfunction buildStructureObject(file) {\n\t\tvar pathArray;\n\t\t// console.log('buildStructureObject with:', file);\n\t\tif (_.has(file, 'path')) {\n\t\t\t//Coming from files already having path (structure)\n\t\t\tpathArray = file.path.split('/');\n\t\t} else if (_.has(file, 'Key')) {\n\t\t\t//Coming from aws\n\t\t\tpathArray = file.Key.split('/');\n\t\t\t// console.log('file before pick:', file);\n\t\t\tfile = _.pick(file, 'Key');\n\t\t\tfile.path = file.Key;\n\t\t\tfile.name = file.Key;\n\t\t} else {\n\t\t\tconsole.error('Invalid file.', file);\n\t\t}\n\t\tvar currentObj = file;\n\t\tif (pathArray.length == 1) {\n\t\t\tcurrentObj.name = pathArray[0];\n\t\t\tif (!_.has(currentObj, 'type')) {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t}\n\t\t\tcurrentObj.path = pathArray[0];\n\t\t\treturn currentObj;\n\t\t} else {\n\t\t\tvar finalObj = {};\n\t\t\t_.each(pathArray, function (loc, ind, list) {\n\t\t\t\tif (ind != list.length - 1) {\n\t\t\t\t\t//Not the last loc\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = _.take(list, ind + 1).join('/');\n\t\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t\t//TODO: Find out why this works\n\t\t\t\t\tif (ind == 0) {\n\t\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t\t} else {\n\t\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\t\tif (file.$id) {\n\t\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn finalObj;\n\t\t}\n\t}\n\t//Recursivley combine children of object's that have the same names\n\tfunction combineLikeObjs(mappedArray) {\n\t\tvar takenNames = [];\n\t\tvar finishedArray = [];\n\t\t_.each(mappedArray, function (obj) {\n\t\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\t\ttakenNames.push(obj.name);\n\t\t\t\tfinishedArray.push(obj);\n\t\t\t} else {\n\t\t\t\tvar likeObj = _.findWhere(mappedArray, { name: obj.name });\n\t\t\t\t//Combine children of like objects\n\t\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t\t// logger.log('extended obj:',likeObj);\n\t\t\t}\n\t\t});\n\t\treturn finishedArray;\n\t}\n\n\t//Convenience vars\n\tvar _request = matter.utils.request;\n\tvar _logger = matter.utils.logger;\n\n\t/**\n  * Application class.\n  *\n  */\n\n\tvar Application = (function () {\n\t\tfunction Application(appData) {\n\t\t\t_classCallCheck(this, Application);\n\n\t\t\t//Setup application data based on input\n\t\t\tif (appData && _.isObject(appData)) {\n\t\t\t\t_.extend(this, appData);\n\t\t\t} else if (appData && _.isString(appData)) {\n\t\t\t\tthis.name = appData;\n\t\t\t}\n\t\t\tif (Firebase && _.has(config, 'fbUrl') && _.has(this, 'name')) {\n\t\t\t\tthis.fbUrl = config.fbUrl + '/' + this.name;\n\t\t\t\tthis.fbRef = new Firebase(this.fbUrl);\n\t\t\t}\n\t\t\t// logger.debug({description: 'Application object created.', application: this, func: 'constructor', obj: 'Application'});\n\t\t}\n\n\t\t_createClass(Application, [{\n\t\t\tkey: 'get',\n\n\t\t\t//Get applications or single application\n\t\t\tvalue: function get() {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Application get called.', func: 'get', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn _request.get(this.appEndpoint).then(function (response) {\n\t\t\t\t\t_logger.info({\n\t\t\t\t\t\tdescription: 'Application loaded successfully.', response: response,\n\t\t\t\t\t\tapplication: new Application(response), func: 'get', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\treturn new Application(response);\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_logger.error({\n\t\t\t\t\t\tdescription: 'Error getting Application.',\n\t\t\t\t\t\tmessage: errRes.response.text, error: errRes,\n\t\t\t\t\t\tfunc: 'get', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Update an application\n\t\t}, {\n\t\t\tkey: 'update',\n\t\t\tvalue: function update(appData) {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Application update called.',\n\t\t\t\t\tfunc: 'update', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn _request.put(this.appEndpoint, appData).then(function (response) {\n\t\t\t\t\t_logger.info({\n\t\t\t\t\t\tdescription: 'Application updated successfully.',\n\t\t\t\t\t\tresponse: response, func: 'update', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\treturn new Application(response);\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_logger.error({\n\t\t\t\t\t\tdescription: 'Error updating application.',\n\t\t\t\t\t\terror: errRes, func: 'update', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'addStorage',\n\t\t\tvalue: function addStorage() {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Application add storage called.', application: this,\n\t\t\t\t\tfunc: 'addStorage', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn _request.post(this.appEndpoint + '/storage', {}).then(function (response) {\n\t\t\t\t\t_logger.info({\n\t\t\t\t\t\tdescription: 'Storage successfully added to application.',\n\t\t\t\t\t\tresponse: response, application: new Application(response),\n\t\t\t\t\t\tfunc: 'addStorage', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\treturn new Application(response);\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_logger.error({\n\t\t\t\t\t\tdescription: 'Error adding storage to application.',\n\t\t\t\t\t\terror: errRes, func: 'addStorage', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'applyTemplate',\n\t\t\tvalue: function applyTemplate() {\n\t\t\t\tvar _this9 = this;\n\n\t\t\t\t_logger.error({\n\t\t\t\t\tdescription: 'Applying templates to existing applications is not currently supported.',\n\t\t\t\t\tfunc: 'applyTemplate', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn _request.post(this.appEndpoint, {}).then(function (response) {\n\t\t\t\t\t_logger.info({\n\t\t\t\t\t\tdescription: 'Template successfully applied to application.',\n\t\t\t\t\t\tresponse: response, application: _this9,\n\t\t\t\t\t\tfunc: 'applyTemplate', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\treturn new Application(response);\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\t_logger.error({\n\t\t\t\t\t\tdescription: 'Error applying template to application.',\n\t\t\t\t\t\terror: errRes, application: _this9,\n\t\t\t\t\t\tfunc: 'applyTemplate', obj: 'Application'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Files object that contains files methods\n\t\t}, {\n\t\t\tkey: 'File',\n\t\t\tvalue: function File(fileData) {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Applications file action called.',\n\t\t\t\t\tfileData: fileData, application: this,\n\t\t\t\t\tfunc: 'file', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new _File({ app: this, fileData: fileData });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'User',\n\t\t\tvalue: function User(userData) {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Applications user action called.',\n\t\t\t\t\tuserData: userData, application: this, func: 'user',\n\t\t\t\t\tobj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new _Account({ app: this, userData: userData });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Account',\n\t\t\tvalue: function Account(userData) {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Applications account action called.',\n\t\t\t\t\tuserData: userData, application: this,\n\t\t\t\t\tfunc: 'user', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new _Account({ app: this, userData: userData });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Group',\n\t\t\tvalue: function Group(groupData) {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Applications group action called.',\n\t\t\t\t\tgroupData: groupData, application: this,\n\t\t\t\t\tfunc: 'group', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new _Group({ app: this, groupData: groupData });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Directory',\n\t\t\tvalue: function Directory(directoryData) {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Applications directory action called.',\n\t\t\t\t\tdirectoryData: directoryData, application: this,\n\t\t\t\t\tfunc: 'directory', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new _Directory({ app: this, directoryData: directoryData });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'appEndpoint',\n\t\t\tget: function get() {\n\t\t\t\treturn matter.endpoint + '/apps/' + this.name;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Files',\n\t\t\tget: function get() {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Applications files action called.',\n\t\t\t\t\tapplication: this, func: 'files', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new Files({ app: this });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Users',\n\t\t\tget: function get() {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Applications users action called.',\n\t\t\t\t\tapplication: this, func: 'user', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new AccountsAction({ app: this });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Accounts',\n\t\t\tget: function get() {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Applications account action called.',\n\t\t\t\t\tapplication: this, func: 'user', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new AccountsAction({ app: this });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Groups',\n\t\t\tget: function get() {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Applications groups action called.',\n\t\t\t\t\tapplication: this, func: 'groups', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new GroupsAction({ app: this });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Directories',\n\t\t\tget: function get() {\n\t\t\t\t_logger.debug({\n\t\t\t\t\tdescription: 'Applications directories action called.',\n\t\t\t\t\tapplication: this, func: 'directories', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new DirectoriesAction({ app: this });\n\t\t\t}\n\t\t}]);\n\n\t\treturn Application;\n\t})();\n\n\tvar request = matter.utils.request;\n\tvar logger = matter.utils.logger;\n\n\t//Actions for applications list\n\n\tvar AppsAction = (function () {\n\t\tfunction AppsAction() {\n\t\t\t_classCallCheck(this, AppsAction);\n\t\t}\n\n\t\t/**Grout Client Class\n   * @ description Extending matter provides token storage and login/logout/signup capabilities\n   */\n\n\t\t_createClass(AppsAction, [{\n\t\t\tkey: 'get',\n\n\t\t\t//Get applications or single application\n\t\t\tvalue: function get() {\n\t\t\t\tlogger.debug({ description: 'Apps get called.', action: this, func: 'get', obj: 'AppsAction' });\n\t\t\t\treturn request.get(this.appsEndpoint).then(function (response) {\n\t\t\t\t\tlogger.info({ description: 'Apps data loaded successfully.', response: response, func: 'get', obj: 'AppsAction' });\n\t\t\t\t\t//TODO: Return application object\n\t\t\t\t\t// return new Application(response);\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\tlogger.error({ description: 'Error getting apps data.', error: errRes, func: 'get', obj: 'AppsAction' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Add an application\n\t\t}, {\n\t\t\tkey: 'add',\n\t\t\tvalue: function add(appData) {\n\t\t\t\tlogger.debug({ description: 'Application add called.', appData: appData, func: 'add', obj: 'AppsAction' });\n\t\t\t\treturn matter.utils.request.post(this.appsEndpoint, appData).then(function (response) {\n\t\t\t\t\tlogger.info({ description: 'Application added successfully.', response: response, func: 'add', obj: 'AppsAction' });\n\t\t\t\t\t// TODO: Return application object\n\t\t\t\t\t// return new Application(response);\n\t\t\t\t\treturn response;\n\t\t\t\t})['catch'](function (errRes) {\n\t\t\t\t\tlogger.error({ description: 'Error adding app.', error: errRes, func: 'add', obj: 'AppsAction' });\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'appsEndpoint',\n\n\t\t\t//Call matter with name and settings\n\t\t\tget: function get() {\n\t\t\t\treturn matter.endpoint + '/apps';\n\t\t\t}\n\t\t}]);\n\n\t\treturn AppsAction;\n\t})();\n\n\tvar Grout = (function (_Matter) {\n\t\t_inherits(Grout, _Matter);\n\n\t\t//TODO: Use getter/setter to make this not a function\n\n\t\tfunction Grout() {\n\t\t\t_classCallCheck(this, Grout);\n\n\t\t\t//Call matter with tessellate\n\t\t\t_get(Object.getPrototypeOf(Grout.prototype), 'constructor', this).call(this, config.appName, config.matterOptions);\n\t\t}\n\n\t\t//Start a new Apps Action\n\n\t\t_createClass(Grout, [{\n\t\t\tkey: 'App',\n\n\t\t\t//Start a new App action\n\t\t\tvalue: function App(appName) {\n\t\t\t\tthis.utils.logger.debug({ description: 'Application action called.', appName: appName, template: new Application(appName), func: 'App', obj: 'Grout' });\n\t\t\t\treturn new Application(appName);\n\t\t\t}\n\n\t\t\t//Start a new Apps Action\n\t\t}, {\n\t\t\tkey: 'Template',\n\n\t\t\t//Start a new App action\n\t\t\tvalue: function Template(templateData) {\n\t\t\t\tthis.utils.logger.debug({ description: 'Template Action called.', templateData: templateData, template: new _Template(templateData), func: 'Template', obj: 'Grout' });\n\t\t\t\treturn new _Template(templateData);\n\t\t\t}\n\n\t\t\t//Start a new Accounts action\n\t\t}, {\n\t\t\tkey: 'Account',\n\n\t\t\t//Start a new Account action\n\t\t\tvalue: function Account(userData) {\n\t\t\t\tthis.utils.logger.debug({ description: 'Account Action called.', userData: userData, user: new _Account(userData), func: 'user', obj: 'Grout' });\n\t\t\t\treturn new _Account(userData);\n\t\t\t}\n\n\t\t\t//ALIAS OF ACCOUNTS\n\t\t\t//Start a new Accounts action\n\t\t}, {\n\t\t\tkey: 'User',\n\n\t\t\t//ALIAS OF ACCOUNT\n\t\t\t//Start a new Account action\n\t\t\tvalue: function User(userData) {\n\t\t\t\tthis.utils.logger.debug({ description: 'Account Action called.', userData: userData, user: new _Account(userData), func: 'user', obj: 'Grout' });\n\t\t\t\treturn new _Account(userData);\n\t\t\t}\n\n\t\t\t//Start a new Groups action\n\t\t}, {\n\t\t\tkey: 'Group',\n\n\t\t\t//Start a new Group action\n\t\t\tvalue: function Group(groupData) {\n\t\t\t\tthis.utils.logger.debug({\n\t\t\t\t\tdescription: 'Group Action called.', groupData: groupData,\n\t\t\t\t\taction: new _Group({ app: this, groupData: groupData }),\n\t\t\t\t\tfunc: 'group', obj: 'Grout'\n\t\t\t\t});\n\t\t\t\treturn new _Group(groupData);\n\t\t\t}\n\n\t\t\t//Start a new Directories action\n\t\t}, {\n\t\t\tkey: 'Directory',\n\n\t\t\t//Start a new Group action\n\t\t\tvalue: function Directory(directoryData) {\n\t\t\t\tthis.utils.logger.debug({\n\t\t\t\t\tdescription: 'Directory Action called.', directoryData: directoryData,\n\t\t\t\t\taction: new _Directory(directoryData), func: 'directory', obj: 'Grout'\n\t\t\t\t});\n\t\t\t\treturn new _Directory(directoryData);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Apps',\n\t\t\tget: function get() {\n\t\t\t\tthis.utils.logger.debug({\n\t\t\t\t\tdescription: 'Apps Action called.', action: new AppsAction(),\n\t\t\t\t\tfunc: 'Apps', obj: 'Grout'\n\t\t\t\t});\n\t\t\t\treturn new AppsAction();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Templates',\n\t\t\tget: function get() {\n\t\t\t\tthis.utils.logger.debug({ description: 'Templates Action called.', action: new TemplatesAction(), func: 'Templates', obj: 'Grout' });\n\t\t\t\treturn new TemplatesAction();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Accounts',\n\t\t\tget: function get() {\n\t\t\t\tthis.utils.logger.debug({ description: 'Account Action called.', action: new AccountsAction(), func: 'users', obj: 'Grout' });\n\t\t\t\treturn new AccountsAction();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Users',\n\t\t\tget: function get() {\n\t\t\t\tthis.utils.logger.debug({ description: 'Accounts Action called.', action: new AccountsAction(), func: 'Users', obj: 'Grout' });\n\t\t\t\treturn new AccountsAction();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Groups',\n\t\t\tget: function get() {\n\t\t\t\tthis.utils.logger.debug({\n\t\t\t\t\tdescription: 'Groups Action called.', action: new GroupsAction(), func: 'groups', obj: 'Grout'\n\t\t\t\t});\n\t\t\t\treturn new GroupsAction();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Directories',\n\t\t\tget: function get() {\n\t\t\t\tthis.utils.logger.debug({\n\t\t\t\t\tdescription: 'Directories Action called.',\n\t\t\t\t\taction: new DirectoriesAction(), func: 'directories', obj: 'Grout'\n\t\t\t\t});\n\t\t\t\treturn new DirectoriesAction();\n\t\t\t}\n\t\t}]);\n\n\t\treturn Grout;\n\t})(Matter);\n\n\treturn Grout;\n});\n//# sourceMappingURL=grout.js.map\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kyper-matter'), require('lodash'), require('firepad'), require('aws-sdk'), require('firebase')) :\n\ttypeof define === 'function' && define.amd ? define(['kyper-matter', 'lodash', 'firepad', 'aws-sdk', 'firebase'], factory) :\n\tglobal.Grout = factory(global.Matter,global._,global.Firepad,global.AWS,global.Firebase);\n}(this, function (Matter,_,Firepad,AWS,Firebase) { 'use strict';\n\n\tMatter = 'default' in Matter ? Matter['default'] : Matter;\n\t_ = 'default' in _ ? _['default'] : _;\n\tFirepad = 'default' in Firepad ? Firepad['default'] : Firepad;\n\tAWS = 'default' in AWS ? AWS['default'] : AWS;\n\tFirebase = 'default' in Firebase ? Firebase['default'] : Firebase;\n\n\tlet config = {\n\t\tserverUrl: 'http://tessellate.elasticbeanstalk.com',\n\t\ttokenName: 'grout',\n\t\tfbUrl: 'https://kyper-tech.firebaseio.com/tessellate',\n\t\tappName: 'tessellate',\n\t\tmatterOptions: {\n\t\t\tlocalServer: false,\n\t\t\tlogLevel: 'trace'\n\t\t},\n\t\taws: {\n\t\t\tregion: 'us-east-1',\n\t\t\tcognito: {\n\t\t\t\tpoolId: 'us-east-1:72a20ffd-c638-48b0-b234-3312b3e64b2e',\n\t\t\t\tparams: {\n\t\t\t\t\tAuthRoleArn: 'arn:aws:iam::823322155619:role/Cognito_TessellateUnauth_Role',\n\t\t\t\t\tUnauthRoleArn: 'arn:aws:iam::823322155619:role/Cognito_TessellateAuth_Role'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tlet matter = new Matter(config.appName, config.matterOptions);\n\n\tlet ________request = matter.utils.request;\n\tlet ___________logger = matter.utils.logger;\n\n\t//Actions for specific directory\n\tclass Directory {\n\t\tconstructor(actionData) {\n\t\t\tif (actionData && _.isObject(actionData) && (_.has(actionData, 'directoryName') || _.has(actionData, 'name'))) { //Data is object containing directory data\n\t\t\t\tthis.name = actionData.directoryName || actionData.name;\n\t\t\t\tif (_.has(actionData, 'appName')) {\n\t\t\t\t\tthis.appName = actionData.appName;\n\t\t\t\t}\n\t\t\t} else if (actionData && _.isString(actionData)) { //Data is string name\n\t\t\t\tthis.name = actionData;\n\t\t\t} else {\n\t\t\t\t___________logger.error({\n\t\t\t\t\tdescription: 'Action data object with name is required to start a Directory Action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Directory Data object with name is required to start a Directory action.');\n\t\t\t}\n\t\t}\n\t\tget directoryEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'directories', this.name];\n\t\t\t//Check for app account action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t___________logger.log({\n\t\t\t\tdescription: 'Directory endpoint built.',\n\t\t\t\tendpoint: endpointStr, func: 'directoryEndpoint',\n\t\t\t\tobj: 'Directory'\n\t\t\t});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get userlications or single userlication\n\t\tget() {\n\t\t\treturn ________request.get(this.directoryEndpoint).then((response) => {\n\t\t\t\t___________logger.info({\n\t\t\t\t\tdescription: 'Directory data loaded successfully.',\n\t\t\t\t\tresponse: response, func: 'get', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t___________logger.info({\n\t\t\t\t\tdescription: 'Error getting directory.',\n\t\t\t\t\terror: errRes, func: 'get', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update an Directory\n\t\tupdate(directoryData) {\n\t\t\t___________logger.debug({\n\t\t\t\tdescription: 'Directory updated called.',\n\t\t\t\tdirectoryData: directoryData, func: 'update', obj: 'Directory'\n\t\t\t});\n\t\t\treturn matter.utils.request.put(this.directoryEndpoint, directoryData).then((response) => {\n\t\t\t\t___________logger.info({\n\t\t\t\t\tdescription: 'Directory updated successfully.',\n\t\t\t\t\tdirectoryData: directoryData, response: response,\n\t\t\t\t\tfunc: 'update', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t___________logger.error({\n\t\t\t\t\tdescription: 'Error updating directory.',\n\t\t\t\t\tdirectoryData: directoryData, error: errRes,\n\t\t\t\t\tfunc: 'update', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete an Directory\n\t\tdel(directoryData) {\n\t\t\t___________logger.debug({\n\t\t\t\tdescription: 'Delete directory called.',\n\t\t\t\tdirectoryData: directoryData, func: 'del', obj: 'Directory'\n\t\t\t});\n\t\t\treturn ________request.delete(this.directoryEndpoint, directoryData).then((response) => {\n\t\t\t\t___________logger.info({\n\t\t\t\t\tdescription: 'Directory deleted successfully.',\n\t\t\t\t\tdirectoryData: directoryData, func: 'del', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t___________logger.error({\n\t\t\t\t\tdescription: 'Error deleting directory.',\n\t\t\t\t\terror: errRes, func: 'del', obj: 'Directory'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet _______request = matter.utils.request;\n\tlet __________logger = matter.utils.logger;\n\n\t//Actions for directories list\n\tclass DirectoriesAction {\n\t\tconstructor(actionData) {\n\t\t\t//Check to see if action is for a specific app\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'app')) {\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\t__________logger.log({description: 'Provided app data set to app parameter.', action: this, providedData: actionData, func: 'constructor', obj: 'DirectoriesAction'});\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\tthis.app = {name: actionData};\n\t\t\t\t__________logger.log({description: 'App name provided as string was set.', action: this, providedData: actionData, func: 'constructor', obj: 'DirectoriesAction'});\n\t\t\t}\n\t\t\t__________logger.info({description: 'New directories action.', action: this, providedData: actionData, func: 'constructor', obj: 'DirectoriesAction'});\n\t\t}\n\t\tget directoriesEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'directories'];\n\t\t\t//Check for app groups action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t__________logger.log({description: 'Directories endpoint built.', endpoint: endpointStr, func: 'directoriesEndpoint', obj: 'DirectoriesAction'});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get users or single application\n\t\tget() {\n\t\t\t__________logger.debug({description: 'Directories get called.', action: this, func: 'get', obj: 'DirectoriesAction'});\n\t\t\treturn _______request.get(this.directoriesEndpoint).then((response) => {\n\t\t\t\t__________logger.info({descrption: 'Directories loaded successfully.', response: response, func: 'get', obj: 'DirectoriesAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t__________logger.error({descrption: 'error getting users', error: errRes, func: 'get', obj: 'DirectoriesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\t__________logger.debug({description: 'Add directory called.', action: this, appData: appData, func: 'get', obj: 'DirectoriesAction'});\n\t\t\treturn _______request.post(this.directoriesEndpoint, appData).then((response) => {\n\t\t\t\t__________logger.log({description: 'Application added successfully.', response: response, func: 'add', obj: 'DirectoriesAction'});\n\t\t\t\t//TODO: Return list of group objects\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t__________logger.error({description: 'Error adding group.', error: errRes, func: 'add', obj: 'DirectoriesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Search with partial of directory name\n\t\tsearch(query) {\n\t\t\tvar searchEndpoint = this.directoriesEndpoint + '/search/';\n\t\t\tif (query && _.isString(query)) {\n\t\t\t\tsearchEndpoint += query;\n\t\t\t}\n\t\t\tif (!query || query == '') {\n\t\t\t\t__________logger.debug({description: 'Null query, returning empty array.', func: 'search', obj: 'DirectoriesAction'});\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\treturn _______request.get(searchEndpoint).then((response) => {\n\t\t\t\t__________logger.log({description: 'Found directories based on search.', response: response, func: 'search', obj: 'DirectoriesAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t__________logger.error({description: 'Error searching directories.', error: errRes, func: 'search', obj: 'DirectoriesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet ______request = matter.utils.request;\n\tlet _________logger = matter.utils.logger;\n\n\t//Actions for specific user\n\tclass Group {\n\t\tconstructor(actionData) {\n\t\t\t//Call matter with name and settings\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'groupData')) { //Data is object containing group data\n\t\t\t\tthis.name = _.isObject(actionData.groupData) ? actionData.groupData.name : actionData.groupData;\n\t\t\t\tif (_.has(actionData, 'app')) {\n\t\t\t\t\tthis.app = actionData.app;\n\t\t\t\t}\n\t\t\t} else if (actionData && _.isString(actionData)) { //Data is string name\n\t\t\t\tthis.name = actionData;\n\t\t\t} else {\n\t\t\t\t_________logger.error({description: 'Action data is required to start a Group Action.', func: 'constructor', obj: 'Group'});\n\t\t\t\tthrow new Error('Username is required to start an Group');\n\t\t\t}\n\t\t}\n\t\tget groupEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'groups', this.name];\n\t\t\t//Check for app account action\n\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t_________logger.log({description: 'Group Endpoint built.', endpoint: endpointStr, func: 'groupEndpoint', obj: 'Group'});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get userlications or single userlication\n\t\tget() {\n\t\t\treturn ______request.get(this.groupEndpoint).then((response) => {\n\t\t\t\t_________logger.info({description: 'Group data loaded successfully.', response: response, func: 'get', obj: 'Group'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_________logger.info({description: 'Error getting group.', error: errRes, func: 'get', obj: 'Group'});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\t//Update an Group\n\t\tupdate(groupData) {\n\t\t\t_________logger.log({description: 'Group updated called.', groupData: groupData, func: 'update', obj: 'Group'});\n\t\t\treturn matter.utils.request.put(this.groupEndpoint, groupData).then((response) => {\n\t\t\t\t_________logger.info({description: 'Group updated successfully.', groupData: groupData, response: response, func: 'update', obj: 'Group'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_________logger.error({description: 'Error updating group.', groupData: groupData, error: errRes, func: 'update', obj: 'Group'});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\t//Delete an Group\n\t\tdel(groupData) {\n\t\t\t_________logger.log({description: 'Delete group called.', groupData: groupData, func: 'del', obj: 'Group'});\n\t\t\treturn ______request.del(this.groupEndpoint, {}).then((response) => {\n\t\t\t\t_________logger.info({description: 'Group deleted successfully.', groupData: groupData, func: 'del', obj: 'Group'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_________logger.error({description: 'Error deleting group.', error: errRes, text: errRes.response.text, groupData: groupData,  func: 'del', obj: 'Group'});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\t//Update an Group\n\t\taddAccounts(accountsData) {\n\t\t\t_________logger.log({description: 'Group updated called.', accountsData: accountsData, func: 'update', obj: 'Group'});\n\t\t\tlet accountsArray = accountsData;\n\t\t\t//Handle provided data being a string list\n\t\t\tif (_.isString(accountsData)) {\n\t\t\t\taccountsArray = accountsData.split(',');\n\t\t\t}\n\t\t\t//Check item in array to see if it is a string (username) instead of _id\n\t\t\tif (_.isString(accountsArray[0])) {\n\t\t\t\t_________logger.error({description: 'Accounts array only currently supports account._id not account.username.', accountsData: accountsData, func: 'update', obj: 'Group'});\n\t\t\t\treturn Promise.reject({message: 'Accounts array only currently supports account._id not account.username.'});\n\t\t\t}\n\t\t\t_________logger.log({description: 'Updating group with accounts array.', accountsArray: accountsArray, func: 'update', obj: 'Group'});\n\t\t\treturn this.update({accounts: accountsArray}).then((response) => {\n\t\t\t\t_________logger.info({description: 'Account(s) added to group successfully.', response: response, func: 'addAccounts', obj: 'Group'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_________logger.error({description: 'Error addAccountseting group.', error: errRes,  func: 'addAccounts', obj: 'Group'});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet _____request = matter.utils.request;\n\tlet ________logger = matter.utils.logger;\n\n\t//Actions for users list\n\tclass GroupsAction {\n\t\tconstructor(actionData) {\n\t\t\t//Check to see if action is for a specific app\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'app')) {\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Provided app data set to app parameter.',\n\t\t\t\t\taction: this, providedData: actionData,\n\t\t\t\t\tfunc: 'constructor', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\tthis.app = {name: actionData};\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'App name provided as string was set.',\n\t\t\t\t\taction: this, providedData: actionData,\n\t\t\t\t\tfunc: 'constructor', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t}\n\t\t\t________logger.info({\n\t\t\t\tdescription: 'New Groups action.', action: this,\n\t\t\t\tprovidedData: actionData, func: 'constructor', obj: 'GroupsAction'\n\t\t\t});\n\t\t}\n\t\tget groupsEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'groups'];\n\t\t\t//Check for app groups action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t________logger.log({\n\t\t\t\tdescription: 'Groups Endpoint built.', endpoint: endpointStr,\n\t\t\t\tfunc: 'groupsEndpoint', obj: 'GroupsAction'\n\t\t\t});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get users or single application\n\t\tget() {\n\t\t\t________logger.log({\n\t\t\t\tdescription: 'Get group called.',\n\t\t\t\tfunc: 'get', obj: 'GroupsAction'\n\t\t\t});\n\t\t\treturn _____request.get(this.groupsEndpoint).then((response) => {\n\t\t\t\t________logger.info({\n\t\t\t\t\tdescription: 'Groups loaded successfully.',\n\t\t\t\t\tresponse: response, func: 'get', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t________logger.info({\n\t\t\t\t\tdescription: 'Error getting groups.', error: errRes,\n\t\t\t\t\tfunc: 'get', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(groupData) {\n\t\t\tvar newGroupData = groupData;\n\t\t\t________logger.debug({\n\t\t\t\tdescription: 'Add group called.', groupData: groupData,\n\t\t\t\tfunc: 'add', obj: 'GroupsAction'\n\t\t\t});\n\t\t\tif (_.isString(groupData)) {\n\t\t\t\t//Group data is string\n\t\t\t\tnewGroupData = {name: groupData};\n\t\t\t}\n\t\t\t________logger.debug({\n\t\t\t\tdescription: 'Add group called.', newGroupData: newGroupData,\n\t\t\t\tfunc: 'add', obj: 'GroupsAction'\n\t\t\t});\n\t\t\treturn _____request.post(this.groupsEndpoint, newGroupData).then((response) => {\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Group added to application successfully.',\n\t\t\t\t\tresponse: response, func: 'add', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\t//TODO: Return list of group objects\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t________logger.error({\n\t\t\t\t\tdescription: 'Error adding group.',\n\t\t\t\t\terror: errRes, func: 'add', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Search with partial of username\n\t\tsearch(query) {\n\t\t\t________logger.debug({\n\t\t\t\tdescription: 'Search groups called.', query: query,\n\t\t\t\tfunc: 'search', obj: 'GroupsAction'\n\t\t\t});\n\t\t\tif (!query || query == '' || !_.isString(query)) {\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Null or invalid query, returning empty array.',\n\t\t\t\t\tfunc: 'search', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\tlet searchEndpoint = `${this.groupsEndpoint}/search/${query}`;\n\t\t\t________logger.debug({\n\t\t\t\tdescription: 'Search endpoint created.',\n\t\t\t\tendpoint: searchEndpoint, func: 'search', obj: 'GroupsAction'\n\t\t\t});\n\t\t\treturn _____request.get(searchEndpoint).then((response) => {\n\t\t\t\t________logger.log({\n\t\t\t\t\tdescription: 'Found groups based on search.',\n\t\t\t\t\tresponse: response, func: 'search', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t________logger.error({\n\t\t\t\t\tdescription: 'Error searching groups.',\n\t\t\t\t\terror: errRes, func: 'search', obj: 'GroupsAction'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet ____request = matter.utils.request;\n\tlet _______logger = matter.utils.logger;\n\n\t//Actions for specific user\n\tclass Account {\n\t\tconstructor(accountData) {\n\t\t\t//Call matter with name and settings\n\t\t\tif (accountData && _.isObject(accountData) && _.has(accountData, 'username')) {\n\t\t\t\t_.extend(this, accountData);\n\t\t\t} else if (accountData && _.isString(accountData)) {\n\t\t\t\tthis.username = accountData;\n\t\t\t} else {\n\t\t\t\t_______logger.error({\n\t\t\t\t\tdescription: 'AccountData is required to start an AccountAction',\n\t\t\t\t\tfunc: 'constructor', obj: 'Account'\n\t\t\t\t});\n\t\t\t\tthrow new Error('username is required to start an AccountAction');\n\t\t\t}\n\t\t}\n\t\t//Build endpoint based on accountData\n\t\tget accountEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'accounts', this.username];\n\t\t\t//Check for app account action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t_______logger.log({description: 'Account Endpoint built.', endpoint: endpointStr, func: 'accountEndpoint', obj: 'Account'});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get a user\n\t\tget() {\n\t\t\t_______logger.debug({description: 'Account data loaded successfully.', func: 'get', obj: 'Account'});\n\t\t\treturn ____request.get(this.accountEndpoint).then((response) => {\n\t\t\t\t_______logger.info({description: 'Account data loaded successfully.', response: response, func: 'get', obj: 'Account'});\n\t\t\t\treturn new Account(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_______logger.error({description: 'Error getting user.', error: errRes, func: 'get', obj: 'Account'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update a Account\n\t\tupdate(accountData) {\n\t\t\t_______logger.debug({description: 'Update user called.', accountData: accountData, func: 'update', obj: 'Account'});\n\t\t\treturn ____request.put(this.accountEndpoint, accountData).then((response) => {\n\t\t\t\t_______logger.info({description: 'Account updated successfully.', func: 'update', obj: 'Account'});\n\t\t\t\t//TODO: Extend this with current info before returning\n\t\t\t\treturn new Account(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_______logger.error({description: 'Error updating user.', func: 'update', obj: 'Account'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete a Account\n\t\tdel(accountData) {\n\t\t\t_______logger.debug({description: 'Delete user called.', func: 'del', obj: 'Account'});\n\t\t\treturn ____request.del(this.accountEndpoint, accountData).then((response) => {\n\t\t\t\t_______logger.info({description: 'Delete user successful.', response: response, func: 'del', obj: 'Account'});\n\t\t\t\treturn new Account(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_______logger.error({description: 'Error deleting user.', accountData: accountData, error: errRes, func: 'del', obj: 'Account'});\n\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet ______logger = matter.utils.logger;\n\t//Actions for accounts list\n\tclass AccountsAction {\n\t\tconstructor(actionData) {\n\t\t\t//Check to see if action is for a specific app\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'app')) {\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\t______logger.log({description: 'Provided app data set to app parameter.', action: this, providedData: actionData, func: 'constructor', obj: 'AccountsAction'});\n\t\t\t} else if (actionData && _.isString(actionData)) {\n\t\t\t\tthis.app = {name: actionData};\n\t\t\t\t______logger.log({description: 'App name provided as string was set.', action: this, providedData: actionData, func: 'constructor', obj: 'AccountsAction'});\n\t\t\t}\n\t\t\t______logger.info({description: 'New Accounts action.', action: this, providedData: actionData, func: 'constructor', obj: 'AccountsAction'});\n\t\t}\n\t\tget accountsEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'accounts'];\n\t\t\t//Check for app account action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t//Splice apps, appName into index 1\n\t\t\t\tendpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t______logger.log({description: 'Accounts Endpoint built.', endpoint: endpointStr, func: 'accountsEndpoint', obj: 'AccountsAction'});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get accounts or single application\n\t\tget() {\n\t\t\t______logger.log({description: 'Accounts get called.', func: 'get', obj: 'AccountsAction'});\n\t\t\treturn matter.utils.request.get(this.accountsEndpoint).then((response) => {\n\t\t\t\t______logger.info({description: 'Accounts loaded successfully.', func: 'get', obj: 'AccountsAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t______logger.info({description: 'Error getting accounts.', error: errRes, func: 'get', obj: 'AccountsAction'});\n\t\t\t\treturn Promise.reject(errRes.message || 'Error getting accounts.');\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(accountData) {\n\t\t\t______logger.info({description: 'Account add called.', accountData: accountData, func: 'add', obj: 'AccountsAction'});\n\t\t\treturn this.utils.request.post(this.accountsEndpoint, accountData).then((response) => {\n\t\t\t\t______logger.info({description: 'Account added successfully.', response: response, newAccount: new Account(response), func: 'add', obj: 'AccountsAction'});\n\t\t\t\treturn new Account(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t______logger.error({description: 'Account add called.', error: errRes, accountData: accountData, func: 'add', obj: 'AccountsAction'});\n\t\t\t\treturn Promise.reject(errRes.message || 'Error adding account.');\n\t\t\t});\n\t\t}\n\t\t//Search with partial of accountname\n\t\tsearch(query) {\n\t\t\t______logger.log({description: 'Accounts search called.', query: query, func: 'search', obj: 'AccountsAction'});\n\t\t\tvar searchEndpoint = this.accountsEndpoint + '/search/';\n\t\t\tif (query && _.isString(query)) {\n\t\t\t\tsearchEndpoint += query;\n\t\t\t}\n\t\t\tif (!query || query == '') {\n\t\t\t\t______logger.log({description: 'Null query, returning empty array.', func: 'search', obj: 'AccountsAction'});\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\treturn matter.utils.request.get(searchEndpoint).then((response) => {\n\t\t\t\t______logger.log({description: 'Accounts search responded.', response: response, query: query, func: 'search', obj: 'AccountsAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t______logger.error({description: 'Error searching Accounts.', error: errRes, query: query, func: 'search', obj: 'AccountsAction'});\n\t\t\t\treturn Promise.reject(errRes.message || 'Error searching accounts.');\n\t\t\t});\n\t\t}\n\t}\n\n\tlet ___request = matter.utils.request;\n\tlet _____logger = matter.utils.logger;\n\t//Actions for specific user\n\tclass Template {\n\t\tconstructor(templateData) {\n\t\t\t//Call matter with name and settings\n\t\t\tif (templateData && _.isString(templateData)) {\n\t\t\t\tthis.name = templateData;\n\t\t\t} else {\n\t\t\t\t_____logger.error({\n\t\t\t\t\tdescription: 'Template data is required to start a Template action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Template'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Template data is required to start a Template action.');\n\t\t\t}\n\t\t}\n\t\tget templateEndpoint() {\n\t\t\treturn `${matter.endpoint}/templates/${this.name}`;\n\t\t}\n\t\t//Get userlications or single userlication\n\t\tget() {\n\t\t\t_____logger.log({description: 'Get template called.', name: this.name, func: 'get', obj: 'Template'});\n\t\t\treturn ___request.get(this.templateEndpoint).then((response) => {\n\t\t\t\t_____logger.log({description: 'Get template responded.', response: response, func: 'get', obj: 'Template'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_____logger.error({description: 'Error getting template.', error: errRes, func: 'get', obj: 'Template'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update an userlication\n\t\tupdate(templateData) {\n\t\t\t_____logger.log({description: 'Update template called.', templateData: templateData, func: 'update', obj: 'Template'});\n\t\t\treturn ___request.put(this.templateEndpoint, templateData).then((response) => {\n\t\t\t\t_____logger.log({description: 'Update template responded.', response: response, templateData: templateData, func: 'update', obj: 'Template'});\n\t\t\t\t//TODO: Return template object\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_____logger.error({description: 'Error updating template.', error: errRes, func: 'update', obj: 'Template'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete a template\n\t\tdel(templateData) {\n\t\t\t_____logger.log({description: 'Delete template called.', templateData: templateData, func: 'del', obj: 'Template'});\n\t\t\treturn ___request.delete(this.endpoint, templateData).then((response) => {\n\t\t\t\t_____logger.log({description: 'Template deleted successfully.', response: response, func: 'del', obj: 'Template'});\n\t\t\t\t//TODO: Return template object\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_____logger.error({description: 'Error deleting template.', error: errRes, func: 'del', obj: 'Template'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet ____logger = matter.utils.logger;\n\tlet __request = matter.utils.request;\n\n\t//Actions for templates list\n\tclass TemplatesAction {\n\t\tget templatesEndpoint() {\n\t\t\tlet endpointArray = [matter.endpoint, 'templates'];\n\t\t\t//Check for app groups action\n\t\t\tif (_.has(this, 'app') && _.has(this.app, 'name')) {\n\t\t\t\t// endpointArray.splice(1, 0, 'apps', this.app.name);\n\t\t\t\t____logger.log({description: 'Templates action is not currently supported for a specific application.', func: 'accountsEndpoint', obj: 'AccountsAction'});\n\t\t\t}\n\t\t\t//Create string from endpointArray\n\t\t\tlet endpointStr = endpointArray.join('/');\n\t\t\t____logger.log({description: 'Templates endpoint built.', endpoint: endpointStr, func: 'templatesEndpoint', obj: 'TemplatesAction'});\n\t\t\treturn endpointStr;\n\t\t}\n\t\t//Get templates or single application\n\t\tget() {\n\t\t\t____logger.log({description: 'Get template called.', func: 'get', obj: 'TemplatesAction'});\n\t\t\treturn __request.get(this.templatesEndpoint).then((response) => {\n\t\t\t\t____logger.log({description: 'Templates loaded.', response: response, func: 'get', obj: 'TemplatesAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t____logger.error({description: 'Error getting templates.', error: errRes, func: 'get', obj: 'TemplatesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\t____logger.log({description: 'Add template called.', func: 'add', obj: 'TemplatesAction'});\n\t\t\treturn __request.post(this.templatesEndpoint, appData).then((response) => {\n\t\t\t\t____logger.log({description: 'Templates added successfully.', func: 'add', obj: 'TemplatesAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t____logger.error({description: 'Error adding template.', error: errRes, func: 'add', obj: 'TemplatesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Search with partial of username\n\t\tsearch(query) {\n\t\t\t____logger.log({description: 'Search template called.', query: query, func: 'search', obj: 'TemplatesAction'});\n\t\t\tvar searchEndpoint = this.templatesEndpoint + '/search/';\n\t\t\tif (query && _.isString(query)) {\n\t\t\t\tsearchEndpoint += query;\n\t\t\t}\n\t\t\t____logger.log({description: 'Search endpoint created.', endpoint: searchEndpoint, func: 'search', obj: 'TemplatesAction'});\n\t\t\treturn __request.get(searchEndpoint).then((response) => {\n\t\t\t\t____logger.log({description: 'Template(s) found successfully.', response: response, endpoint: searchEndpoint, func: 'search', obj: 'TemplatesAction'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t____logger.log({description: 'Error searching for templates.', query: query, error: errRes, endpoint: searchEndpoint, func: 'search', obj: 'TemplatesAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\t//Convenience vars\n\tlet ___logger = matter.utils.logger;\n\n\tclass File {\n\t\tconstructor(actionData) {\n\t\t\tif (actionData && _.isObject(actionData) && _.has(actionData, 'fileData') && _.has(actionData, 'app')) {\n\t\t\t\t_.extend(this, actionData.fileData);\n\t\t\t\tthis.app = actionData.app;\n\t\t\t\tif (!this.path) {\n\t\t\t\t\tif (!this.ref) {\n\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\tdescription: 'Path or ref required to create file.',\n\t\t\t\t\t\t\tfunc: 'constructor', obj: 'File'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthrow new Error('Path or ref required to create file.');\n\t\t\t\t\t}\n\t\t\t\t\tthis.path = this.pathArrayFromRef.join('/');\n\t\t\t\t}\n\t\t\t\tthis.pathArray = this.path.split('/');\n\t\t\t\t//Get name from data or from pathArray\n\t\t\t\tthis.name = _.has(actionData.fileData, 'name') ? actionData.fileData.name : this.pathArray[this.pathArray.length - 1];\n\t\t\t} else if (actionData && !_.isObject(actionData)) {\n\t\t\t\t___logger.error({\n\t\t\t\t\tdescription: 'Action data is not an object. Action data must be an object that includes app and fileData.',\n\t\t\t\t\tfunc: 'constructor', obj: 'File'\n\t\t\t\t});\n\t\t\t\t//TODO: Get appName from path data?\n\t\t\t\tthrow new Error('File data must be an object that includes path and appName.');\n\t\t\t} else {\n\t\t\t\t___logger.error({\n\t\t\t\t\tdescription: 'File data that includes path and app is needed to create a File action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'File'\n\t\t\t\t});\n\t\t\t\tthrow new Error('File data with path and app is needed to create file action.');\n\t\t\t}\n\t\t\tthis.type = 'file';\n\t\t\t___logger.debug({\n\t\t\t\tdescription: 'File object constructed.', file: this,\n\t\t\t\tfunc: 'constructor', obj: 'File'\n\t\t\t});\n\t\t}\n\t\tget pathArrayFromRef() {\n\t\t\tif (!this.fbRef) {\n\t\t\t\t___logger.error({\n\t\t\t\t\tdescription: 'File fbRef is required to get path array.', file: this,\n\t\t\t\t\tfunc: 'pathArrayFromRef', obj: 'File'\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.fbRef.path.o;\n\t\t}\n\t\tget fileType() {\n\t\t\tif (this.ext == 'js') {\n\t\t\t\treturn 'javascript';\n\t\t\t} else {\n\t\t\t\treturn this.ext;\n\t\t\t}\n\t\t}\n\t\tget ext() {\n\t\t\tlet re = /(?:\\.([^.]+))?$/;\n\t\t\treturn re.exec(this.name)[1];\n\t\t}\n\t\tget safePathArray() {\n\t\t\tlet safeArray = this.pathArray.map((loc) => {\n\t\t\t\t//Replace periods with colons and other unsafe chars as --\n\t\t\t\treturn loc.replace(/[.]/g, ':').replace(/[#$\\[\\]]/g, '--');\n\t\t\t});\n\t\t\t___logger.log({\n\t\t\t\tdescription: 'Safe path array created.',\n\t\t\t\tsafeArray: safeArray, func: 'safePathArray', obj: 'File'\n\t\t\t});\n\t\t\treturn safeArray;\n\t\t}\n\t\tget safePath() {\n\t\t\treturn this.safePathArray.join('/');\n\t\t}\n\t\tget fbUrl() {\n\t\t\tlet url = [config.fbUrl, 'files', this.app.name, this.safePath].join('/');\n\t\t\t___logger.log({\n\t\t\t\tdescription: 'File ref url generated',\n\t\t\t\turl: url, func: 'fbRef', obj: 'File'\n\t\t\t});\n\t\t\treturn url;\n\t\t}\n\t\tget fbRef() {\n\t\t\tif (this.ref) {\n\t\t\t\t___logger.log({\n\t\t\t\t\tdescription: 'File already has reference.',\n\t\t\t\t\tref: this.ref, func: 'fbRef', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn this.ref;\n\t\t\t}\n\t\t\t___logger.log({\n\t\t\t\tdescription: 'Fb ref generatating.',\n\t\t\t\turl: this.fbUrl, func: 'fbRef', obj: 'File'\n\t\t\t});\n\t\t\treturn new Firebase(this.fbUrl);\n\t\t}\n\t\tget headless() {\n\t\t\treturn new Firepad.Headless(this.fbRef);\n\t\t}\n\t\tget() {\n\t\t\t// TODO: Load file from firepad content\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tlet headless = new Firepad.headless(this.fbRef);\n\t\t\t\theadless.getText((text) => {\n\t\t\t\t\theadless.dispose();\n\t\t\t\t\tresolve(text);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tgetFromS3() {\n\t\t\tif (!this.app || !this.app.frontend) {\n\t\t\t\t___logger.log({\n\t\t\t\t\tdescription: 'Application Frontend data not available. Calling applicaiton get.',\n\t\t\t\t\tfunc: 'get', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn this.app.get().then((appData) => {\n\t\t\t\t\tthis.app = appData;\n\t\t\t\t\t___logger.log({\n\t\t\t\t\t\tdescription: 'Application get successful. Getting file.',\n\t\t\t\t\t\tapp: appData, func: 'get', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\treturn this.get();\n\t\t\t\t}, (err) => {\n\t\t\t\t\t___logger.error({\n\t\t\t\t\t\tdescription: 'Application Frontend data not available.',\n\t\t\t\t\t\terror: err, func: 'get', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject({message: 'Front end data is required to get file.'});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t___logger.log({\n\t\t\t\t\t\tdescription: 'AWS creds do not exist, so they are being set.',\n\t\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\t_setAWSConfig();\n\t\t\t\t}\n\t\t\t\tlet s3 = new AWS.S3();\n\t\t\t\tlet getData = {\n\t\t\t\t\tBucket: this.app.frontend.bucketName,\n\t\t\t\t\tKey: this.path\n\t\t\t\t};\n\t\t\t\t//Set contentType from actionData to ContentType parameter of new object\n\t\t\t\tif (this.contentType) {\n\t\t\t\t\tgetData.ContentType = this.contentType;\n\t\t\t\t}\n\t\t\t\t___logger.debug({\n\t\t\t\t\tdescription: 'File get params built.', getData: getData,\n\t\t\t\t\tfile: this, func: 'get', obj: 'File'\n\t\t\t\t});\n\t\t\t\tlet finalData = this;\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ts3.getObject(getData, (err, data) => {\n\t\t\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\tdescription: 'File loaded successfully.',\n\t\t\t\t\t\t\t\tdata: data, func: 'get', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (_.has(data, 'Body')) {\n\t\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\t\tdescription: 'File has content.',\n\t\t\t\t\t\t\t\t\tcontent: data.Body.toString(),\n\t\t\t\t\t\t\t\t\tmetaData: data.Metadata.toString(),\n\t\t\t\t\t\t\t\t\tfunc: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tfinalData.content = data.Body.toString();\n\t\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\t\tdescription: 'File content has been added to file.',\n\t\t\t\t\t\t\t\t\tfile: finalData,\n\t\t\t\t\t\t\t\t\tfunc: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresolve(finalData);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\t\tdescription: 'Error loading file from S3.',\n\t\t\t\t\t\t\t\terror: err, func: 'get', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t//Alias for get\n\t\topen() {\n\t\t\treturn this.get();\n\t\t}\n\t\tpublish(fileData) {\n\t\t\t//TODO: Publish file to application\n\t\t\t___logger.debug({\n\t\t\t\tdescription: 'File publish called.', file: this,\n\t\t\t\tfileData: fileData, func: 'publish', obj: 'File'\n\t\t\t});\n\t\t\tif (!this.app.frontend) {\n\t\t\t\t___logger.error({\n\t\t\t\t\tdescription: 'Application Frontend data not available. Make sure to call .get().',\n\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t\t} else {\n\t\t\t\tif (!_.has(fileData, ['content', 'path'])) {\n\t\t\t\t\t___logger.error({\n\t\t\t\t\t\tdescription: 'File data including path and content required to publish.',\n\t\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject({message: 'File data including path and content required to publish.'});\n\t\t\t\t}\n\t\t\t\tlet saveParams = {\n\t\t\t\t\tBucket: this.app.frontend.bucketName,\n\t\t\t\t\tKey: fileData.path,\n\t\t\t\t\tBody: fileData.content,\n\t\t\t\t\tACL: 'public-read'\n\t\t\t\t};\n\t\t\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\t\t\tif (this.contentType) {\n\t\t\t\t\tsaveParams.ContentType = this.contentType;\n\t\t\t\t}\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t___logger.debug({\n\t\t\t\t\t\tdescription: 'AWS creds do not exist, so they are being set.',\n\t\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\t_setAWSConfig();\n\t\t\t\t}\n\t\t\t\tlet s3 = new AWS.S3();\n\t\t\t\t___logger.debug({\n\t\t\t\t\tdescription: 'File publish params built.',\n\t\t\t\t\tsaveParams: saveParams, fileData: this,\n\t\t\t\t\tfunc: 'publish', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ts3.putObject(saveParams, (err, data) => {\n\t\t\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t___logger.log({\n\t\t\t\t\t\t\t\tdescription: 'File saved successfully.',\n\t\t\t\t\t\t\t\tresponse: data, func: 'publish', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t}\telse {\n\t\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\t\tdescription: 'Error saving file to S3.',\n\t\t\t\t\t\t\t\terror: err, func: 'publish', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tdel() {\n\t\t\tif (!this.app || !this.app.frontend) {\n\t\t\t\t___logger.log({description: 'Application Frontend data not available. Calling applicaiton get.', func: 'get', obj: 'File'});\n\t\t\t\treturn this.app.get().then((appData) => {\n\t\t\t\t\tthis.app = appData;\n\t\t\t\t\t___logger.log({description: 'Application get successful. Getting file.', app: appData, func: 'get', obj: 'File'});\n\t\t\t\t\treturn this.get();\n\t\t\t\t}, (err) => {\n\t\t\t\t\t___logger.error({description: 'Application Frontend data not available. Make sure to call .get().', error: err, func: 'get', obj: 'File'});\n\t\t\t\t\treturn Promise.reject({message: 'Front end data is required to get file.'});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t___logger.debug({description: 'AWS creds do not exist, so they are being set.', func: 'publish', obj: 'File'});\n\t\t\t\t\t_setAWSConfig();\n\t\t\t\t}\n\t\t\t\tlet s3 = new AWS.S3();\n\t\t\t\tlet saveParams = {\n\t\t\t\t\tBucket: this.app.frontend.bucketName,\n\t\t\t\t\tKey: this.path\n\t\t\t\t};\n\t\t\t\t//Set contentType from actionData to ContentType parameter of new object\n\t\t\t\tif (this.contentType) {\n\t\t\t\t\tsaveParams.ContentType = this.contentType;\n\t\t\t\t}\n\t\t\t\t___logger.debug({\n\t\t\t\t\tdescription: 'File get params built.',\n\t\t\t\t\tsaveParams: saveParams, file: this,\n\t\t\t\t\tfunc: 'get', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ts3.deleteObject(saveParams, function(err, data) {\n\t\t\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\tdescription: 'File loaded successfully.',\n\t\t\t\t\t\t\t\tfileData: data, func: 'get', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (_.has(data, 'Body')) {\n\t\t\t\t\t\t\t\t___logger.info({\n\t\t\t\t\t\t\t\t\tdescription: 'File has content.',\n\t\t\t\t\t\t\t\t\tfileData: data.Body.toString(), func: 'get', obj: 'File'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresolve(data.Body.toString());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\telse {\n\t\t\t\t\t\t\t___logger.error({\n\t\t\t\t\t\t\t\tdescription: 'Error loading file from S3.',\n\t\t\t\t\t\t\t\terror: err, func: 'get', obj: 'File'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\topenInFirepad(editor) {\n\t\t\t//Load file contents from s3\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.get().then((file) => {\n\t\t\t\t\t___logger.log({\n\t\t\t\t\t\tdescription: 'File contents loaded. Opening firepad.',\n\t\t\t\t\t\teditor: editor, file: file,\n\t\t\t\t\t\tfunc: 'openInFirepad', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\t//Open firepad from ace with file content as default\n\t\t\t\t\tlet firepad = file.firepadFromAce(editor);\n\t\t\t\t\t//Wait for firepad to be ready\n\t\t\t\t\tfirepad.on('ready', () => {\n\t\t\t\t\t\tresolve(file);\n\t\t\t\t\t\t// firepad.setText()\n\t\t\t\t\t});\n\t\t\t\t}, (err) => {\n\t\t\t\t\t___logger.error({\n\t\t\t\t\t\tdescription: 'Valid ace editor instance required to create firepad.',\n\t\t\t\t\t\tfunc: 'openInFirepad', obj: 'File', editor: editor\n\t\t\t\t\t});\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tfirepadFromAce(editor) {\n\t\t\t//TODO:Create new Firepad instance within div\n\t\t\tif (!editor || typeof editor.setTheme !== 'function') {\n\t\t\t\t___logger.error({\n\t\t\t\t\tdescription: 'Valid ace editor instance required to create firepad.',\n\t\t\t\t\tfunc: 'fbRef', obj: 'File', editor: editor\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof Firepad.fromACE !== 'function') {\n\t\t\t\t___logger.error({\n\t\t\t\t\tdescription: 'Firepad does not have fromACE method.',\n\t\t\t\t\tfirepad: Firepad, func: 'fbRef', obj: 'File'\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet settings = {};\n\t\t\tif (this.content) {\n\t\t\t\tsettings.defaultText = this.content;\n\t\t\t}\n\t\t\tif (matter.isLoggedIn && matter.currentUser) {\n\t\t\t\tsettings.userId = matter.currentUser.username || matter.currentUser.name;\n\t\t\t}\n\t\t\t___logger.log({\n\t\t\t\tdescription: 'Creating firepad from ace.',\n\t\t\t\tsettings: settings, func: 'fbRef', obj: 'File'\n\t\t\t});\n\t\t\treturn Firepad.fromACE(this.fbRef, editor, settings);\n\t\t}\n\t\tgetConnectedUsers() {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.fbRef.child('users').on('value', (usersSnap) => {\n\t\t\t\t\tif (usersSnap.val() === null) {\n\t\t\t\t\t\tresolve([]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet usersArray = [];\n\t\t\t\t\t\tusersSnap.forEach((userSnap) => {\n\t\t\t\t\t\t\tlet user = userSnap.val();\n\t\t\t\t\t\t\tuser.username = userSnap.key();\n\t\t\t\t\t\t\tusersArray.push(user);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t___logger.log({\n\t\t\t\t\t\t\tdescription: 'Connected users array built.',\n\t\t\t\t\t\t\tusers: usersArray, func: 'connectedUsers', obj: 'File'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresolve(usersArray);\n\t\t\t\t\t}\n\t\t\t\t}, (err) => {\n\t\t\t\t\t___logger.error({\n\t\t\t\t\t\tdescription: 'Error loading connected users.',\n\t\t\t\t\t\terror: err, func: 'connectedUsers', obj: 'File'\n\t\t\t\t\t});\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tgetDefaultContent() {\n\t\t\t//TODO: Fill with default data for matching file type\n\t\t}\n\t}\n\t//------------------ Utility Functions ------------------//\n\n\t// AWS Config\n\tfunction _setAWSConfig() {\n\t\tAWS.config.update({\n\t\t\tcredentials: new AWS.CognitoIdentityCredentials({\n\t\t\tIdentityPoolId: config.aws.cognito.poolId\n\t\t}),\n\t\t\tregion: config.aws.region\n\t\t});\n\t}\n\n\t//Convenience vars\n\tlet __logger = matter.utils.logger;\n\n\tclass Files {\n\t\tconstructor(filesData) {\n\t\t\tif (filesData && _.isObject(filesData) && _.has(filesData, 'app')) { //Data is object containing directory data\n\t\t\t\tthis.app = filesData.app;\n\t\t\t} else if (filesData && _.isString(filesData)) { //Data is string name\n\t\t\t\tthis.app = {name: filesData};\n\t\t\t} else if (filesData && _.isArray(filesData)) {\n\t\t\t\t//TODO: Handle an array of files being passed as data\n\t\t\t\t__logger.error({\n\t\t\t\t\tdescription: 'Action data object with name is required to start a Files Action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Files'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Files Data object with application is required to start a Files action.');\n\t\t\t} else {\n\t\t\t\t__logger.error({\n\t\t\t\t\tdescription: 'Action data object with name is required to start a Files Action.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Files'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Files Data object with name is required to start a Files action.');\n\t\t\t}\n\t\t\t__logger.debug({\n\t\t\t\tdescription: 'Files object constructed.',\n\t\t\t\tfunc: 'constructor', obj: 'Files'\n\t\t\t});\n\t\t}\n\t\tget fbUrl() {\n\t\t\treturn `${config.fbUrl}/files/${this.app.name}`;\n\t\t}\n\t\tget fbRef() {\n\t\t\t__logger.log({\n\t\t\t\tdescription: 'Url created for files fbRef.',\n\t\t\t\turl: this.fbUrl, func: 'fbRef', obj: 'Files'\n\t\t\t});\n\t\t\treturn new Firebase(this.fbUrl);\n\t\t}\n\t\tget pathArrayFromFbRef() {\n\t\t\t//Handle fbUrls that have multiple levels\n\t\t\tlet removeArray = config.fbUrl.replace('https://', '').split('/');\n\t\t\tremoveArray.shift();\n\t\t\t__logger.warn({\n\t\t\t\tdescription: 'Remove array started.',\n\t\t\t\tremoveArray: removeArray, fbRefArray: this.fbRef.path.o, func: 'fbRef', obj: 'Files'\n\t\t\t});\n\t\t\tlet pathArray = this.fbRef.path.o.splice(0, removeArray.length);\n\t\t\t__logger.warn({\n\t\t\t\tdescription: 'Path array built.',\n\t\t\t\tpathArray: pathArray, func: 'fbRef', obj: 'Files'\n\t\t\t});\n\t\t\treturn pathArray;\n\t\t}\n\t\tget() {\n\t\t\t// TODO: get files list from firebase\n\t\t\tconsole.warn(this.pathArrayFromFbRef);\n\t\t\t__logger.log({\n\t\t\t\tdescription: 'Files get called.',\n\t\t\t\tfunc: 'get', obj: 'Files'\n\t\t\t});\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tthis.fbRef.once('value', (filesSnap) => {\n\t\t\t\t\t__logger.warn({\n\t\t\t\t\t\tdescription: 'Files loaded from firebase.',\n\t\t\t\t\t\tval: filesSnap.val(), func: 'get', obj: 'Files'\n\t\t\t\t\t});\n\t\t\t\t\tlet filesArray = [];\n\t\t\t\t\t// let filesPathArray =  this.pathArrayFromFbRef;\n\t\t\t\t\tfilesSnap.forEach((objSnap) => {\n\t\t\t\t\t\tlet objData = objSnap.hasChild('meta') ? objSnap.child('meta').val() : {path: objSnap.key()};\n\t\t\t\t\t\t//TODO: Have a better fallback for when meta does not exist\n\t\t\t\t\t\t// if (!objData.path) {\n\t\t\t\t\t\t// \tobjSnap.ref().path.o.splice(0, filesPathArray.length);\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tobjData.key = objSnap.key();\n\t\t\t\t\t\tfilesArray.push(objData);\n\t\t\t\t\t});\n\t\t\t\t\t__logger.warn({\n\t\t\t\t\t\tdescription: 'Files array built.',\n\t\t\t\t\t\tval: filesArray, func: 'get', obj: 'Files'\n\t\t\t\t\t});\n\t\t\t\t\tresolve(filesArray);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tgetFromS3() {\n\t\t\tif (!this.app.frontend || !this.app.frontend.bucketName) {\n\t\t\t\t__logger.warn({\n\t\t\t\t\tdescription: 'Application Frontend data not available. Calling .get().',\n\t\t\t\t\tapp: this.app, func: 'getFromS3', obj: 'Files'\n\t\t\t\t});\n\t\t\t\treturn this.app.get().then((applicationData) => {\n\t\t\t\t\t__logger.log({\n\t\t\t\t\t\tdescription: 'Application get returned.',\n\t\t\t\t\t\tdata: applicationData, func: 'getFromS3', obj: 'Files'\n\t\t\t\t\t});\n\t\t\t\t\tthis.app = applicationData;\n\t\t\t\t\tif (_.has(applicationData, 'frontend')) {\n\t\t\t\t\t\treturn this.get();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t__logger.error({\n\t\t\t\t\t\t\tdescription: 'Application does not have Frontend to get files from.',\n\t\t\t\t\t\t\tfunc: 'getFromS3', obj: 'Files'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn Promise.reject({\n\t\t\t\t\t\t\tmessage: 'Application does not have frontend to get files from.'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, (err) => {\n\t\t\t\t\t__logger.error({\n\t\t\t\t\t\tdescription: 'Application Frontend data not available. Make sure to call .get().',\n\t\t\t\t\t\terror: err, func: 'getFromS3', obj: 'Files'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject({\n\t\t\t\t\t\tmessage: 'Bucket name required to get objects'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t// logger.info('AWS creds are being updated to make request');\n\t\t\t\t\tsetAWSConfig();\n\t\t\t\t}\n\t\t\t\tlet s3 = new AWS.S3();\n\t\t\t\tlet listParams = {Bucket: this.app.frontend.bucketName};\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ts3.listObjects(listParams, function(err, data) {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t__logger.info({\n\t\t\t\t\t\t\t\tdescription: 'Files list loaded.', filesData: data, func: 'get', obj: 'Files'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn resolve(data.Contents);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t__logger.error({\n\t\t\t\t\t\t\t\tdescription: 'Error getting files from S3.', error: err, func: 'get', obj: 'Files'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tadd() {\n\t\t\t//TODO: Add a file to files list\n\t\t}\n\t\tdel() {\n\t\t\t//TODO: Delete a file from files list\n\t\t}\n\t\tpublish() {\n\t\t\t//TODO: Publish all files\n\t\t}\n\t\tbuildStructure() {\n\t\t\t__logger.debug({\n\t\t\t\tdescription: 'Build Structure called.',\n\t\t\t\tfunc: 'buildStructure', obj: 'Application'\n\t\t\t});\n\t\t\treturn this.get().then((filesArray) => {\n\t\t\t\t__logger.log({\n\t\t\t\t\tdescription: 'Child struct from array.',\n\t\t\t\t\tchildStructure: childStruct,\n\t\t\t\t\tfunc: 'buildStructure', obj: 'Application'\n\t\t\t\t});\n\t\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\t\t//TODO: have child objects have correct classes (file/folder)\n\t\t\t\t__logger.log({\n\t\t\t\t\tdescription: 'Child struct from array.',\n\t\t\t\t\tchildStructure: childStruct,\n\t\t\t\t\tfunc: 'buildStructure', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn childStruct;\n\t\t\t}, (err) => {\n\t\t\t\t__logger.error({\n\t\t\t\t\tdescription: 'Error getting application files.',\n\t\t\t\t\terror: err, func: 'buildStructure', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject({\n\t\t\t\t\tmessage: 'Error getting files.',\n\t\t\t\t\terror: err\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t//ALIAS FOR buildStructure\n\t\t// get structure() {\n\t\t// \treturn this.buildStructure();\n\t\t// }\n\t}\n\t//------------------ Utility Functions ------------------//\n\n\t// AWS Config\n\tfunction setAWSConfig() {\n\t\tAWS.config.update({\n\t\t\tcredentials: new AWS.CognitoIdentityCredentials({\n\t\t\tIdentityPoolId: config.aws.cognito.poolId\n\t\t}),\n\t\t\tregion: config.aws.region\n\t\t});\n\t}\n\t//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n\t//Examples for two files (index.html and /testFolder/file.js):\n\t//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n\t//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\n\tfunction childrenStructureFromArray(fileArray) {\n\t\t// logger.log('childStructureFromArray called:', fileArray);\n\t\t//Create a object for each file that stores the file in the correct 'children' level\n\t\tvar mappedStructure = fileArray.map(function(file) {\n\t\t\treturn buildStructureObject(file);\n\t\t});\n\t\treturn combineLikeObjs(mappedStructure);\n\t}\n\t//Convert file with key into a folder/file children object\n\tfunction buildStructureObject(file) {\n\t\tvar pathArray;\n\t\t// console.log('buildStructureObject with:', file);\n\t\tif (_.has(file, 'path')) {\n\t\t\t//Coming from files already having path (structure)\n\t\t\tpathArray = file.path.split('/');\n\t\t} else if (_.has(file, 'Key')) {\n\t\t\t//Coming from aws\n\t\t\tpathArray = file.Key.split('/');\n\t\t\t// console.log('file before pick:', file);\n\t\t\tfile = _.pick(file, 'Key');\n\t\t\tfile.path = file.Key;\n\t\t\tfile.name = file.Key;\n\t\t} else {\n\t\t\tconsole.error('Invalid file.', file);\n\t\t}\n\t\tvar currentObj = file;\n\t\tif (pathArray.length == 1) {\n\t\t\tcurrentObj.name = pathArray[0];\n\t\t\tif (!_.has(currentObj,'type')) {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t}\n\t\t\tcurrentObj.path = pathArray[0];\n\t\t\treturn currentObj;\n\t\t} else {\n\t\t\tvar finalObj = {};\n\t\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = _.take(list, ind + 1).join('/');\n\t\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t\t//TODO: Find out why this works\n\t\t\t\t\tif (ind == 0) {\n\t\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t\t} else {\n\t\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\t\tif (file.$id) {\n\t\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn finalObj;\n\t\t}\n\t}\n\t//Recursivley combine children of object's that have the same names\n\tfunction combineLikeObjs(mappedArray) {\n\t\tvar takenNames = [];\n\t\tvar finishedArray = [];\n\t\t_.each(mappedArray, (obj) => {\n\t\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\t\ttakenNames.push(obj.name);\n\t\t\t\tfinishedArray.push(obj);\n\t\t\t} else {\n\t\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t\t//Combine children of like objects\n\t\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t\t// logger.log('extended obj:',likeObj);\n\t\t\t}\n\t\t});\n\t\treturn finishedArray;\n\t}\n\n\t//Convenience vars\n\tlet _request = matter.utils.request;\n\tlet _logger = matter.utils.logger;\n\n\t/**\n\t * Application class.\n\t *\n\t */\n\tclass Application {\n\t\tconstructor(appData) {\n\t\t\t//Setup application data based on input\n\t\t\tif (appData && _.isObject(appData)) {\n\t\t\t\t_.extend(this, appData);\n\t\t\t} else if (appData && _.isString(appData)) {\n\t\t\t\tthis.name = appData;\n\t\t\t}\n\t\t\tif (Firebase && _.has(config, 'fbUrl') && _.has(this, 'name')) {\n\t\t\t\tthis.fbUrl = `${config.fbUrl}/${this.name}`;\n\t\t\t\tthis.fbRef = new Firebase(this.fbUrl);\n\t\t\t}\n\t\t\t// logger.debug({description: 'Application object created.', application: this, func: 'constructor', obj: 'Application'});\n\t\t}\n\t\tget appEndpoint() {\n\t\t\treturn `${matter.endpoint}/apps/${this.name}`;\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Application get called.', func: 'get', obj: 'Application'\n\t\t\t});\n\t\t\treturn _request.get(this.appEndpoint).then((response) => {\n\t\t\t\t_logger.info({\n\t\t\t\t\tdescription: 'Application loaded successfully.', response: response,\n\t\t\t\t\tapplication: new Application(response), func: 'get', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_logger.error({\n\t\t\t\t\tdescription: 'Error getting Application.',\n\t\t\t\t\tmessage: errRes.response.text ,error: errRes,\n\t\t\t\t\tfunc: 'get', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\t//Update an application\n\t\tupdate(appData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Application update called.',\n\t\t\t\tfunc: 'update', obj: 'Application'\n\t\t\t});\n\t\t\treturn _request.put(this.appEndpoint, appData).then((response) => {\n\t\t\t\t_logger.info({\n\t\t\t\t\tdescription: 'Application updated successfully.',\n\t\t\t\t\tresponse: response, func: 'update', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_logger.error({\n\t\t\t\t\tdescription: 'Error updating application.',\n\t\t\t\t\terror: errRes, func: 'update', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\n\t\taddStorage() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Application add storage called.', application: this,\n\t\t\t\tfunc: 'addStorage', obj: 'Application'\n\t\t\t});\n\t\t\treturn _request.post(`${this.appEndpoint}/storage`, {}).then((response) => {\n\t\t\t\t_logger.info({\n\t\t\t\t\tdescription: 'Storage successfully added to application.',\n\t\t\t\t\tresponse: response, application: new Application(response),\n\t\t\t\t\tfunc: 'addStorage', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_logger.error({\n\t\t\t\t\tdescription: 'Error adding storage to application.',\n\t\t\t\t\terror: errRes, func: 'addStorage', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\tapplyTemplate() {\n\t\t\t_logger.error({\n\t\t\t\tdescription: 'Applying templates to existing applications is not currently supported.',\n\t\t\t\tfunc: 'applyTemplate', obj: 'Application'\n\t\t\t});\n\t\t\treturn _request.post(this.appEndpoint, {}).then((response) => {\n\t\t\t\t_logger.info({\n\t\t\t\t\tdescription: 'Template successfully applied to application.',\n\t\t\t\t\tresponse: response, application: this,\n\t\t\t\t\tfunc: 'applyTemplate', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\t_logger.error({\n\t\t\t\t\tdescription: 'Error applying template to application.',\n\t\t\t\t\terror: errRes, application: this,\n\t\t\t\t\tfunc: 'applyTemplate', obj: 'Application'\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(errRes.response.text || errRes.response);\n\t\t\t});\n\t\t}\n\t\t//Files object that contains files methods\n\t\tget Files() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications files action called.',\n\t\t\t\tapplication: this, func: 'files', obj: 'Application'\n\t\t\t});\n\t\t\treturn new Files({app: this});\n\t\t}\n\t\tFile(fileData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications file action called.',\n\t\t\t\tfileData: fileData, application: this,\n\t\t\t\tfunc: 'file', obj: 'Application'\n\t\t\t});\n\t\t\treturn new File({app: this, fileData: fileData});\n\t\t}\n\t\tget Users() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications users action called.',\n\t\t\t\tapplication: this, func: 'user', obj: 'Application'\n\t\t\t});\n\t\t\treturn new AccountsAction({app: this});\n\t\t}\n\t\tUser(userData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications user action called.',\n\t\t\t\tuserData: userData, application: this, func: 'user',\n\t\t\t\tobj: 'Application'\n\t\t\t});\n\t\t\treturn new Account({app: this, userData: userData});\n\t\t}\n\t\tget Accounts() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications account action called.',\n\t\t\t\tapplication: this, func: 'user', obj: 'Application'\n\t\t\t});\n\t\t\treturn new AccountsAction({app: this});\n\t\t}\n\t\tAccount(userData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications account action called.',\n\t\t\t\tuserData: userData, application: this,\n\t\t\t\tfunc: 'user', obj: 'Application'\n\t\t\t});\n\t\t\treturn new Account({app: this, userData: userData});\n\t\t}\n\t\tget Groups() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications groups action called.',\n\t\t\t\tapplication: this, func: 'groups', obj: 'Application'\n\t\t\t});\n\t\t\treturn new GroupsAction({app: this});\n\t\t}\n\t\tGroup(groupData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications group action called.',\n\t\t\t\tgroupData: groupData, application: this,\n\t\t\t\tfunc: 'group', obj: 'Application'\n\t\t\t});\n\t\t\treturn new Group({app: this, groupData: groupData});\n\t\t}\n\t\tget Directories() {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications directories action called.',\n\t\t\t\tapplication: this, func: 'directories', obj: 'Application'\n\t\t\t});\n\t\t\treturn new DirectoriesAction({app: this});\n\t\t}\n\t\tDirectory(directoryData) {\n\t\t\t_logger.debug({\n\t\t\t\tdescription: 'Applications directory action called.',\n\t\t\t\tdirectoryData: directoryData, application: this,\n\t\t\t\tfunc: 'directory', obj: 'Application'\n\t\t\t});\n\t\t\treturn new Directory({app: this, directoryData: directoryData});\n\t\t}\n\t}\n\n\tlet request = matter.utils.request;\n\tlet logger = matter.utils.logger;\n\n\t//Actions for applications list\n\tclass AppsAction {\n\t\tconstructor() {\n\t\t\t//Call matter with name and settings\n\t\t}\n\t\tget appsEndpoint() {\n\t\t\treturn `${matter.endpoint}/apps`;\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\tlogger.debug({description: 'Apps get called.', action: this, func: 'get', obj: 'AppsAction'});\n\t\t\treturn request.get(this.appsEndpoint).then((response) => {\n\t\t\t\tlogger.info({description: 'Apps data loaded successfully.', response: response, func: 'get', obj: 'AppsAction'});\n\t\t\t\t//TODO: Return application object\n\t\t\t\t// return new Application(response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error getting apps data.', error: errRes, func: 'get', obj: 'AppsAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\tlogger.debug({description: 'Application add called.', appData: appData, func: 'add', obj: 'AppsAction'});\n\t\t\treturn matter.utils.request.post(this.appsEndpoint, appData).then((response) => {\n\t\t\t\tlogger.info({description: 'Application added successfully.', response: response, func: 'add', obj: 'AppsAction'});\n\t\t\t\t// TODO: Return application object\n\t\t\t\t// return new Application(response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error adding app.', error: errRes, func: 'add', obj: 'AppsAction'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**Grout Client Class\n\t * @ description Extending matter provides token storage and login/logout/signup capabilities\n\t */\n\tclass Grout extends Matter {\n\t\t//TODO: Use getter/setter to make this not a function\n\t\tconstructor() {\n\t\t\t//Call matter with tessellate\n\t\t\tsuper(config.appName, config.matterOptions);\n\t\t}\n\t\t//Start a new Apps Action\n\t\tget Apps() {\n\t\t\tthis.utils.logger.debug({\n\t\t\t\tdescription: 'Apps Action called.', action: new AppsAction(),\n\t\t\t\tfunc: 'Apps', obj: 'Grout'\n\t\t\t});\n\t\t\treturn new AppsAction();\n\t\t}\n\t\t//Start a new App action\n\t\tApp(appName) {\n\t\t\tthis.utils.logger.debug({description: 'Application action called.', appName: appName, template: new Application(appName), func: 'App', obj: 'Grout'});\n\t\t\treturn new Application(appName);\n\t\t}\n\t\t//Start a new Apps Action\n\t\tget Templates() {\n\t\t\tthis.utils.logger.debug({description: 'Templates Action called.', action: new TemplatesAction(), func: 'Templates', obj: 'Grout'});\n\t\t\treturn new TemplatesAction();\n\t\t}\n\t\t//Start a new App action\n\t\tTemplate(templateData) {\n\t\t\tthis.utils.logger.debug({description: 'Template Action called.', templateData: templateData, template: new Template(templateData), func: 'Template', obj: 'Grout'});\n\t\t\treturn new Template(templateData);\n\t\t}\n\t\t//Start a new Accounts action\n\t\tget Accounts() {\n\t\t\tthis.utils.logger.debug({description: 'Account Action called.', action: new AccountsAction(), func: 'users', obj: 'Grout'});\n\t\t\treturn new AccountsAction();\n\t\t}\n\t\t//Start a new Account action\n\t\tAccount(userData) {\n\t\t\tthis.utils.logger.debug({description: 'Account Action called.', userData: userData, user: new Account(userData), func: 'user', obj: 'Grout'});\n\t\t\treturn new Account(userData);\n\t\t}\n\t\t//ALIAS OF ACCOUNTS\n\t\t//Start a new Accounts action\n\t\tget Users() {\n\t\t\tthis.utils.logger.debug({description: 'Accounts Action called.', action: new AccountsAction(), func: 'Users', obj: 'Grout'});\n\t\t\treturn new AccountsAction();\n\t\t}\n\t\t//ALIAS OF ACCOUNT\n\t\t//Start a new Account action\n\t\tUser(userData) {\n\t\t\tthis.utils.logger.debug({description: 'Account Action called.', userData: userData, user: new Account(userData), func: 'user', obj: 'Grout'});\n\t\t\treturn new Account(userData);\n\t\t}\n\t\t//Start a new Groups action\n\t\tget Groups() {\n\t\t\tthis.utils.logger.debug({\n\t\t\t\tdescription: 'Groups Action called.', action: new GroupsAction(), func: 'groups', obj: 'Grout'\n\t\t\t});\n\t\t\treturn new GroupsAction();\n\t\t}\n\t\t//Start a new Group action\n\t\tGroup(groupData) {\n\t\t\tthis.utils.logger.debug({\n\t\t\t\tdescription: 'Group Action called.', groupData: groupData,\n\t\t\t\taction: new Group({app: this, groupData: groupData}),\n\t\t\t\tfunc: 'group', obj: 'Grout'\n\t\t\t});\n\t\t\treturn new Group(groupData);\n\t\t}\n\t\t//Start a new Directories action\n\t\tget Directories() {\n\t\t\tthis.utils.logger.debug({\n\t\t\t\tdescription: 'Directories Action called.',\n\t\t\t\taction: new DirectoriesAction(), func: 'directories', obj: 'Grout'\n\t\t\t});\n\t\t\treturn new DirectoriesAction();\n\t\t}\n\t\t//Start a new Group action\n\t\tDirectory(directoryData) {\n\t\t\tthis.utils.logger.debug({\n\t\t\t\tdescription: 'Directory Action called.', directoryData: directoryData,\n\t\t\t\taction: new Directory(directoryData), func: 'directory', obj: 'Grout'\n\t\t\t});\n\t\t\treturn new Directory(directoryData);\n\t\t}\n\t}\n\n\treturn Grout;\n\n}));"],"sourceRoot":"/source/"}