function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("superagent"),require("underscore"),require("firebase")):"function"==typeof define&&define.amd?define(["superagent","underscore","firebase"],t):e.Grout=t(e.superagent,e._,e.Firebase)}(this,function(e,t,n){"use strict";function r(e){return new Promise(function(t,n){e.end(function(e,r){return e?(401==e.status&&console.warn("Unauthorized. You must be signed into make this request."),n(e)):t(r.body)})})}function o(e){return l.getItem(c.tokenName)&&(e=e.set("Authorization","Bearer "+l.getItem(c.tokenName)),console.log("Set auth header")),e}function i(){AWS.config.update({credentials:new AWS.CognitoIdentityCredentials({IdentityPoolId:c.aws.cognito.poolId}),region:c.aws.region})}function s(e){var t=e.map(function(e){return a(e)});return u(t)}function a(e){var n;t.has(e,"path")?n=e.path.split("/"):(n=e.Key.split("/"),e=t.pick(e,"Key"),e.path=e.Key,e.name=e.Key);var r=e;if(1==n.length)return r.name=n[0],t.has(r,"type")||(r.type="file"),r.path=n[0],r;var o={};return t.each(n,function(i,s,a){s!=a.length-1?(r.name=i,r.path=t.first(a,s+1).join("/"),r.type="folder",r.children=[{}],0==s&&(o=r),r=r.children[0]):(r.type="file",r.name=i,r.path=n.join("/"),e.$id&&(r.$id=e.$id))}),o}function u(e){var n=[],r=[];return t.each(e,function(o,i,s){if(-1==n.indexOf(o.name))n.push(o.name),r.push(o);else{var a=t.findWhere(e,{name:o.name});a.children=t.union(o.children,a.children),a.children=u(a.children)}}),r}e="default"in e?e["default"]:e,t="default"in t?t["default"]:t,n="default"in n?n["default"]:n;var c={serverUrl:"hypercube.elasticbeanstalk.com",tokenName:"matter-client",fbUrl:"https://pruvit.firebaseio.com/",aws:{region:"us-east-1",cognito:{poolId:"us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982",params:{RoleArn:"arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1"}}}};"undefined"==typeof window||""!=window.location.hostname&&"localhost"!=window.location.hostname||(c.serverUrl="http://localhost:4000");var l=Object.defineProperties({setItem:function(e,t){this.exists&&window.sessionStorage.setItem(e,t)},getItem:function(e){return this.exists?window.sessionStorage.getItem(e):null},removeItem:function(e){if(this.exists)try{window.sessionStorage.removeItem(e)}catch(t){console.warn("Item could not be removed from session storage.",t)}},clear:function(){if(this.exists)try{window.sessionStorage.clear()}catch(e){console.warn("Session storage could not be cleared.",e)}}},{exists:{get:function(){var e="test";if("undefined"==typeof window)return!1;try{return window.sessionStorage.setItem(e,"1"),window.sessionStorage.removeItem(e),!0}catch(t){return console.warn("Session storage does not exist.",t),!1}},configurable:!0,enumerable:!0}}),p={get:function(t,n){var i=e.get(t);return n&&i.query(n),i=o(i),r(i)},post:function(t,n){var i=e.post(t).send(n);return i=o(i),r(i)},put:function(t,n){var i=e.put(t).send(n);return i=o(i),r(i)},del:function(t,n){var i=e.put(t).send(n);return i=o(i),r(i)}},d=function(){function e(t){_classCallCheck(this,e),this.name=t.name,this.owner=t.owner||null,this.collaborators=t.collaborators||[],this.createdAt=t.createdAt,this.updatedAt=t.updatedAt,this.frontend=t.frontend||{},this.backend=t.backend||{},n&&(this.fbRef=new n(c.fbUrl+t.name))}return _createClass(e,[{key:"getStructure",value:function(){return this.getFiles().then(function(e){var t=s(e);return console.log("Child struct from array:",t),t},function(e){return console.error("[Application.getStructure] Error getting files: ",e),Promise.reject({message:"Error getting files.",error:e})})}},{key:"getFiles",value:function(){if(this.frontend&&this.frontend.bucketName){"undefined"!=typeof AWS.config.credentials&&AWS.config.credentials||i();var e=new AWS.S3,t={Bucket:this.frontend.bucketName};return new Promise(function(n,r){e.listObjects(t,function(e,t){return e?(console.error("[Application.getObjects()] Error listing objects:",e),r(e)):(console.log("[Application.getObjects()] listObjects returned:",t),n(t.Contents))})})}return console.error("[Applicaiton.getFiles] Attempting to get objects for bucket without name."),Promise.reject({message:"Bucket name required to get objects"})}},{key:"publishFile",value:function(e){if(!this.frontend)return console.error("Frontend data not available. Make sure to call .get()."),Promise.reject({message:"Front end data is required to publish file."});var t={Bucket:this.frontent.bucketName,Key:e.key,Body:e.content,ACL:"public-read"};return e.contentType&&(t.ContentType=e.contentType),s3.putObject(t,function(e,t){return e?(console.error("[Application.publishFile()] Error saving file:",e),Promise.reject(e)):(console.log("[Application.publishFile()] file saved successfully. Returning:",t),t)})}},{key:"addStorage",value:function(){var t=c.serverUrl+"/apps/"+this.name+"/storage";return p.post(t,appData).then(function(t){return console.log("[Application.addStorage()] Apps:",t),new e(t)})["catch"](function(e){return console.error("[Application.addStorage()] Error getting apps list: ",e),Promise.reject(e)})}},{key:"applyTemplate",value:function(){c.serverUrl+"/apps/"+this.name+"/template";console.log("Applying templates to existing")}}]),e}(),f=function(){function e(t){if(_classCallCheck(this,e),!t)throw console.error("Application name is required to start an AppAction"),new Error("Application name is required to start an AppAction");this.name=t,this.endpoint=c.serverUrl+"/apps/"+this.name}return _createClass(e,[{key:"get",value:function(){return p.get(this.endpoint).then(function(e){return console.log("[MatterClient.app().get()] App(s) data loaded:",e),new d(e)})["catch"](function(e){return console.error("[MatterClient.app().get()] Error getting apps list: ",e),Promise.reject(e)})}},{key:"update",value:function(e){return p.put(this.endpoint,e).then(function(e){return console.log("[MatterClient.apps().update()] App:",e),new d(e)})["catch"](function(e){return console.error("[MatterClient.apps().update()] Error updating app: ",e),Promise.reject(e)})}},{key:"del",value:function(e){return p["delete"](this.endpoint,e).then(function(e){return console.log("[MatterClient.apps().del()] Apps:",e),new d(e)})["catch"](function(e){return console.error("[MatterClient.apps().del()] Error deleting app: ",e),Promise.reject(e)})}},{key:"getFiles",value:function(){return this.get().then(function(e){e.getFiles().then(function(e){return e})["catch"](function(e){return console.error("[MatterClient.app().getFiles()] Error getting application files: ",e),Promise.reject(e)})})["catch"](function(e){return console.error("[MatterClient.app().getFiles()] Error getting application: ",e),Promise.reject(e)})}},{key:"getStructure",value:function(){return this.get().then(function(e){return e.getStructure().then(function(e){return console.log("Structure loaded: ",e),e})["catch"](function(e){return console.error("[MatterClient.app().getStructure()] Error getting application structure: ",e),Promise.reject(e)})})["catch"](function(e){return console.error("[MatterClient.app().getStructure()] Error getting application: ",e),Promise.reject(e)})}}]),e}(),g=function(){function e(){_classCallCheck(this,e),this.endpoint=c.serverUrl+"/apps"}return _createClass(e,[{key:"get",value:function(){return p.get(this.endpoint).then(function(e){return console.log("[MatterClient.apps().get()] App(s) data loaded:",e),e})["catch"](function(e){return console.error("[MatterClient.apps().get()] Error getting apps list: ",e),Promise.reject(e)})}},{key:"add",value:function(e){return p.post(this.endpoint,e).then(function(e){return console.log("[MatterClient.apps().add()] Application added successfully: ",e),new Application(e)})["catch"](function(e){return console.error("[MatterClient.getApps()] Error adding application: ",e),Promise.reject(e)})}}]),e}(),h=function(){function e(t){_classCallCheck(this,e),this.name=t.name,this.username=t.username,this.createdAt=t.createdAt,this.updatedAt=t.updatedAt}return _createClass(e,[{key:"app",value:function(e){return new f(e)}},{key:"apps",get:function(){return new g}}]),e}(),m=function(){function e(t){if(_classCallCheck(this,e),!t)throw console.error("Username is required to start an UserAction"),new Error("Username is required to start an UserAction");this.name=t,this.endpoint=c.serverUrl+"/users/"+this.name}return _createClass(e,[{key:"get",value:function(){return p.get(this.endpoint).then(function(e){return console.log("[MatterClient.user().get()] App(s) data loaded:",e),new h(e)})["catch"](function(e){return console.error("[MatterClient.user().get()] Error getting users list: ",e),Promise.reject(e)})}},{key:"update",value:function(e){return p.put(this.endpoint,e).then(function(e){return console.log("[MatterClient.users().update()] App:",e),new h(e)})["catch"](function(e){return console.error("[MatterClient.users().update()] Error updating user: ",e),Promise.reject(e)})}},{key:"del",value:function(e){console.error("Deleting a user is currently disabled.")}}]),e}(),y=function(){function e(){_classCallCheck(this,e),this.endpoint=c.serverUrl+"/users"}return _createClass(e,[{key:"get",value:function(e){var n=this.endpoint;if(e&&!t.isString(e)){var r="Get only handles username as a string";return console.error(r),Promise.reject({message:r})}return e&&(n=n+"/"+e),p.get(n).then(function(e){return console.log("[MatterClient.apps().get()] App(s) data loaded:",e),e})["catch"](function(e){return console.error("[MatterClient.apps().get()] Error getting apps list: ",e),Promise.reject(e)})}},{key:"add",value:function(e){return p.post(this.endpoint,e).then(function(e){return console.log("[MatterClient.apps().add()] Application added successfully: ",e),new Application(e)})["catch"](function(e){return console.error("[MatterClient.getApps()] Error adding application: ",e),Promise.reject(e)})}},{key:"search",value:function(e){console.log("search called:",e);var n=this.endpoint+"/search/";return e&&t.isString(e)&&(n+=e),console.log("searchEndpoint:",n),p.get(n).then(function(e){return console.log("[MatterClient.users().search()] Users(s) data loaded:",e),e})["catch"](function(e){return console.error("[MatterClient.users().search()] Error getting apps list: ",e),Promise.reject(e)})}}]),e}(),v=void 0,w=void 0,k=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"signup",value:function(e){return p.post(c.serverUrl+"/signup",e).then(function(e){return console.log(e),e})["catch"](function(e){return console.error("[Grout.signup()] Error signing up:",e),Promise.reject(e)})}},{key:"login",value:function(e){return e&&e.password&&e.username?p.put(c.serverUrl+"/login",e).then(function(e){return console.log("[Grout.login()]: Login response: ",e),w=e.token,null===l.getItem(c.tokenName)&&(l.setItem(c.tokenName,e.token),console.log("[Grout.login()]: token set to storage:",l.getItem(c.tokenName))),e})["catch"](function(e){return console.error("[Grout.login()] Error logging in: ",e),Promise.reject(e)}):(console.error("Username/Email and Password are required to login."),Promise.reject({message:"Username/Email and Password are required to login."}))}},{key:"logout",value:function(){return p.put(c.serverUrl+"/logout",{}).then(function(e){return console.log("[Grout.logout()] Logout successful: ",e),"undefined"!=typeof window&&null!=typeof l.getItem(c.tokenName)&&l.clear(),e.body})["catch"](function(e){return e.status&&401==e.status?void("undefined"!=typeof window&&null!=l.getItem(c.tokenName)&&l.clear()):(console.error("[Grout.logout()] Error logging out: ",e),Promise.reject(e))})}},{key:"getCurrentUser",value:function(){return p.get(c.serverUrl+"/user",{}).then(function(e){return console.log("[Grout.getCurrentUser()] Current User:",e),v=e})["catch"](function(e){return console.error("[Grout.getCurrentUser()] Error getting current user: ",e),Promise.reject(e)})}},{key:"getAuthToken",value:function(){return"undefined"==typeof window||"undefined"==typeof l.getItem(c.tokenName)?null:l.getItem(c.tokenName)}},{key:"app",value:function(e){return console.log("New AppAction:",new f(e)),new f(e)}},{key:"user",value:function(e){return new m(e)}},{key:"apps",get:function(){return console.log("New AppsAction:",new g),new g}},{key:"users",get:function(){return new y}}]),e}();return k});
//# sourceMappingURL=grout.min.js.map