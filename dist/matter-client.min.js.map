{"version":3,"sources":["matter-client.min.js","/source/matter-client.js","/source/src/utils/request.js","/source/src/classes/Application.js","/source/src/utils/libChecker.js","/source/src/config.js","/source/src/classes/AppsAction.js","/source/src/classes/AppAction.js","/source/src/matter-client.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","require","define","amd","MatterClient","Firebase","AWS","_","superagent","this","handleResponse","req","Promise","resolve","reject","end","err","res","body","addAuthHeader","window","sessionStorage","getItem","config__default","tokenName","set","setAWSConfig","config","update","credentials","CognitoIdentityCredentials","IdentityPoolId","aws","cognito","poolId","region","childrenStructureFromArray","fileArray","mappedStructure","map","file","buildStructureObject","combineLikeObjs","pathArray","has","path","split","Key","pick","name","currentObj","type","finalObj","each","loc","ind","list","first","join","children","$id","mappedArray","takenNames","finishedArray","obj","indexOf","push","likeObj","findWhere","union","libChecker","libsArray","forEach","libName","libRef","eval","console","error","config__config","serverUrl","fbUrl","params","RoleArn","location","hostname","request__requester","undefined","request__request","get","endpoint","queryData","query","post","data","send","put","del","request__default","AppsAction","value","then","response","log","errRes","appData","Application","Application__Application","owner","collaborators","createdAt","updatedAt","frontend","backend","fbRef","getFiles","filesArray","childStruct","message","bucketName","s3","S3","listParams","Bucket","listObjects","Contents","fileData","saveParams","frontent","Body","content","ACL","contentType","ContentType","putObject","Application__default","AppAction","appName","Error","app","getStructure","structure","matter_client__user","matter_client__token","signupData","loginData","password","username","token","setItem","clear","status","matter_client"],"mappings":"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","file":"matter-client.min.js","sourcesContent":["function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"firebase\"),require(\"aws-sdk\"),require(\"underscore\"),require(\"superagent\")):\"function\"==typeof define&&define.amd?define([\"firebase\",\"aws-sdk\",\"underscore\",\"superagent\"],t):e.MatterClient=t(e.Firebase,e.AWS,e._,e.superagent)}(this,function(Firebase,AWS,_,superagent){\"use strict\";function handleResponse(e){return new Promise(function(t,n){e.end(function(e,r){return e?n(e):t(r.body)})})}function addAuthHeader(e){return\"undefined\"!=typeof window&&window.sessionStorage.getItem(config__default.tokenName)&&(e=e.set(\"Authorization\",\"Bearer \"+sessionStorage.getItem(config__default.tokenName))),e}function setAWSConfig(){AWS.config.update({credentials:new AWS.CognitoIdentityCredentials({IdentityPoolId:config__default.aws.cognito.poolId}),region:config__default.aws.region})}function childrenStructureFromArray(e){var t=e.map(function(e){return buildStructureObject(e)});return combineLikeObjs(t)}function buildStructureObject(e){var t;_.has(e,\"path\")?t=e.path.split(\"/\"):(t=e.Key.split(\"/\"),e=_.pick(e,\"Key\"),e.path=e.Key,e.name=e.Key);var n=e;if(1==t.length)return n.name=t[0],_.has(n,\"type\")||(n.type=\"file\"),n.path=t[0],n;var r={};return _.each(t,function(o,i,a){i!=a.length-1?(n.name=o,n.path=_.first(a,i+1).join(\"/\"),n.type=\"folder\",n.children=[{}],0==i&&(r=n),n=n.children[0]):(n.type=\"file\",n.name=o,n.path=t.join(\"/\"),e.$id&&(n.$id=e.$id))}),r}function combineLikeObjs(e){var t=[],n=[];return _.each(e,function(r,o,i){if(-1==t.indexOf(r.name))t.push(r.name),n.push(r);else{var a=_.findWhere(e,{name:r.name});a.children=_.union(r.children,a.children),a.children=combineLikeObjs(a.children)}}),n}var libChecker=function libChecker(libsArray){libsArray.forEach(function(libName){var libRef=libName;libName.length>=20||\"string\"!=typeof libName||(\"undefined\"!=typeof window&&(libRef=\"window.\"+libName),(\"undefined\"==typeof eval(libName)||\"undefined\"==typeof eval(libRef))&&console.error(libName+\" is required to use Matter\"))})},config__config={serverUrl:\"hypercube.elasticbeanstalk.com\",tokenName:\"matter-client\",fbUrl:\"https://pruvit.firebaseio.com/\",aws:{region:\"us-east-1\",cognito:{poolId:\"us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982\",params:{RoleArn:\"arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1\"}}}};\"undefined\"==typeof window||\"\"!=window.location.hostname&&\"localhost\"!=window.location.hostname||(config__config.serverUrl=\"http://localhost:4000\");var config__default=config__config,request__requester=void 0;\"undefined\"==typeof window?request__requester=superagent:\"undefined\"==typeof window.superagent?console.error(\"Superagent is required to use Matter\"):request__requester=window.superagent;var request__request={get:function(e,t){var n=request__requester.get(e);return t&&n.query(t),n=addAuthHeader(n),handleResponse(n)},post:function(e,t){var n=request__requester.post(e).send(t);return n=addAuthHeader(n),handleResponse(n)},put:function(e,t){var n=request__requester.put(e).send(t);return n=addAuthHeader(n),handleResponse(n)},del:function(e,t){var n=request__requester.put(e).send(t);return n=addAuthHeader(n),handleResponse(n)}},request__default=request__request,AppsAction=function(){function e(){_classCallCheck(this,e),this.endpoint=config__default.serverUrl+\"/apps\"}return _createClass(e,[{key:\"get\",value:function(){return request__default.get(this.endpoint).then(function(e){return console.log(\"[MatterClient.apps().get()] App(s) data loaded:\",e),e})[\"catch\"](function(e){return console.error(\"[MatterClient.apps().get()] Error getting apps list: \",e),Promise.reject(e)})}},{key:\"add\",value:function(e){return request__default.post(this.endpoint,e).then(function(e){return console.log(\"[MatterClient.apps().add()] Application added successfully: \",e),new Application(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.getApps()] Error adding application: \",e),Promise.reject(e)})}}]),e}(),Application__Application=function(){function e(t){_classCallCheck(this,e),this.name=t.name,this.owner=t.owner||null,this.collaborators=t.collaborators||[],this.createdAt=t.createdAt,this.updatedAt=t.updatedAt,this.frontend=t.frontend||{},this.backend=t.backend||{},Firebase&&(this.fbRef=new Firebase(config__default.fbUrl+t.name))}return _createClass(e,[{key:\"getStructure\",value:function(){return this.getFiles().then(function(e){var t=childrenStructureFromArray(e);return console.log(\"Child struct from array:\",t),t},function(e){return console.error(\"[Application.getStructure] Error getting files: \",e),Promise.reject({message:\"Error getting files.\",error:e})})}},{key:\"getFiles\",value:function(){if(this.frontend&&this.frontend.bucketName){\"undefined\"!=typeof AWS.config.credentials&&AWS.config.credentials||setAWSConfig();var e=new AWS.S3,t={Bucket:this.frontend.bucketName};return new Promise(function(n,r){e.listObjects(t,function(e,t){return e?(console.error(\"[Application.getObjects()] Error listing objects:\",e),r(e)):(console.log(\"[Application.getObjects()] listObjects returned:\",t),n(t.Contents))})})}return console.error(\"[Applicaiton.getFiles] Attempting to get objects for bucket without name.\"),Promise.reject({message:\"Bucket name required to get objects\"})}},{key:\"publishFile\",value:function(e){if(!this.frontend)return console.error(\"Frontend data not available. Make sure to call .get().\"),Promise.reject({message:\"Front end data is required to publish file.\"});var t={Bucket:this.frontent.bucketName,Key:e.key,Body:e.content,ACL:\"public-read\"};return e.contentType&&(t.ContentType=e.contentType),s3.putObject(t,function(e,t){return e?(console.error(\"[Application.publishFile()] Error saving file:\",e),Promise.reject(e)):(console.log(\"[Application.publishFile()] file saved successfully. Returning:\",t),t)})}},{key:\"addStorage\",value:function(){var t=config__default.serverUrl+\"/apps/\"+this.name+\"/storage\";return request__default.post(t,appData).then(function(t){return console.log(\"[Application.addStorage()] Apps:\",t),new e(t)})[\"catch\"](function(e){return console.error(\"[Application.addStorage()] Error getting apps list: \",e),Promise.reject(e)})}},{key:\"applyTemplate\",value:function(){config__default.serverUrl+\"/apps/\"+this.name+\"/template\";console.log(\"Applying templates to existing\")}}]),e}(),Application__default=Application__Application,AppAction=function(){function e(t){if(_classCallCheck(this,e),!t)throw console.error(\"Application name is required to start an AppAction\"),new Error(\"Application name is required to start an AppAction\");this.name=t,this.endpoint=config__default.serverUrl+\"/apps/\"+this.name}return _createClass(e,[{key:\"get\",value:function(){return request__default.get(this.endpoint).then(function(e){return console.log(\"[MatterClient.app().get()] App(s) data loaded:\",e),new Application__default(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.app().get()] Error getting apps list: \",e),Promise.reject(e)})}},{key:\"update\",value:function(e){return request__default.put(this.endpoint,e).then(function(e){return console.log(\"[MatterClient.apps().update()] App:\",e),new Application__default(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.apps().update()] Error updating app: \",e),Promise.reject(e)})}},{key:\"del\",value:function(e){return request__default[\"delete\"](this.endpoint,e).then(function(e){return console.log(\"[MatterClient.apps().del()] Apps:\",e),new Application__default(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.apps().del()] Error deleting app: \",e),Promise.reject(e)})}},{key:\"getFiles\",value:function(){return this.get().then(function(e){e.getFiles().then(function(e){return e})[\"catch\"](function(e){return console.error(\"[MatterClient.app().getFiles()] Error getting application files: \",e),Promise.reject(e)})})[\"catch\"](function(e){return console.error(\"[MatterClient.app().getFiles()] Error getting application: \",e),Promise.reject(e)})}},{key:\"getStructure\",value:function(){return this.get().then(function(e){return e.getStructure().then(function(e){return console.log(\"Structure loaded: \",e),e})[\"catch\"](function(e){return console.error(\"[MatterClient.app().getStructure()] Error getting application structure: \",e),Promise.reject(e)})})[\"catch\"](function(e){return console.error(\"[MatterClient.app().getStructure()] Error getting application: \",e),Promise.reject(e)})}}]),e}(),matter_client__user=void 0,matter_client__token=void 0;libChecker([\"Firebase\",\"AWS\",\"_\"]);var MatterClient=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:\"signup\",value:function(e){return request__default.post(config__default.serverUrl+\"/signup\",e).then(function(e){return console.log(e),e})[\"catch\"](function(e){return console.error(\"[MatterClient.signup()] Error signing up:\",e),Promise.reject(e)})}},{key:\"login\",value:function(e){return e&&e.password&&e.username?request__default.put(config__default.serverUrl+\"/login\",e).then(function(e){return console.log(\"[MatterClient.login()]: Login response: \",e),matter_client__token=e.token,null===window.sessionStorage.getItem(config__default.tokenName)&&(window.sessionStorage.setItem(config__default.tokenName,e.token),console.log(\"[MatterClient.login()]: token set to storage:\",window.sessionStorage.getItem(config__default.tokenName))),e})[\"catch\"](function(e){return console.error(\"[MatterClient.login()] Error logging in: \",e),Promise.reject(e)}):(console.error(\"Username/Email and Password are required to login.\"),Promise.reject({message:\"Username/Email and Password are required to login.\"}))}},{key:\"logout\",value:function(){return request__default.put(config__default.serverUrl+\"/logout\",{}).then(function(e){return console.log(\"[MatterClient.logout()] Logout successful: \",e),\"undefined\"!=typeof window&&null!=typeof window.sessionStorage.getItem(config__default.tokenName)&&window.sessionStorage.clear(),e.body})[\"catch\"](function(e){return e.status&&401==e.status?void(\"undefined\"!=typeof window&&null!=window.sessionStorage.getItem(config__default.tokenName)&&window.sessionStorage.clear()):(console.error(\"[MatterClient.logout()] Error logging out: \",e),Promise.reject(e))})}},{key:\"getCurrentUser\",value:function(){return request__default.get(config__default.serverUrl+\"/user\",{}).then(function(e){return console.log(\"[MatterClient.getCurrentUser()] Current User:\",e),matter_client__user=e})[\"catch\"](function(e){return console.error(\"[MatterClient.getCurrentUser()] Error getting current user: \",e),Promise.reject(e)})}},{key:\"getAuthToken\",value:function(){return\"undefined\"==typeof window||\"undefined\"==typeof window.sessionStorage.getItem(config__default.tokenName)?null:window.sessionStorage.getItem(config__default.tokenName)}},{key:\"app\",value:function(e){return console.log(\"New AppAction:\",new AppAction(e)),new AppAction(e)}},{key:\"apps\",get:function(){return console.log(\"New AppsAction:\",new AppsAction),new AppsAction}}]),e}(),matter_client=MatterClient;return matter_client});\n//# sourceMappingURL=matter-client.min.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('firebase'), require('aws-sdk'), require('underscore'), require('superagent')) :\n\ttypeof define === 'function' && define.amd ? define(['firebase', 'aws-sdk', 'underscore', 'superagent'], factory) :\n\tglobal.MatterClient = factory(global.Firebase, global.AWS, global._, global.superagent)\n}(this, function (Firebase, AWS, _, superagent) { 'use strict';\n\n\tvar libChecker = (libsArray) => {\n\t\tlibsArray.forEach((libName) => {\n\t\t\tlet libRef = libName;\n\t\t\t//Protect usage of eval\n\t\t\tif (libName.length >= 20 || typeof libName != 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof window != 'undefined') {\n\t\t\t\tlibRef = `window.${libName}`;\n\t\t\t}\n\t\t\tif (typeof eval(libName) == 'undefined' || typeof eval(libRef) == 'undefined') {\n\t\t\t\tconsole.error(`${libName} is required to use Matter`);\n\t\t\t}\n\t\t});\n\t};\n\n\tlet config__config = {\n\t\tserverUrl: 'hypercube.elasticbeanstalk.com',\n\t\ttokenName: 'matter-client',\n\t\tfbUrl: 'https://pruvit.firebaseio.com/',\n\t\taws: {\n\t\t\tregion: 'us-east-1',\n\t\t\tcognito: {\n\t\t\t\tpoolId: 'us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982',\n\t\t\t\tparams: {\n\t\t\t\t\tRoleArn: 'arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t//Set server to local server if developing\n\tif (typeof window != 'undefined' && (window.location.hostname == '' || window.location.hostname == 'localhost')) {\n\t\tconfig__config.serverUrl = 'http://localhost:4000';\n\t}\n\tvar config__default = config__config;\n\n\tlet request__requester;\n\tif (typeof window == 'undefined') { //Node Mode\n\t\trequest__requester = superagent;\n\t} else if (typeof window.superagent == 'undefined') {\n\t\tconsole.error('Superagent is required to use Matter');\n\t} else { //Browser mode\n\t\trequest__requester = window.superagent;\n\t}\n\n\tlet request__request = {\n\t\tget(endpoint, queryData) {\n\t\t\tvar req = request__requester.get(endpoint);\n\t\t\tif (queryData) {\n\t\t\t\treq.query(queryData);\n\t\t\t}\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tpost(endpoint, data) {\n\t\t\tvar req = request__requester.post(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tput(endpoint, data) {\n\t\t\tvar req = request__requester.put(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tdel(endpoint, data) {\n\t\t\tvar req = request__requester.put(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t}\n\n\t};\n\n\tvar request__default = request__request;\n\n\tfunction handleResponse(req) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treq.end((err, res) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\t// console.log('Response:', res);\n\t\t\t\t\treturn resolve(res.body);\n\t\t\t\t} else {\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tfunction addAuthHeader(req) {\n\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config__default.tokenName)) {\n\t\t\treq = req.set('Authorization', 'Bearer ' + sessionStorage.getItem(config__default.tokenName));\n\t\t\t// console.log('Set auth header');\n\t\t}\n\t\treturn req;\n\t}\n\n\tclass AppsAction {\n\t\tconstructor() {\n\t\t\tthis.endpoint = config__default.serverUrl + '/apps';\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\treturn request__default.post(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tclass Application__Application {\n\t\tconstructor(appData) {\n\t\t\tthis.name = appData.name;\n\t\t\tthis.owner = appData.owner || null;\n\t\t\tthis.collaborators = appData.collaborators || [];\n\t\t\tthis.createdAt = appData.createdAt;\n\t\t\tthis.updatedAt = appData.updatedAt;\n\t\t\tthis.frontend = appData.frontend || {};\n\t\t\tthis.backend = appData.backend || {};\n\t\t\tif (Firebase) {\n\t\t\t\tthis.fbRef = new Firebase(config__default.fbUrl + appData.name);\n\t\t\t}\n\t\t}\n\t\t//Get files list and convert to structure\n\t\tgetStructure() {\n\t\t\treturn this.getFiles().then((filesArray) => {\n\t\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\t\tconsole.log('Child struct from array:', childStruct);\n\t\t\t\treturn childStruct;\n\t\t\t}, (err) => {\n\t\t\t\tconsole.error('[Application.getStructure] Error getting files: ', err);\n\t\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t\t});\n\t\t}\n\t\t//Get files list from S3\n\t\tgetFiles() {\n\t\t\tif (!this.frontend || !this.frontend.bucketName) {\n\t\t\t\tconsole.error('[Applicaiton.getFiles] Attempting to get objects for bucket without name.');\n\t\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t// console.info('AWS creds are being updated to make request');\n\t\t\t\t\tsetAWSConfig();\n\t\t\t\t}\n\t\t\t\tvar s3 = new AWS.S3();\n\t\t\t\tvar listParams = {Bucket: this.frontend.bucketName};\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ts3.listObjects(listParams, function(err, data) {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\tconsole.log('[Application.getObjects()] listObjects returned:', data);\n\t\t\t\t\t\t\treturn resolve(data.Contents);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.error('[Application.getObjects()] Error listing objects:', err);\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tpublishFile(fileData) {\n\t\t\tif (!this.frontend) {\n\t\t\t\tconsole.error('Frontend data not available. Make sure to call .get().');\n\t\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t\t}\n\t\t\tvar saveParams = {Bucket: this.frontent.bucketName, Key: fileData.key,  Body: fileData.content, ACL: 'public-read'};\n\t\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\t\tif (fileData.contentType) {\n\t\t\t\tsaveParams.ContentType = fileData.contentType;\n\t\t\t}\n\t\t\t// console.log('[$aws.$saveFiles] saveParams:', saveParams);\n\t\t\treturn s3.putObject(saveParams, function(err, data) {\n\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log('[Application.publishFile()] file saved successfully. Returning:', data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\telse {\n\t\t\t\t\tconsole.error('[Application.publishFile()] Error saving file:', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\taddStorage() {\n\t\t\t//TODO:Add storage bucket\n\t\t\tvar endpoint = config__default.serverUrl + '/apps/' + this.name + '/storage';\n\t\t\treturn request__default.post(endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\t\treturn new Application__Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\tapplyTemplate() {\n\t\t\tvar endpoint = config__default.serverUrl + '/apps/' + this.name + '/template';\n\t\t\tconsole.log('Applying templates to existing');\n\t\t\t// return request.post(endpoint, appData).then(function(response) {\n\t\t\t// \tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\t// \tif (!apps.isList) {\n\t\t\t// \t\treturn new Application(response);\n\t\t\t// \t}\n\t\t\t// \treturn response;\n\t\t\t// })['catch'](function(errRes) {\n\t\t\t// \tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\t// \treturn Promise.reject(errRes);\n\t\t\t// });\n\t\t}\n\t}\n\n\tvar Application__default = Application__Application;\n\n\t//------------------ Utility Functions ------------------//\n\n\t// AWS Config\n\tfunction setAWSConfig() {\n\t\tAWS.config.update({\n\t\t  credentials: new AWS.CognitoIdentityCredentials({\n\t\t  IdentityPoolId: config__default.aws.cognito.poolId\n\t\t  }),\n\t\t  region: config__default.aws.region\n\t\t});\n\t}\n\n\t//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n\t//Examples for two files (index.html and /testFolder/file.js):\n\t//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n\t//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\n\tfunction childrenStructureFromArray(fileArray) {\n\t\t// console.log('childStructureFromArray called:', fileArray);\n\t\t//Create a object for each file that stores the file in the correct 'children' level\n\t\tvar mappedStructure = fileArray.map(function(file) {\n\t\t\treturn buildStructureObject(file);\n\t\t});\n\t\treturn combineLikeObjs(mappedStructure);\n\t}\n\t//Convert file with key into a folder/file children object\n\tfunction buildStructureObject(file) {\n\t\tvar pathArray;\n\t\t// console.log('buildStructureObject with:', file);\n\t\tif (_.has(file, 'path')) {\n\t\t\t//Coming from files already having path (structure)\n\t\t\tpathArray = file.path.split('/');\n\t\t} else {\n\t\t\t//Coming from aws\n\t\t\tpathArray = file.Key.split('/');\n\t\t\t// console.log('file before pick:', file);\n\t\t\tfile = _.pick(file, 'Key');\n\t\t\tfile.path = file.Key;\n\t\t\tfile.name = file.Key;\n\t\t}\n\t\tvar currentObj = file;\n\t\tif (pathArray.length == 1) {\n\t\t\tcurrentObj.name = pathArray[0];\n\t\t\tif (!_.has(currentObj,'type')) {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t}\n\t\t\tcurrentObj.path = pathArray[0];\n\t\t\treturn currentObj;\n\t\t} else {\n\t\t\tvar finalObj = {};\n\t\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = _.first(list, ind + 1).join('/');\n\t\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t\t//TODO: Find out why this works\n\t\t\t\t\tif (ind == 0) {\n\t\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t\t} else {\n\t\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\t\tif (file.$id) {\n\t\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn finalObj;\n\t\t}\n\t}\n\t//Recursivley combine children of object's that have the same names\n\tfunction combineLikeObjs(mappedArray) {\n\t\tvar takenNames = [];\n\t\tvar finishedArray = [];\n\t\t_.each(mappedArray, (obj, ind, list) => {\n\t\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\t\ttakenNames.push(obj.name);\n\t\t\t\tfinishedArray.push(obj);\n\t\t\t} else {\n\t\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t\t//Combine children of like objects\n\t\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t\t// console.log('extended obj:',likeObj);\n\t\t\t}\n\t\t});\n\t\treturn finishedArray;\n\t}\n\n\tclass AppAction {\n\t\tconstructor(appName) {\n\t\t\tif (appName) {\n\t\t\t\tthis.name = appName;\n\t\t\t\tthis.endpoint = `${config__default.serverUrl}/apps/${this.name}`;\n\t\t\t} else {\n\t\t\t\tconsole.error('Application name is required to start an AppAction');\n\t\t\t\tthrow new Error('Application name is required to start an AppAction');\n\t\t\t}\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.app().get()] App(s) data loaded:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.app().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update an application\n\t\tupdate(appData) {\n\t\t\treturn request__default.put(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().update()] App:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().update()] Error updating app: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete an application\n\t\tdel(appData) {\n\t\t\treturn request__default.delete(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().del()] Apps:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().del()] Error deleting app: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\tgetFiles() {\n\t\t\treturn this.get().then((app) => {\n\t\t\t\tapp.getFiles().then((filesArray)=> {\n\t\t\t\t\treturn filesArray;\n\t\t\t\t})['catch']((err) => {\n\t\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application files: ', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\n\t\tgetStructure() {\n\t\t\treturn this.get().then((app) => {\n\t\t\t\treturn app.getStructure().then((structure)=> {\n\t\t\t\t\tconsole.log('Structure loaded: ', structure);\n\t\t\t\t\treturn structure;\n\t\t\t\t})['catch']((err) => {\n\t\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application structure: ', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet matter_client__user;\n\tlet matter_client__token;\n\n\tlibChecker(['Firebase', 'AWS', '_']);\n\n\t//Matter Client Class\n\tclass MatterClient {\n\t\t//Signup a new user\n\t\tsignup(signupData) {\n\t\t\treturn request__default.post(config__default.serverUrl + '/signup', signupData)\n\t\t\t.then((response) => {\n\t\t\t  console.log(response);\n\t\t\t  return response;\n\t\t\t})\n\t\t\t['catch']((errRes) => {\n\t\t\t  console.error('[MatterClient.signup()] Error signing up:', errRes);\n\t\t\t  return Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\t//Login a user\n\t\tlogin(loginData) {\n\t\t\tif (!loginData || !loginData.password || !loginData.username) {\n\t\t\t\tconsole.error('Username/Email and Password are required to login.');\n\t\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login.'});\n\t\t\t}\n\t\t\treturn request__default.put(config__default.serverUrl + '/login', loginData)\n\t\t\t.then((response) => {\n\t\t\t\t//TODO: Save token locally\n\t\t\t\tconsole.log('[MatterClient.login()]: Login response: ', response);\n\t\t\t\tmatter_client__token = response.token;\n\t\t\t\tif (window.sessionStorage.getItem(config__default.tokenName) === null) {\n\t\t\t\t\twindow.sessionStorage.setItem(config__default.tokenName, response.token);\n\t\t\t\t\tconsole.log('[MatterClient.login()]: token set to storage:', window.sessionStorage.getItem(config__default.tokenName));\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.login()] Error logging in: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tlogout() {\n\t\t\treturn request__default.put(config__default.serverUrl + '/logout', {\n\t\t\t}).then(function(response) {\n\t\t\t  console.log('[MatterClient.logout()] Logout successful: ', response);\n\t\t\t  if (typeof window != 'undefined' && typeof window.sessionStorage.getItem(config__default.tokenName) != null) {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t}\n\t\t\t\treturn response.body;\n\t\t\t})['catch'](function(errRes) {\n\t\t\t\tif (errRes.status && errRes.status == 401) {\n\t\t\t\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config__default.tokenName) != null) {\n\t\t\t\t\t\t//Clear session storage\n\t\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.error('[MatterClient.logout()] Error logging out: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tgetCurrentUser() {\n\t\t\t//TODO: Check Current user variable\n\t\t\treturn request__default.get(config__default.serverUrl + '/user', {\n\t\t\t}).then(function(response) {\n\t\t\t\t//TODO: Save user information locally\n\t\t\t\tconsole.log('[MatterClient.getCurrentUser()] Current User:', response);\n\t\t\t\tmatter_client__user = response;\n\t\t\t\treturn matter_client__user;\n\t\t\t})['catch'](function(errRes) {\n\t\t\t\tconsole.error('[MatterClient.getCurrentUser()] Error getting current user: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tgetAuthToken() {\n\t\t\tif (typeof window == 'undefined' || typeof window.sessionStorage.getItem(config__default.tokenName) == 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn window.sessionStorage.getItem(config__default.tokenName);\n\t\t}\n\t\t//TODO: Use getter/setter to make this not a function\n\t\t//Start a new AppsAction\n\t\tget apps() {\n\t\t\tconsole.log('New AppsAction:', new AppsAction());\n\t\t\treturn new AppsAction();\n\t\t}\n\t\t//Start a new app action\n\t\tapp(appName) {\n\t\t\tconsole.log('New AppAction:', new AppAction(appName));\n\t\t\treturn new AppAction(appName);\n\t\t}\n\t};\n\n\tvar matter_client = MatterClient;\n\n\treturn matter_client;\n\n}));\n","import config from '../config';\nimport superagent from 'superagent';\n\nlet requester;\nif (typeof window == 'undefined') { //Node Mode\n\trequester = superagent;\n} else if (typeof window.superagent == 'undefined') {\n\tconsole.error('Superagent is required to use Matter');\n} else { //Browser mode\n\trequester = window.superagent;\n}\n\nlet request = {\n\tget(endpoint, queryData) {\n\t\tvar req = requester.get(endpoint);\n\t\tif (queryData) {\n\t\t\treq.query(queryData);\n\t\t}\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tpost(endpoint, data) {\n\t\tvar req = requester.post(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tput(endpoint, data) {\n\t\tvar req = requester.put(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tdel(endpoint, data) {\n\t\tvar req = requester.put(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t}\n\n};\n\nexport default request;\n\nfunction handleResponse(req) {\n\treturn new Promise((resolve, reject) => {\n\t\treq.end((err, res) => {\n\t\t\tif (!err) {\n\t\t\t\t// console.log('Response:', res);\n\t\t\t\treturn resolve(res.body);\n\t\t\t} else {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t});\n\t});\n}\nfunction addAuthHeader(req) {\n\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config.tokenName)) {\n\t\treq = req.set('Authorization', 'Bearer ' + sessionStorage.getItem(config.tokenName));\n\t\t// console.log('Set auth header');\n\t}\n\treturn req;\n}\n","import config from '../config';\nimport request from '../utils/request';\nimport Firebase from 'firebase';\nimport _ from 'underscore';\n\n/**\n * Application class.\n *\n */\nclass Application {\n\tconstructor(appData) {\n\t\tthis.name = appData.name;\n\t\tthis.owner = appData.owner || null;\n\t\tthis.collaborators = appData.collaborators || [];\n\t\tthis.createdAt = appData.createdAt;\n\t\tthis.updatedAt = appData.updatedAt;\n\t\tthis.frontend = appData.frontend || {};\n\t\tthis.backend = appData.backend || {};\n\t\tif (Firebase) {\n\t\t\tthis.fbRef = new Firebase(config.fbUrl + appData.name);\n\t\t}\n\t}\n\t//Get files list and convert to structure\n\tgetStructure() {\n\t\treturn this.getFiles().then((filesArray) => {\n\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\tconsole.log('Child struct from array:', childStruct);\n\t\t\treturn childStruct;\n\t\t}, (err) => {\n\t\t\tconsole.error('[Application.getStructure] Error getting files: ', err);\n\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t});\n\t}\n\t//Get files list from S3\n\tgetFiles() {\n\t\tif (!this.frontend || !this.frontend.bucketName) {\n\t\t\tconsole.error('[Applicaiton.getFiles] Attempting to get objects for bucket without name.');\n\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t} else {\n\t\t\t//If AWS Credential do not exist, set them\n\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t// console.info('AWS creds are being updated to make request');\n\t\t\t\tsetAWSConfig();\n\t\t\t}\n\t\t\tvar s3 = new AWS.S3();\n\t\t\tvar listParams = {Bucket: this.frontend.bucketName};\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\ts3.listObjects(listParams, function(err, data) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tconsole.log('[Application.getObjects()] listObjects returned:', data);\n\t\t\t\t\t\treturn resolve(data.Contents);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('[Application.getObjects()] Error listing objects:', err);\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\tpublishFile(fileData) {\n\t\tif (!this.frontend) {\n\t\t\tconsole.error('Frontend data not available. Make sure to call .get().');\n\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t}\n\t\tvar saveParams = {Bucket: this.frontent.bucketName, Key: fileData.key,  Body: fileData.content, ACL: 'public-read'};\n\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\tif (fileData.contentType) {\n\t\t\tsaveParams.ContentType = fileData.contentType;\n\t\t}\n\t\t// console.log('[$aws.$saveFiles] saveParams:', saveParams);\n\t\treturn s3.putObject(saveParams, function(err, data) {\n\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\tif (!err) {\n\t\t\t\tconsole.log('[Application.publishFile()] file saved successfully. Returning:', data);\n\t\t\t\treturn data;\n\t\t\t}\telse {\n\t\t\t\tconsole.error('[Application.publishFile()] Error saving file:', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t}\n\t\t});\n\t}\n\taddStorage() {\n\t\t//TODO:Add storage bucket\n\t\tvar endpoint = config.serverUrl + '/apps/' + this.name + '/storage';\n\t\treturn request.post(endpoint, appData).then((response) => {\n\t\t\tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\tapplyTemplate() {\n\t\tvar endpoint = config.serverUrl + '/apps/' + this.name + '/template';\n\t\tconsole.log('Applying templates to existing');\n\t\t// return request.post(endpoint, appData).then(function(response) {\n\t\t// \tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t// \tif (!apps.isList) {\n\t\t// \t\treturn new Application(response);\n\t\t// \t}\n\t\t// \treturn response;\n\t\t// })['catch'](function(errRes) {\n\t\t// \tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t// \treturn Promise.reject(errRes);\n\t\t// });\n\t}\n}\n\nexport default Application;\n\n//------------------ Utility Functions ------------------//\n\n// AWS Config\nfunction setAWSConfig() {\n\tAWS.config.update({\n\t  credentials: new AWS.CognitoIdentityCredentials({\n\t  IdentityPoolId: config.aws.cognito.poolId\n\t  }),\n\t  region: config.aws.region\n\t});\n}\n\n//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n//Examples for two files (index.html and /testFolder/file.js):\n//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\nfunction childrenStructureFromArray(fileArray) {\n\t// console.log('childStructureFromArray called:', fileArray);\n\t//Create a object for each file that stores the file in the correct 'children' level\n\tvar mappedStructure = fileArray.map(function(file) {\n\t\treturn buildStructureObject(file);\n\t});\n\treturn combineLikeObjs(mappedStructure);\n}\n//Convert file with key into a folder/file children object\nfunction buildStructureObject(file) {\n\tvar pathArray;\n\t// console.log('buildStructureObject with:', file);\n\tif (_.has(file, 'path')) {\n\t\t//Coming from files already having path (structure)\n\t\tpathArray = file.path.split('/');\n\t} else {\n\t\t//Coming from aws\n\t\tpathArray = file.Key.split('/');\n\t\t// console.log('file before pick:', file);\n\t\tfile = _.pick(file, 'Key');\n\t\tfile.path = file.Key;\n\t\tfile.name = file.Key;\n\t}\n\tvar currentObj = file;\n\tif (pathArray.length == 1) {\n\t\tcurrentObj.name = pathArray[0];\n\t\tif (!_.has(currentObj,'type')) {\n\t\t\tcurrentObj.type = 'file';\n\t\t}\n\t\tcurrentObj.path = pathArray[0];\n\t\treturn currentObj;\n\t} else {\n\t\tvar finalObj = {};\n\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\tcurrentObj.name = loc;\n\t\t\t\tcurrentObj.path = _.first(list, ind + 1).join('/');\n\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t//TODO: Find out why this works\n\t\t\t\tif (ind == 0) {\n\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t}\n\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t} else {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\tcurrentObj.name = loc;\n\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\tif (file.$id) {\n\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn finalObj;\n\t}\n}\n//Recursivley combine children of object's that have the same names\nfunction combineLikeObjs(mappedArray) {\n\tvar takenNames = [];\n\tvar finishedArray = [];\n\t_.each(mappedArray, (obj, ind, list) => {\n\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\ttakenNames.push(obj.name);\n\t\t\tfinishedArray.push(obj);\n\t\t} else {\n\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t//Combine children of like objects\n\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t// console.log('extended obj:',likeObj);\n\t\t}\n\t});\n\treturn finishedArray;\n}\n","import Firebase from 'firebase';\n\nexport default (libsArray) => {\n\tlibsArray.forEach((libName) => {\n\t\tlet libRef = libName;\n\t\t//Protect usage of eval\n\t\tif (libName.length >= 20 || typeof libName != 'string') {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof window != 'undefined') {\n\t\t\tlibRef = `window.${libName}`;\n\t\t}\n\t\tif (typeof eval(libName) == 'undefined' || typeof eval(libRef) == 'undefined') {\n\t\t\tconsole.error(`${libName} is required to use Matter`);\n\t\t}\n\t});\n};\n","let config = {\n\tserverUrl: 'hypercube.elasticbeanstalk.com',\n\ttokenName: 'matter-client',\n\tfbUrl: 'https://pruvit.firebaseio.com/',\n\taws: {\n\t\tregion: 'us-east-1',\n\t\tcognito: {\n\t\t\tpoolId: 'us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982',\n\t\t\tparams: {\n\t\t\t\tRoleArn: 'arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1'\n\t\t\t}\n\t\t}\n\t}\n};\n//Set server to local server if developing\nif (typeof window != 'undefined' && (window.location.hostname == '' || window.location.hostname == 'localhost')) {\n\tconfig.serverUrl = 'http://localhost:4000';\n}\nexport default config;\n","import config from '../config';\nimport request from '../utils/request';\n\n//Actions for applications list\nclass AppsAction {\n\tconstructor() {\n\t\tthis.endpoint = config.serverUrl + '/apps';\n\t}\n\t//Get applications or single application\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Add an application\n\tadd(appData) {\n\t\treturn request.post(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n}\nexport default AppsAction;\n","import config from '../config';\nimport request from '../utils/request';\nimport Application from './Application';\nimport AWS from 'aws-sdk';\n\n//Actions for specific application\nclass AppAction {\n\tconstructor(appName) {\n\t\tif (appName) {\n\t\t\tthis.name = appName;\n\t\t\tthis.endpoint = `${config.serverUrl}/apps/${this.name}`;\n\t\t} else {\n\t\t\tconsole.error('Application name is required to start an AppAction');\n\t\t\tthrow new Error('Application name is required to start an AppAction');\n\t\t}\n\t}\n\t//Get applications or single application\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.app().get()] App(s) data loaded:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.app().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Update an application\n\tupdate(appData) {\n\t\treturn request.put(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().update()] App:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().update()] Error updating app: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Delete an application\n\tdel(appData) {\n\t\treturn request.delete(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().del()] Apps:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().del()] Error deleting app: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\tgetFiles() {\n\t\treturn this.get().then((app) => {\n\t\t\tapp.getFiles().then((filesArray)=> {\n\t\t\t\treturn filesArray;\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application files: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t})['catch']((err) => {\n\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application: ', err);\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n\n\tgetStructure() {\n\t\treturn this.get().then((app) => {\n\t\t\treturn app.getStructure().then((structure)=> {\n\t\t\t\tconsole.log('Structure loaded: ', structure);\n\t\t\t\treturn structure;\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application structure: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t})['catch']((err) => {\n\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application: ', err);\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n}\n\nexport default AppAction;\n","import libChecker from './utils/libChecker';\nimport Firebase from 'firebase';\nimport AWS from 'aws-sdk';\nimport _ from 'underscore';\n\nimport config from './config';\nimport request from './utils/request';\n\nimport AppsAction from './classes/AppsAction';\nimport AppAction from './classes/AppAction';\nimport Application from './classes/Application';\n\nlet user;\nlet token;\n\nlibChecker(['Firebase', 'AWS', '_']);\n\n//Matter Client Class\nclass MatterClient {\n\t//Signup a new user\n\tsignup(signupData) {\n\t\treturn request.post(config.serverUrl + '/signup', signupData)\n\t\t.then((response) => {\n\t\t  console.log(response);\n\t\t  return response;\n\t\t})\n\t\t['catch']((errRes) => {\n\t\t  console.error('[MatterClient.signup()] Error signing up:', errRes);\n\t\t  return Promise.reject(errRes);\n\t\t});\n\t}\n\n\t//Login a user\n\tlogin(loginData) {\n\t\tif (!loginData || !loginData.password || !loginData.username) {\n\t\t\tconsole.error('Username/Email and Password are required to login.');\n\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login.'});\n\t\t}\n\t\treturn request.put(config.serverUrl + '/login', loginData)\n\t\t.then((response) => {\n\t\t\t//TODO: Save token locally\n\t\t\tconsole.log('[MatterClient.login()]: Login response: ', response);\n\t\t\ttoken = response.token;\n\t\t\tif (window.sessionStorage.getItem(config.tokenName) === null) {\n\t\t\t\twindow.sessionStorage.setItem(config.tokenName, response.token);\n\t\t\t\tconsole.log('[MatterClient.login()]: token set to storage:', window.sessionStorage.getItem(config.tokenName));\n\t\t\t}\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.login()] Error logging in: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tlogout() {\n\t\treturn request.put(config.serverUrl + '/logout', {\n\t\t}).then(function(response) {\n\t\t  console.log('[MatterClient.logout()] Logout successful: ', response);\n\t\t  if (typeof window != 'undefined' && typeof window.sessionStorage.getItem(config.tokenName) != null) {\n\t\t\t\t//Clear session storage\n\t\t\t\twindow.sessionStorage.clear();\n\t\t\t}\n\t\t\treturn response.body;\n\t\t})['catch'](function(errRes) {\n\t\t\tif (errRes.status && errRes.status == 401) {\n\t\t\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config.tokenName) != null) {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.error('[MatterClient.logout()] Error logging out: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tgetCurrentUser() {\n\t\t//TODO: Check Current user variable\n\t\treturn request.get(config.serverUrl + '/user', {\n\t\t}).then(function(response) {\n\t\t\t//TODO: Save user information locally\n\t\t\tconsole.log('[MatterClient.getCurrentUser()] Current User:', response);\n\t\t\tuser = response;\n\t\t\treturn user;\n\t\t})['catch'](function(errRes) {\n\t\t\tconsole.error('[MatterClient.getCurrentUser()] Error getting current user: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tgetAuthToken() {\n\t\tif (typeof window == 'undefined' || typeof window.sessionStorage.getItem(config.tokenName) == 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\treturn window.sessionStorage.getItem(config.tokenName);\n\t}\n\t//TODO: Use getter/setter to make this not a function\n\t//Start a new AppsAction\n\tget apps() {\n\t\tconsole.log('New AppsAction:', new AppsAction());\n\t\treturn new AppsAction();\n\t}\n\t//Start a new app action\n\tapp(appName) {\n\t\tconsole.log('New AppAction:', new AppAction(appName));\n\t\treturn new AppAction(appName);\n\t}\n};\n\nexport default MatterClient;\n"],"sourceRoot":"/source/"}