{"version":3,"sources":["matter-client.min.js","/source/matter-client.js","/source/src/utils/request.js","/source/src/classes/Application.js","/source/src/utils/libChecker.js","/source/src/config.js","/source/src/utils/browserStorage.js","/source/src/classes/AppsAction.js","/source/src/classes/AppAction.js","/source/src/classes/User.js","/source/src/classes/UsersAction.js","/source/src/classes/UserAction.js","/source/src/matter-client.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","require","define","amd","MatterClient","_","AWS","superagent","Firebase","this","handleResponse","req","Promise","resolve","reject","end","err","res","status","console","warn","body","addAuthHeader","browserStorage","getItem","config__default","tokenName","set","log","setAWSConfig","config","update","credentials","CognitoIdentityCredentials","IdentityPoolId","aws","cognito","poolId","region","childrenStructureFromArray","fileArray","mappedStructure","map","file","buildStructureObject","combineLikeObjs","pathArray","has","path","split","Key","pick","name","currentObj","type","finalObj","each","loc","ind","list","first","join","children","$id","mappedArray","takenNames","finishedArray","obj","indexOf","push","likeObj","findWhere","union","libChecker","libsArray","forEach","libName","libRef","window","eval","error","config__config","serverUrl","fbUrl","params","RoleArn","location","hostname","browserStorage__storage","setItem","itemName","itemValue","exists","sessionStorage","removeItem","clear","get","testKey","request__requester","undefined","request__request","endpoint","queryData","query","post","data","send","put","del","request__default","AppsAction","value","then","response","errRes","appData","Application","Application__Application","owner","collaborators","createdAt","updatedAt","frontend","backend","fbRef","getFiles","filesArray","childStruct","message","bucketName","s3","S3","listParams","Bucket","listObjects","Contents","fileData","saveParams","frontent","Body","content","ACL","contentType","ContentType","putObject","Application__default","AppAction","appName","Error","app","getStructure","structure","User","userData","username","UsersAction","userEndpoint","isString","msg","searchEndpoint","UserAction","userName","matter_client__user","matter_client__token","signupData","loginData","password","token","matter_client"],"mappings":"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","file":"matter-client.min.js","sourcesContent":["function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"underscore\"),require(\"aws-sdk\"),require(\"superagent\"),require(\"firebase\")):\"function\"==typeof define&&define.amd?define([\"underscore\",\"aws-sdk\",\"superagent\",\"firebase\"],t):e.MatterClient=t(e._,e.AWS,e.superagent,e.Firebase)}(this,function(_,AWS,superagent,Firebase){\"use strict\";function handleResponse(e){return new Promise(function(t,n){e.end(function(e,r){return e?(401==e.status&&console.warn(\"Unauthorized. You must be signed into make this request.\"),n(e)):t(r.body)})})}function addAuthHeader(e){return browserStorage.getItem(config__default.tokenName)&&(e=e.set(\"Authorization\",\"Bearer \"+browserStorage.getItem(config__default.tokenName)),console.log(\"Set auth header\")),e}function setAWSConfig(){AWS.config.update({credentials:new AWS.CognitoIdentityCredentials({IdentityPoolId:config__default.aws.cognito.poolId}),region:config__default.aws.region})}function childrenStructureFromArray(e){var t=e.map(function(e){return buildStructureObject(e)});return combineLikeObjs(t)}function buildStructureObject(e){var t;_.has(e,\"path\")?t=e.path.split(\"/\"):(t=e.Key.split(\"/\"),e=_.pick(e,\"Key\"),e.path=e.Key,e.name=e.Key);var n=e;if(1==t.length)return n.name=t[0],_.has(n,\"type\")||(n.type=\"file\"),n.path=t[0],n;var r={};return _.each(t,function(o,i,s){i!=s.length-1?(n.name=o,n.path=_.first(s,i+1).join(\"/\"),n.type=\"folder\",n.children=[{}],0==i&&(r=n),n=n.children[0]):(n.type=\"file\",n.name=o,n.path=t.join(\"/\"),e.$id&&(n.$id=e.$id))}),r}function combineLikeObjs(e){var t=[],n=[];return _.each(e,function(r,o,i){if(-1==t.indexOf(r.name))t.push(r.name),n.push(r);else{var s=_.findWhere(e,{name:r.name});s.children=_.union(r.children,s.children),s.children=combineLikeObjs(s.children)}}),n}var libChecker=function libChecker(libsArray){libsArray.forEach(function(libName){var libRef=libName;if(!(libName.length>=20||\"string\"!=typeof libName))return\"undefined\"==typeof window?void(libRef=\"window.\"+libName):void((\"undefined\"==typeof eval(libName)||\"undefined\"==typeof eval(libRef))&&console.error(libName+\" is required to use Matter\"))})},config__config={serverUrl:\"hypercube.elasticbeanstalk.com\",tokenName:\"matter-client\",fbUrl:\"https://pruvit.firebaseio.com/\",aws:{region:\"us-east-1\",cognito:{poolId:\"us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982\",params:{RoleArn:\"arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1\"}}}};\"undefined\"==typeof window||\"\"!=window.location.hostname&&\"localhost\"!=window.location.hostname||(config__config.serverUrl=\"http://localhost:4000\");var config__default=config__config,browserStorage__storage=Object.defineProperties({setItem:function(e,t){this.exists&&window.sessionStorage.setItem(e,t)},getItem:function(e){return this.exists?(console.log(\"item loaded from session\"),window.sessionStorage.getItem(e)):null},removeItem:function(e){if(this.exists)try{window.sessionStorage.removeItem(e)}catch(t){console.warn(\"Item could not be removed from session storage.\",t)}},clear:function(){if(this.exists)try{window.sessionStorage.clear()}catch(e){console.warn(\"Session storage could not be cleared.\",e)}}},{exists:{get:function(){var e=\"test\";if(console.log(\"storage exists called\"),\"undefined\"==typeof window)return!1;try{return window.sessionStorage.setItem(e,\"1\"),window.sessionStorage.removeItem(e),!0}catch(t){return console.warn(\"Session storage does not exist.\",t),!1}},configurable:!0,enumerable:!0}}),browserStorage=browserStorage__storage,request__requester=void 0;\"undefined\"==typeof window?request__requester=superagent:\"undefined\"==typeof window.superagent?console.error(\"Superagent is required to use Matter\"):request__requester=window.superagent;var request__request={get:function(e,t){var n=request__requester.get(e);return t&&n.query(t),n=addAuthHeader(n),handleResponse(n)},post:function(e,t){var n=request__requester.post(e).send(t);return n=addAuthHeader(n),handleResponse(n)},put:function(e,t){var n=request__requester.put(e).send(t);return n=addAuthHeader(n),handleResponse(n)},del:function(e,t){var n=request__requester.put(e).send(t);return n=addAuthHeader(n),handleResponse(n)}},request__default=request__request,AppsAction=function(){function e(){_classCallCheck(this,e),this.endpoint=config__default.serverUrl+\"/apps\"}return _createClass(e,[{key:\"get\",value:function(){return request__default.get(this.endpoint).then(function(e){return console.log(\"[MatterClient.apps().get()] App(s) data loaded:\",e),e})[\"catch\"](function(e){return console.error(\"[MatterClient.apps().get()] Error getting apps list: \",e),Promise.reject(e)})}},{key:\"add\",value:function(e){return request__default.post(this.endpoint,e).then(function(e){return console.log(\"[MatterClient.apps().add()] Application added successfully: \",e),new Application(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.getApps()] Error adding application: \",e),Promise.reject(e)})}}]),e}(),Application__Application=function(){function e(t){_classCallCheck(this,e),this.name=t.name,this.owner=t.owner||null,this.collaborators=t.collaborators||[],this.createdAt=t.createdAt,this.updatedAt=t.updatedAt,this.frontend=t.frontend||{},this.backend=t.backend||{},Firebase&&(this.fbRef=new Firebase(config__default.fbUrl+t.name))}return _createClass(e,[{key:\"getStructure\",value:function(){return this.getFiles().then(function(e){var t=childrenStructureFromArray(e);return console.log(\"Child struct from array:\",t),t},function(e){return console.error(\"[Application.getStructure] Error getting files: \",e),Promise.reject({message:\"Error getting files.\",error:e})})}},{key:\"getFiles\",value:function(){if(this.frontend&&this.frontend.bucketName){\"undefined\"!=typeof AWS.config.credentials&&AWS.config.credentials||setAWSConfig();var e=new AWS.S3,t={Bucket:this.frontend.bucketName};return new Promise(function(n,r){e.listObjects(t,function(e,t){return e?(console.error(\"[Application.getObjects()] Error listing objects:\",e),r(e)):(console.log(\"[Application.getObjects()] listObjects returned:\",t),n(t.Contents))})})}return console.error(\"[Applicaiton.getFiles] Attempting to get objects for bucket without name.\"),Promise.reject({message:\"Bucket name required to get objects\"})}},{key:\"publishFile\",value:function(e){if(!this.frontend)return console.error(\"Frontend data not available. Make sure to call .get().\"),Promise.reject({message:\"Front end data is required to publish file.\"});var t={Bucket:this.frontent.bucketName,Key:e.key,Body:e.content,ACL:\"public-read\"};return e.contentType&&(t.ContentType=e.contentType),s3.putObject(t,function(e,t){return e?(console.error(\"[Application.publishFile()] Error saving file:\",e),Promise.reject(e)):(console.log(\"[Application.publishFile()] file saved successfully. Returning:\",t),t)})}},{key:\"addStorage\",value:function(){var t=config__default.serverUrl+\"/apps/\"+this.name+\"/storage\";return request__default.post(t,appData).then(function(t){return console.log(\"[Application.addStorage()] Apps:\",t),new e(t)})[\"catch\"](function(e){return console.error(\"[Application.addStorage()] Error getting apps list: \",e),Promise.reject(e)})}},{key:\"applyTemplate\",value:function(){config__default.serverUrl+\"/apps/\"+this.name+\"/template\";console.log(\"Applying templates to existing\")}}]),e}(),Application__default=Application__Application,AppAction=function(){function e(t){if(_classCallCheck(this,e),!t)throw console.error(\"Application name is required to start an AppAction\"),new Error(\"Application name is required to start an AppAction\");this.name=t,this.endpoint=config__default.serverUrl+\"/apps/\"+this.name}return _createClass(e,[{key:\"get\",value:function(){return request__default.get(this.endpoint).then(function(e){return console.log(\"[MatterClient.app().get()] App(s) data loaded:\",e),new Application__default(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.app().get()] Error getting apps list: \",e),Promise.reject(e)})}},{key:\"update\",value:function(e){return request__default.put(this.endpoint,e).then(function(e){return console.log(\"[MatterClient.apps().update()] App:\",e),new Application__default(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.apps().update()] Error updating app: \",e),Promise.reject(e)})}},{key:\"del\",value:function(e){return request__default[\"delete\"](this.endpoint,e).then(function(e){return console.log(\"[MatterClient.apps().del()] Apps:\",e),new Application__default(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.apps().del()] Error deleting app: \",e),Promise.reject(e)})}},{key:\"getFiles\",value:function(){return this.get().then(function(e){e.getFiles().then(function(e){return e})[\"catch\"](function(e){return console.error(\"[MatterClient.app().getFiles()] Error getting application files: \",e),Promise.reject(e)})})[\"catch\"](function(e){return console.error(\"[MatterClient.app().getFiles()] Error getting application: \",e),Promise.reject(e)})}},{key:\"getStructure\",value:function(){return this.get().then(function(e){return e.getStructure().then(function(e){return console.log(\"Structure loaded: \",e),e})[\"catch\"](function(e){return console.error(\"[MatterClient.app().getStructure()] Error getting application structure: \",e),Promise.reject(e)})})[\"catch\"](function(e){return console.error(\"[MatterClient.app().getStructure()] Error getting application: \",e),Promise.reject(e)})}}]),e}(),User=function(){function e(t){_classCallCheck(this,e),this.name=t.name,this.username=t.username,this.createdAt=t.createdAt,this.updatedAt=t.updatedAt}return _createClass(e,[{key:\"app\",value:function(e){return new AppAction(e)}},{key:\"apps\",get:function(){return new AppsAction}}]),e}(),UsersAction=function(){function e(){_classCallCheck(this,e),this.endpoint=config__default.serverUrl+\"/users\"}return _createClass(e,[{key:\"get\",value:function(e){var t=this.endpoint;if(e&&!_.isString(e)){var n=\"Get only handles username as a string\";return console.error(n),Promise.reject({message:n})}return e&&(t=t+\"/\"+e),request__default.get(t).then(function(e){return console.log(\"[MatterClient.apps().get()] App(s) data loaded:\",e),e})[\"catch\"](function(e){return console.error(\"[MatterClient.apps().get()] Error getting apps list: \",e),Promise.reject(e)})}},{key:\"add\",value:function(e){return request__default.post(this.endpoint,e).then(function(e){return console.log(\"[MatterClient.apps().add()] Application added successfully: \",e),new Application(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.getApps()] Error adding application: \",e),Promise.reject(e)})}},{key:\"search\",value:function(e){console.log(\"search called:\",e);var t=this.endpoint+\"/search/\";return e&&_.isString(e)&&(t+=e),console.log(\"searchEndpoint:\",t),request__default.get(t).then(function(e){return console.log(\"[MatterClient.users().search()] Users(s) data loaded:\",e),e})[\"catch\"](function(e){return console.error(\"[MatterClient.users().search()] Error getting apps list: \",e),Promise.reject(e)})}}]),e}(),UserAction=function(){function e(t){if(_classCallCheck(this,e),!t)throw console.error(\"Username is required to start an UserAction\"),new Error(\"Username is required to start an UserAction\");this.name=t,this.endpoint=config__default.serverUrl+\"/users/\"+this.name}return _createClass(e,[{key:\"get\",value:function(){return request__default.get(this.endpoint).then(function(e){return console.log(\"[MatterClient.user().get()] App(s) data loaded:\",e),new User(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.user().get()] Error getting users list: \",e),Promise.reject(e)})}},{key:\"update\",value:function(e){return request__default.put(this.endpoint,e).then(function(e){return console.log(\"[MatterClient.users().update()] App:\",e),new User(e)})[\"catch\"](function(e){return console.error(\"[MatterClient.users().update()] Error updating user: \",e),Promise.reject(e)})}},{key:\"del\",value:function(e){console.error(\"Deleting a user is currently disabled.\")}}]),e}(),matter_client__user=void 0,matter_client__token=void 0;libChecker([\"AWS\",\"_\"]);var MatterClient=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:\"signup\",value:function(e){return request__default.post(config__default.serverUrl+\"/signup\",e).then(function(e){return console.log(e),e})[\"catch\"](function(e){return console.error(\"[MatterClient.signup()] Error signing up:\",e),Promise.reject(e)})}},{key:\"login\",value:function(e){return e&&e.password&&e.username?request__default.put(config__default.serverUrl+\"/login\",e).then(function(e){return console.log(\"[MatterClient.login()]: Login response: \",e),matter_client__token=e.token,null===window.sessionStorage.getItem(config__default.tokenName)&&(window.sessionStorage.setItem(config__default.tokenName,e.token),console.log(\"[MatterClient.login()]: token set to storage:\",window.sessionStorage.getItem(config__default.tokenName))),e})[\"catch\"](function(e){return console.error(\"[MatterClient.login()] Error logging in: \",e),Promise.reject(e)}):(console.error(\"Username/Email and Password are required to login.\"),Promise.reject({message:\"Username/Email and Password are required to login.\"}))}},{key:\"logout\",value:function(){return request__default.put(config__default.serverUrl+\"/logout\",{}).then(function(e){return console.log(\"[MatterClient.logout()] Logout successful: \",e),\"undefined\"!=typeof window&&null!=typeof window.sessionStorage.getItem(config__default.tokenName)&&window.sessionStorage.clear(),e.body})[\"catch\"](function(e){return e.status&&401==e.status?void(\"undefined\"!=typeof window&&null!=window.sessionStorage.getItem(config__default.tokenName)&&window.sessionStorage.clear()):(console.error(\"[MatterClient.logout()] Error logging out: \",e),Promise.reject(e))})}},{key:\"getCurrentUser\",value:function(){return request__default.get(config__default.serverUrl+\"/user\",{}).then(function(e){return console.log(\"[MatterClient.getCurrentUser()] Current User:\",e),matter_client__user=e})[\"catch\"](function(e){return console.error(\"[MatterClient.getCurrentUser()] Error getting current user: \",e),Promise.reject(e)})}},{key:\"getAuthToken\",value:function(){return\"undefined\"==typeof window||\"undefined\"==typeof window.sessionStorage.getItem(config__default.tokenName)?null:window.sessionStorage.getItem(config__default.tokenName)}},{key:\"app\",value:function(e){return console.log(\"New AppAction:\",new AppAction(e)),new AppAction(e)}},{key:\"matter_client__user\",value:function(e){return new UserAction(e)}},{key:\"apps\",get:function(){return console.log(\"New AppsAction:\",new AppsAction),new AppsAction}},{key:\"users\",get:function(){return new UsersAction}}]),e}(),matter_client=MatterClient;return matter_client});\n//# sourceMappingURL=matter-client.min.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('aws-sdk'), require('superagent'), require('firebase')) :\n\ttypeof define === 'function' && define.amd ? define(['underscore', 'aws-sdk', 'superagent', 'firebase'], factory) :\n\tglobal.MatterClient = factory(global._, global.AWS, global.superagent, global.Firebase)\n}(this, function (_, AWS, superagent, Firebase) { 'use strict';\n\n\tvar libChecker = (libsArray) => {\n\t\tlibsArray.forEach((libName) => {\n\t\t\tlet libRef = libName;\n\t\t\t//Protect usage of eval\n\t\t\tif (libName.length >= 20 || typeof libName != 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof window == 'undefined') {\n\t\t\t\tlibRef = `window.${libName}`;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof eval(libName) == 'undefined' || typeof eval(libRef) == 'undefined') {\n\t\t\t\tconsole.error(`${libName} is required to use Matter`);\n\t\t\t}\n\t\t});\n\t};\n\n\tlet config__config = {\n\t\tserverUrl: 'hypercube.elasticbeanstalk.com',\n\t\ttokenName: 'matter-client',\n\t\tfbUrl: 'https://pruvit.firebaseio.com/',\n\t\taws: {\n\t\t\tregion: 'us-east-1',\n\t\t\tcognito: {\n\t\t\t\tpoolId: 'us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982',\n\t\t\t\tparams: {\n\t\t\t\t\tRoleArn: 'arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t//Set server to local server if developing\n\tif (typeof window != 'undefined' && (window.location.hostname == '' || window.location.hostname == 'localhost')) {\n\t\tconfig__config.serverUrl = 'http://localhost:4000';\n\t}\n\tvar config__default = config__config;\n\n\tlet browserStorage__storage = {\n\t\tget exists() {\n\t\t\tconst testKey = 'test';\n\t\t\tconsole.log('storage exists called');\n\t\t\tif (typeof window != 'undefined') {\n\t\t\t\ttry {\n\t\t\t\t\twindow.sessionStorage.setItem(testKey, '1');\n\t\t\t\t\twindow.sessionStorage.removeItem(testKey);\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.warn('Session storage does not exist.', err);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley sets item to session storage.\n\t\t *\n\t\t * @param {String} itemName The items name\n\t\t * @param {String} itemValue The items value\n\t\t *\n\t\t *  @private\n\t\t */\n\t\tsetItem(itemName, itemValue) {\n\t\t\t//TODO: Handle itemValue being an object instead of a string\n\t\t\tif (this.exists) {\n\t\t\t\twindow.sessionStorage.setItem(itemName, itemValue);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley gets an item from session storage.\n\t\t *\n\t\t * @param {String} itemName The items name\n\t\t *\n\t\t * @return {String}\n\t\t *\n\t\t */\n\t\tgetItem(itemName) {\n\t\t\tif (this.exists) {\n\t\t\t\tconsole.log('item loaded from session');\n\t\t\t\treturn window.sessionStorage.getItem(itemName);\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley removes item from session storage.\n\t\t *\n\t\t * @param {String} itemName - The items name\n\t\t *\n\t\t */\n\t\tremoveItem(itemName) {\n\t\t\t//TODO: Only remove used items\n\t\t\tif (this.exists) {\n\t\t\t\ttry {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.removeItem(itemName);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.warn('Item could not be removed from session storage.', err);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley removes item from session storage.\n\t\t *\n\t\t * @param {String} itemName the items name\n\t\t * @param {String} itemValue the items value\n\t\t *\n\t\t *  @private\n\t\t */\n\t\tclear() {\n\t\t\t//TODO: Only remove used items\n\t\t\tif (this.exists) {\n\t\t\t\ttry {\n\t\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.warn('Session storage could not be cleared.', err);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t};\n\n\tvar browserStorage = browserStorage__storage;\n\n\tlet request__requester;\n\tif (typeof window == 'undefined') { //Node Mode\n\t\trequest__requester = superagent;\n\t} else if (typeof window.superagent == 'undefined') {\n\t\tconsole.error('Superagent is required to use Matter');\n\t} else { //Browser mode\n\t\trequest__requester = window.superagent;\n\t}\n\n\tlet request__request = {\n\t\tget(endpoint, queryData) {\n\t\t\tvar req = request__requester.get(endpoint);\n\t\t\tif (queryData) {\n\t\t\t\treq.query(queryData);\n\t\t\t}\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tpost(endpoint, data) {\n\t\t\tvar req = request__requester.post(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tput(endpoint, data) {\n\t\t\tvar req = request__requester.put(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tdel(endpoint, data) {\n\t\t\tvar req = request__requester.put(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t}\n\n\t};\n\n\tvar request__default = request__request;\n\n\tfunction handleResponse(req) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treq.end((err, res) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\t// console.log('Response:', res);\n\t\t\t\t\treturn resolve(res.body);\n\t\t\t\t} else {\n\t\t\t\t\tif (err.status == 401) {\n\t\t\t\t\t\tconsole.warn('Unauthorized. You must be signed into make this request.');\n\t\t\t\t\t}\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tfunction addAuthHeader(req) {\n\t\tif (browserStorage.getItem(config__default.tokenName)) {\n\t\t\treq = req.set('Authorization', 'Bearer ' + browserStorage.getItem(config__default.tokenName));\n\t\t\tconsole.log('Set auth header');\n\t\t}\n\t\treturn req;\n\t}\n\n\t//Actions for applications list\n\tclass AppsAction {\n\t\tconstructor() {\n\t\t\tthis.endpoint = config__default.serverUrl + '/apps';\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\treturn request__default.post(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Application class.\n\t *\n\t */\n\tclass Application__Application {\n\t\tconstructor(appData) {\n\t\t\tthis.name = appData.name;\n\t\t\tthis.owner = appData.owner || null;\n\t\t\tthis.collaborators = appData.collaborators || [];\n\t\t\tthis.createdAt = appData.createdAt;\n\t\t\tthis.updatedAt = appData.updatedAt;\n\t\t\tthis.frontend = appData.frontend || {};\n\t\t\tthis.backend = appData.backend || {};\n\t\t\tif (Firebase) {\n\t\t\t\tthis.fbRef = new Firebase(config__default.fbUrl + appData.name);\n\t\t\t}\n\t\t}\n\t\t//Get files list and convert to structure\n\t\tgetStructure() {\n\t\t\treturn this.getFiles().then((filesArray) => {\n\t\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\t\tconsole.log('Child struct from array:', childStruct);\n\t\t\t\treturn childStruct;\n\t\t\t}, (err) => {\n\t\t\t\tconsole.error('[Application.getStructure] Error getting files: ', err);\n\t\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t\t});\n\t\t}\n\t\t//Get files list from S3\n\t\tgetFiles() {\n\t\t\tif (!this.frontend || !this.frontend.bucketName) {\n\t\t\t\tconsole.error('[Applicaiton.getFiles] Attempting to get objects for bucket without name.');\n\t\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t// console.info('AWS creds are being updated to make request');\n\t\t\t\t\tsetAWSConfig();\n\t\t\t\t}\n\t\t\t\tvar s3 = new AWS.S3();\n\t\t\t\tvar listParams = {Bucket: this.frontend.bucketName};\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ts3.listObjects(listParams, function(err, data) {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\tconsole.log('[Application.getObjects()] listObjects returned:', data);\n\t\t\t\t\t\t\treturn resolve(data.Contents);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.error('[Application.getObjects()] Error listing objects:', err);\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tpublishFile(fileData) {\n\t\t\tif (!this.frontend) {\n\t\t\t\tconsole.error('Frontend data not available. Make sure to call .get().');\n\t\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t\t}\n\t\t\tvar saveParams = {Bucket: this.frontent.bucketName, Key: fileData.key,  Body: fileData.content, ACL: 'public-read'};\n\t\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\t\tif (fileData.contentType) {\n\t\t\t\tsaveParams.ContentType = fileData.contentType;\n\t\t\t}\n\t\t\t// console.log('[$aws.$saveFiles] saveParams:', saveParams);\n\t\t\treturn s3.putObject(saveParams, function(err, data) {\n\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log('[Application.publishFile()] file saved successfully. Returning:', data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\telse {\n\t\t\t\t\tconsole.error('[Application.publishFile()] Error saving file:', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\taddStorage() {\n\t\t\t//TODO:Add storage bucket\n\t\t\tvar endpoint = config__default.serverUrl + '/apps/' + this.name + '/storage';\n\t\t\treturn request__default.post(endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\t\treturn new Application__Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\tapplyTemplate() {\n\t\t\tvar endpoint = config__default.serverUrl + '/apps/' + this.name + '/template';\n\t\t\tconsole.log('Applying templates to existing');\n\t\t\t// return request.post(endpoint, appData).then(function(response) {\n\t\t\t// \tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\t// \tif (!apps.isList) {\n\t\t\t// \t\treturn new Application(response);\n\t\t\t// \t}\n\t\t\t// \treturn response;\n\t\t\t// })['catch'](function(errRes) {\n\t\t\t// \tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\t// \treturn Promise.reject(errRes);\n\t\t\t// });\n\t\t}\n\t}\n\n\tvar Application__default = Application__Application;\n\n\t//------------------ Utility Functions ------------------//\n\n\t// AWS Config\n\tfunction setAWSConfig() {\n\t\tAWS.config.update({\n\t\t  credentials: new AWS.CognitoIdentityCredentials({\n\t\t  IdentityPoolId: config__default.aws.cognito.poolId\n\t\t  }),\n\t\t  region: config__default.aws.region\n\t\t});\n\t}\n\n\t//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n\t//Examples for two files (index.html and /testFolder/file.js):\n\t//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n\t//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\n\tfunction childrenStructureFromArray(fileArray) {\n\t\t// console.log('childStructureFromArray called:', fileArray);\n\t\t//Create a object for each file that stores the file in the correct 'children' level\n\t\tvar mappedStructure = fileArray.map(function(file) {\n\t\t\treturn buildStructureObject(file);\n\t\t});\n\t\treturn combineLikeObjs(mappedStructure);\n\t}\n\t//Convert file with key into a folder/file children object\n\tfunction buildStructureObject(file) {\n\t\tvar pathArray;\n\t\t// console.log('buildStructureObject with:', file);\n\t\tif (_.has(file, 'path')) {\n\t\t\t//Coming from files already having path (structure)\n\t\t\tpathArray = file.path.split('/');\n\t\t} else {\n\t\t\t//Coming from aws\n\t\t\tpathArray = file.Key.split('/');\n\t\t\t// console.log('file before pick:', file);\n\t\t\tfile = _.pick(file, 'Key');\n\t\t\tfile.path = file.Key;\n\t\t\tfile.name = file.Key;\n\t\t}\n\t\tvar currentObj = file;\n\t\tif (pathArray.length == 1) {\n\t\t\tcurrentObj.name = pathArray[0];\n\t\t\tif (!_.has(currentObj,'type')) {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t}\n\t\t\tcurrentObj.path = pathArray[0];\n\t\t\treturn currentObj;\n\t\t} else {\n\t\t\tvar finalObj = {};\n\t\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = _.first(list, ind + 1).join('/');\n\t\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t\t//TODO: Find out why this works\n\t\t\t\t\tif (ind == 0) {\n\t\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t\t} else {\n\t\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\t\tif (file.$id) {\n\t\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn finalObj;\n\t\t}\n\t}\n\t//Recursivley combine children of object's that have the same names\n\tfunction combineLikeObjs(mappedArray) {\n\t\tvar takenNames = [];\n\t\tvar finishedArray = [];\n\t\t_.each(mappedArray, (obj, ind, list) => {\n\t\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\t\ttakenNames.push(obj.name);\n\t\t\t\tfinishedArray.push(obj);\n\t\t\t} else {\n\t\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t\t//Combine children of like objects\n\t\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t\t// console.log('extended obj:',likeObj);\n\t\t\t}\n\t\t});\n\t\treturn finishedArray;\n\t}\n\n\t//Actions for specific application\n\tclass AppAction {\n\t\tconstructor(appName) {\n\t\t\tif (appName) {\n\t\t\t\tthis.name = appName;\n\t\t\t\tthis.endpoint = `${config__default.serverUrl}/apps/${this.name}`;\n\t\t\t} else {\n\t\t\t\tconsole.error('Application name is required to start an AppAction');\n\t\t\t\tthrow new Error('Application name is required to start an AppAction');\n\t\t\t}\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.app().get()] App(s) data loaded:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.app().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update an application\n\t\tupdate(appData) {\n\t\t\treturn request__default.put(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().update()] App:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().update()] Error updating app: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete an application\n\t\tdel(appData) {\n\t\t\treturn request__default.delete(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().del()] Apps:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().del()] Error deleting app: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\tgetFiles() {\n\t\t\treturn this.get().then((app) => {\n\t\t\t\tapp.getFiles().then((filesArray)=> {\n\t\t\t\t\treturn filesArray;\n\t\t\t\t})['catch']((err) => {\n\t\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application files: ', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\n\t\tgetStructure() {\n\t\t\treturn this.get().then((app) => {\n\t\t\t\treturn app.getStructure().then((structure)=> {\n\t\t\t\t\tconsole.log('Structure loaded: ', structure);\n\t\t\t\t\treturn structure;\n\t\t\t\t})['catch']((err) => {\n\t\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application structure: ', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * User class.\n\t *\n\t */\n\tclass User {\n\t\tconstructor(userData) {\n\t\t\tthis.name = userData.name;\n\t\t\tthis.username = userData.username;\n\t\t\tthis.createdAt = userData.createdAt;\n\t\t\tthis.updatedAt = userData.updatedAt;\n\t\t}\n\t\tget apps() {\n\t\t\treturn new AppsAction();\n\t\t}\n\t\tapp(appName) {\n\t\t\t//TODO: Attach owner as well ?\n\t\t\treturn new AppAction(appName);\n\t\t}\n\t}\n\n\t//Actions for applications list\n\tclass UsersAction {\n\t\tconstructor() {\n\t\t\tthis.endpoint = config__default.serverUrl + '/users';\n\t\t}\n\t\t//Get applications or single application\n\t\tget(query) {\n\t\t\tlet userEndpoint = this.endpoint;\n\t\t\tif (query && !_.isString(query)) {\n\t\t\t\tconst msg = 'Get only handles username as a string';\n\t\t\t\tconsole.error(msg);\n\t\t\t\treturn Promise.reject({message: msg});\n\t\t\t}\n\t\t\tif (query) {\n\t\t\t userEndpoint = userEndpoint + '/' + query;\n\t\t\t}\n\t\t\treturn request__default.get(userEndpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\treturn request__default.post(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Search with partial of username\n\t\tsearch(query) {\n\t\t\tconsole.log('search called:', query);\n\t\t\tvar searchEndpoint = this.endpoint + '/search/';\n\t\t\tif (query && _.isString(query)) {\n\t\t\t\tsearchEndpoint += query;\n\t\t\t}\n\t\t\tconsole.log('searchEndpoint:', searchEndpoint);\n\t\t\treturn request__default.get(searchEndpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.users().search()] Users(s) data loaded:', response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.users().search()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\t//Actions for specific user\n\tclass UserAction {\n\t\tconstructor(userName) {\n\t\t\tif (userName) {\n\t\t\t\tthis.name = userName;\n\t\t\t\tthis.endpoint = `${config__default.serverUrl}/users/${this.name}`;\n\t\t\t} else {\n\t\t\t\tconsole.error('Username is required to start an UserAction');\n\t\t\t\tthrow new Error('Username is required to start an UserAction');\n\t\t\t}\n\t\t}\n\t\t//Get userlications or single userlication\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.user().get()] App(s) data loaded:', response);\n\t\t\t\treturn new User(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.user().get()] Error getting users list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update an userlication\n\t\tupdate(userData) {\n\t\t\treturn request__default.put(this.endpoint, userData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.users().update()] App:', response);\n\t\t\t\treturn new User(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.users().update()] Error updating user: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete an userlication\n\t\t//TODO: Only do request if deleting personal account\n\t\tdel(userData) {\n\t\t\tconsole.error('Deleting a user is currently disabled.');\n\t\t\t// return request.delete(this.endpoint, userData).then((response) => {\n\t\t\t// \tconsole.log('[MatterClient.users().del()] Apps:', response);\n\t\t\t// \treturn new User(response);\n\t\t\t// })['catch']((errRes) => {\n\t\t\t// \tconsole.error('[MatterClient.users().del()] Error deleting user: ', errRes);\n\t\t\t// \treturn Promise.reject(errRes);\n\t\t\t// });\n\t\t}\n\t}\n\n\tlet matter_client__user;\n\tlet matter_client__token;\n\n\tlibChecker(['AWS', '_']);\n\n\t//Matter Client Class\n\tclass MatterClient {\n\t\t//Signup a new user\n\t\tsignup(signupData) {\n\t\t\treturn request__default.post(config__default.serverUrl + '/signup', signupData)\n\t\t\t.then((response) => {\n\t\t\t  console.log(response);\n\t\t\t  return response;\n\t\t\t})\n\t\t\t['catch']((errRes) => {\n\t\t\t  console.error('[MatterClient.signup()] Error signing up:', errRes);\n\t\t\t  return Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\t//Login a user\n\t\tlogin(loginData) {\n\t\t\tif (!loginData || !loginData.password || !loginData.username) {\n\t\t\t\tconsole.error('Username/Email and Password are required to login.');\n\t\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login.'});\n\t\t\t}\n\t\t\treturn request__default.put(config__default.serverUrl + '/login', loginData)\n\t\t\t.then((response) => {\n\t\t\t\t//TODO: Save token locally\n\t\t\t\tconsole.log('[MatterClient.login()]: Login response: ', response);\n\t\t\t\tmatter_client__token = response.token;\n\t\t\t\tif (window.sessionStorage.getItem(config__default.tokenName) === null) {\n\t\t\t\t\twindow.sessionStorage.setItem(config__default.tokenName, response.token);\n\t\t\t\t\tconsole.log('[MatterClient.login()]: token set to storage:', window.sessionStorage.getItem(config__default.tokenName));\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.login()] Error logging in: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tlogout() {\n\t\t\treturn request__default.put(config__default.serverUrl + '/logout', {\n\t\t\t}).then(function(response) {\n\t\t\t  console.log('[MatterClient.logout()] Logout successful: ', response);\n\t\t\t  if (typeof window != 'undefined' && typeof window.sessionStorage.getItem(config__default.tokenName) != null) {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t}\n\t\t\t\treturn response.body;\n\t\t\t})['catch'](function(errRes) {\n\t\t\t\tif (errRes.status && errRes.status == 401) {\n\t\t\t\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config__default.tokenName) != null) {\n\t\t\t\t\t\t//Clear session storage\n\t\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.error('[MatterClient.logout()] Error logging out: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tgetCurrentUser() {\n\t\t\t//TODO: Check Current user variable\n\t\t\treturn request__default.get(config__default.serverUrl + '/user', {\n\t\t\t}).then(function(response) {\n\t\t\t\t//TODO: Save user information locally\n\t\t\t\tconsole.log('[MatterClient.getCurrentUser()] Current User:', response);\n\t\t\t\tmatter_client__user = response;\n\t\t\t\treturn matter_client__user;\n\t\t\t})['catch'](function(errRes) {\n\t\t\t\tconsole.error('[MatterClient.getCurrentUser()] Error getting current user: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tgetAuthToken() {\n\t\t\tif (typeof window == 'undefined' || typeof window.sessionStorage.getItem(config__default.tokenName) == 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn window.sessionStorage.getItem(config__default.tokenName);\n\t\t}\n\t\t//TODO: Use getter/setter to make this not a function\n\t\t//Start a new AppsAction\n\t\tget apps() {\n\t\t\tconsole.log('New AppsAction:', new AppsAction());\n\t\t\treturn new AppsAction();\n\t\t}\n\t\t//Start a new app action\n\t\tapp(appName) {\n\t\t\tconsole.log('New AppAction:', new AppAction(appName));\n\t\t\treturn new AppAction(appName);\n\t\t}\n\n\t\tget users() {\n\t\t\treturn new UsersAction();\n\t\t}\n\t\tmatter_client__user(username) {\n\t\t\treturn new UserAction(username);\n\t\t}\n\t};\n\n\tvar matter_client = MatterClient;\n\n\treturn matter_client;\n\n}));\n","import config from '../config';\nimport browserStorage from './browserStorage';\nimport superagent from 'superagent';\n\nlet requester;\nif (typeof window == 'undefined') { //Node Mode\n\trequester = superagent;\n} else if (typeof window.superagent == 'undefined') {\n\tconsole.error('Superagent is required to use Matter');\n} else { //Browser mode\n\trequester = window.superagent;\n}\n\nlet request = {\n\tget(endpoint, queryData) {\n\t\tvar req = requester.get(endpoint);\n\t\tif (queryData) {\n\t\t\treq.query(queryData);\n\t\t}\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tpost(endpoint, data) {\n\t\tvar req = requester.post(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tput(endpoint, data) {\n\t\tvar req = requester.put(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tdel(endpoint, data) {\n\t\tvar req = requester.put(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t}\n\n};\n\nexport default request;\n\nfunction handleResponse(req) {\n\treturn new Promise((resolve, reject) => {\n\t\treq.end((err, res) => {\n\t\t\tif (!err) {\n\t\t\t\t// console.log('Response:', res);\n\t\t\t\treturn resolve(res.body);\n\t\t\t} else {\n\t\t\t\tif (err.status == 401) {\n\t\t\t\t\tconsole.warn('Unauthorized. You must be signed into make this request.');\n\t\t\t\t}\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t});\n\t});\n}\nfunction addAuthHeader(req) {\n\tif (browserStorage.getItem(config.tokenName)) {\n\t\treq = req.set('Authorization', 'Bearer ' + browserStorage.getItem(config.tokenName));\n\t\tconsole.log('Set auth header');\n\t}\n\treturn req;\n}\n","import config from '../config';\nimport request from '../utils/request';\nimport Firebase from 'firebase';\nimport _ from 'underscore';\n\n/**\n * Application class.\n *\n */\nclass Application {\n\tconstructor(appData) {\n\t\tthis.name = appData.name;\n\t\tthis.owner = appData.owner || null;\n\t\tthis.collaborators = appData.collaborators || [];\n\t\tthis.createdAt = appData.createdAt;\n\t\tthis.updatedAt = appData.updatedAt;\n\t\tthis.frontend = appData.frontend || {};\n\t\tthis.backend = appData.backend || {};\n\t\tif (Firebase) {\n\t\t\tthis.fbRef = new Firebase(config.fbUrl + appData.name);\n\t\t}\n\t}\n\t//Get files list and convert to structure\n\tgetStructure() {\n\t\treturn this.getFiles().then((filesArray) => {\n\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\tconsole.log('Child struct from array:', childStruct);\n\t\t\treturn childStruct;\n\t\t}, (err) => {\n\t\t\tconsole.error('[Application.getStructure] Error getting files: ', err);\n\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t});\n\t}\n\t//Get files list from S3\n\tgetFiles() {\n\t\tif (!this.frontend || !this.frontend.bucketName) {\n\t\t\tconsole.error('[Applicaiton.getFiles] Attempting to get objects for bucket without name.');\n\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t} else {\n\t\t\t//If AWS Credential do not exist, set them\n\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t// console.info('AWS creds are being updated to make request');\n\t\t\t\tsetAWSConfig();\n\t\t\t}\n\t\t\tvar s3 = new AWS.S3();\n\t\t\tvar listParams = {Bucket: this.frontend.bucketName};\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\ts3.listObjects(listParams, function(err, data) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tconsole.log('[Application.getObjects()] listObjects returned:', data);\n\t\t\t\t\t\treturn resolve(data.Contents);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('[Application.getObjects()] Error listing objects:', err);\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\tpublishFile(fileData) {\n\t\tif (!this.frontend) {\n\t\t\tconsole.error('Frontend data not available. Make sure to call .get().');\n\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t}\n\t\tvar saveParams = {Bucket: this.frontent.bucketName, Key: fileData.key,  Body: fileData.content, ACL: 'public-read'};\n\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\tif (fileData.contentType) {\n\t\t\tsaveParams.ContentType = fileData.contentType;\n\t\t}\n\t\t// console.log('[$aws.$saveFiles] saveParams:', saveParams);\n\t\treturn s3.putObject(saveParams, function(err, data) {\n\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\tif (!err) {\n\t\t\t\tconsole.log('[Application.publishFile()] file saved successfully. Returning:', data);\n\t\t\t\treturn data;\n\t\t\t}\telse {\n\t\t\t\tconsole.error('[Application.publishFile()] Error saving file:', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t}\n\t\t});\n\t}\n\taddStorage() {\n\t\t//TODO:Add storage bucket\n\t\tvar endpoint = config.serverUrl + '/apps/' + this.name + '/storage';\n\t\treturn request.post(endpoint, appData).then((response) => {\n\t\t\tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\tapplyTemplate() {\n\t\tvar endpoint = config.serverUrl + '/apps/' + this.name + '/template';\n\t\tconsole.log('Applying templates to existing');\n\t\t// return request.post(endpoint, appData).then(function(response) {\n\t\t// \tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t// \tif (!apps.isList) {\n\t\t// \t\treturn new Application(response);\n\t\t// \t}\n\t\t// \treturn response;\n\t\t// })['catch'](function(errRes) {\n\t\t// \tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t// \treturn Promise.reject(errRes);\n\t\t// });\n\t}\n}\n\nexport default Application;\n\n//------------------ Utility Functions ------------------//\n\n// AWS Config\nfunction setAWSConfig() {\n\tAWS.config.update({\n\t  credentials: new AWS.CognitoIdentityCredentials({\n\t  IdentityPoolId: config.aws.cognito.poolId\n\t  }),\n\t  region: config.aws.region\n\t});\n}\n\n//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n//Examples for two files (index.html and /testFolder/file.js):\n//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\nfunction childrenStructureFromArray(fileArray) {\n\t// console.log('childStructureFromArray called:', fileArray);\n\t//Create a object for each file that stores the file in the correct 'children' level\n\tvar mappedStructure = fileArray.map(function(file) {\n\t\treturn buildStructureObject(file);\n\t});\n\treturn combineLikeObjs(mappedStructure);\n}\n//Convert file with key into a folder/file children object\nfunction buildStructureObject(file) {\n\tvar pathArray;\n\t// console.log('buildStructureObject with:', file);\n\tif (_.has(file, 'path')) {\n\t\t//Coming from files already having path (structure)\n\t\tpathArray = file.path.split('/');\n\t} else {\n\t\t//Coming from aws\n\t\tpathArray = file.Key.split('/');\n\t\t// console.log('file before pick:', file);\n\t\tfile = _.pick(file, 'Key');\n\t\tfile.path = file.Key;\n\t\tfile.name = file.Key;\n\t}\n\tvar currentObj = file;\n\tif (pathArray.length == 1) {\n\t\tcurrentObj.name = pathArray[0];\n\t\tif (!_.has(currentObj,'type')) {\n\t\t\tcurrentObj.type = 'file';\n\t\t}\n\t\tcurrentObj.path = pathArray[0];\n\t\treturn currentObj;\n\t} else {\n\t\tvar finalObj = {};\n\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\tcurrentObj.name = loc;\n\t\t\t\tcurrentObj.path = _.first(list, ind + 1).join('/');\n\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t//TODO: Find out why this works\n\t\t\t\tif (ind == 0) {\n\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t}\n\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t} else {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\tcurrentObj.name = loc;\n\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\tif (file.$id) {\n\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn finalObj;\n\t}\n}\n//Recursivley combine children of object's that have the same names\nfunction combineLikeObjs(mappedArray) {\n\tvar takenNames = [];\n\tvar finishedArray = [];\n\t_.each(mappedArray, (obj, ind, list) => {\n\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\ttakenNames.push(obj.name);\n\t\t\tfinishedArray.push(obj);\n\t\t} else {\n\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t//Combine children of like objects\n\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t// console.log('extended obj:',likeObj);\n\t\t}\n\t});\n\treturn finishedArray;\n}\n","export default (libsArray) => {\n\tlibsArray.forEach((libName) => {\n\t\tlet libRef = libName;\n\t\t//Protect usage of eval\n\t\tif (libName.length >= 20 || typeof libName != 'string') {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof window == 'undefined') {\n\t\t\tlibRef = `window.${libName}`;\n\t\t\treturn;\n\t\t}\n\t\tif (typeof eval(libName) == 'undefined' || typeof eval(libRef) == 'undefined') {\n\t\t\tconsole.error(`${libName} is required to use Matter`);\n\t\t}\n\t});\n};\n","let config = {\n\tserverUrl: 'hypercube.elasticbeanstalk.com',\n\ttokenName: 'matter-client',\n\tfbUrl: 'https://pruvit.firebaseio.com/',\n\taws: {\n\t\tregion: 'us-east-1',\n\t\tcognito: {\n\t\t\tpoolId: 'us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982',\n\t\t\tparams: {\n\t\t\t\tRoleArn: 'arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1'\n\t\t\t}\n\t\t}\n\t}\n};\n//Set server to local server if developing\nif (typeof window != 'undefined' && (window.location.hostname == '' || window.location.hostname == 'localhost')) {\n\tconfig.serverUrl = 'http://localhost:4000';\n}\nexport default config;\n","import config from '../config';\n\nlet storage = {\n\tget exists() {\n\t\tconst testKey = 'test';\n\t\tconsole.log('storage exists called');\n\t\tif (typeof window != 'undefined') {\n\t\t\ttry {\n\t\t\t\twindow.sessionStorage.setItem(testKey, '1');\n\t\t\t\twindow.sessionStorage.removeItem(testKey);\n\t\t\t\treturn true;\n\t\t\t} catch (err) {\n\t\t\t\tconsole.warn('Session storage does not exist.', err);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\t/**\n\t * @description\n\t * Safley sets item to session storage.\n\t *\n\t * @param {String} itemName The items name\n\t * @param {String} itemValue The items value\n\t *\n\t *  @private\n\t */\n\tsetItem(itemName, itemValue) {\n\t\t//TODO: Handle itemValue being an object instead of a string\n\t\tif (this.exists) {\n\t\t\twindow.sessionStorage.setItem(itemName, itemValue);\n\t\t}\n\t},\n\t/**\n\t * @description\n\t * Safley gets an item from session storage.\n\t *\n\t * @param {String} itemName The items name\n\t *\n\t * @return {String}\n\t *\n\t */\n\tgetItem(itemName) {\n\t\tif (this.exists) {\n\t\t\tconsole.log('item loaded from session');\n\t\t\treturn window.sessionStorage.getItem(itemName);\n\t\t}\n\t\treturn null;\n\t},\n\t/**\n\t * @description\n\t * Safley removes item from session storage.\n\t *\n\t * @param {String} itemName - The items name\n\t *\n\t */\n\tremoveItem(itemName) {\n\t\t//TODO: Only remove used items\n\t\tif (this.exists) {\n\t\t\ttry {\n\t\t\t\t//Clear session storage\n\t\t\t\twindow.sessionStorage.removeItem(itemName);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.warn('Item could not be removed from session storage.', err);\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * @description\n\t * Safley removes item from session storage.\n\t *\n\t * @param {String} itemName the items name\n\t * @param {String} itemValue the items value\n\t *\n\t *  @private\n\t */\n\tclear() {\n\t\t//TODO: Only remove used items\n\t\tif (this.exists) {\n\t\t\ttry {\n\t\t\t\t\t//Clear session storage\n\t\t\t\twindow.sessionStorage.clear();\n\t\t\t} catch (err) {\n\t\t\t\tconsole.warn('Session storage could not be cleared.', err);\n\t\t\t}\n\t\t}\n\t}\n\n};\n\nexport default storage;\n\n","import config from '../config';\nimport request from '../utils/request';\n\n//Actions for applications list\nclass AppsAction {\n\tconstructor() {\n\t\tthis.endpoint = config.serverUrl + '/apps';\n\t}\n\t//Get applications or single application\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Add an application\n\tadd(appData) {\n\t\treturn request.post(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n}\nexport default AppsAction;\n","import config from '../config';\nimport request from '../utils/request';\nimport Application from './Application';\nimport AWS from 'aws-sdk';\n\n//Actions for specific application\nclass AppAction {\n\tconstructor(appName) {\n\t\tif (appName) {\n\t\t\tthis.name = appName;\n\t\t\tthis.endpoint = `${config.serverUrl}/apps/${this.name}`;\n\t\t} else {\n\t\t\tconsole.error('Application name is required to start an AppAction');\n\t\t\tthrow new Error('Application name is required to start an AppAction');\n\t\t}\n\t}\n\t//Get applications or single application\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.app().get()] App(s) data loaded:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.app().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Update an application\n\tupdate(appData) {\n\t\treturn request.put(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().update()] App:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().update()] Error updating app: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Delete an application\n\tdel(appData) {\n\t\treturn request.delete(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().del()] Apps:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().del()] Error deleting app: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\tgetFiles() {\n\t\treturn this.get().then((app) => {\n\t\t\tapp.getFiles().then((filesArray)=> {\n\t\t\t\treturn filesArray;\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application files: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t})['catch']((err) => {\n\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application: ', err);\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n\n\tgetStructure() {\n\t\treturn this.get().then((app) => {\n\t\t\treturn app.getStructure().then((structure)=> {\n\t\t\t\tconsole.log('Structure loaded: ', structure);\n\t\t\t\treturn structure;\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application structure: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t})['catch']((err) => {\n\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application: ', err);\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n}\n\nexport default AppAction;\n","import config from '../config';\nimport AppsAction from './AppsAction';\nimport AppAction from './AppAction';\n\n/**\n * User class.\n *\n */\nclass User {\n\tconstructor(userData) {\n\t\tthis.name = userData.name;\n\t\tthis.username = userData.username;\n\t\tthis.createdAt = userData.createdAt;\n\t\tthis.updatedAt = userData.updatedAt;\n\t}\n\tget apps() {\n\t\treturn new AppsAction();\n\t}\n\tapp(appName) {\n\t\t//TODO: Attach owner as well ?\n\t\treturn new AppAction(appName);\n\t}\n}\n\nexport default User;\n\n","import config from '../config';\nimport request from '../utils/request';\nimport _ from 'underscore';\n\n//Actions for applications list\nclass UsersAction {\n\tconstructor() {\n\t\tthis.endpoint = config.serverUrl + '/users';\n\t}\n\t//Get applications or single application\n\tget(query) {\n\t\tlet userEndpoint = this.endpoint;\n\t\tif (query && !_.isString(query)) {\n\t\t\tconst msg = 'Get only handles username as a string';\n\t\t\tconsole.error(msg);\n\t\t\treturn Promise.reject({message: msg});\n\t\t}\n\t\tif (query) {\n\t\t userEndpoint = userEndpoint + '/' + query;\n\t\t}\n\t\treturn request.get(userEndpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Add an application\n\tadd(appData) {\n\t\treturn request.post(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Search with partial of username\n\tsearch(query) {\n\t\tconsole.log('search called:', query);\n\t\tvar searchEndpoint = this.endpoint + '/search/';\n\t\tif (query && _.isString(query)) {\n\t\t\tsearchEndpoint += query;\n\t\t}\n\t\tconsole.log('searchEndpoint:', searchEndpoint);\n\t\treturn request.get(searchEndpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.users().search()] Users(s) data loaded:', response);\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.users().search()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n}\nexport default UsersAction;\n","import config from '../config';\nimport request from '../utils/request';\nimport User from './User';\n\n//Actions for specific user\nclass UserAction {\n\tconstructor(userName) {\n\t\tif (userName) {\n\t\t\tthis.name = userName;\n\t\t\tthis.endpoint = `${config.serverUrl}/users/${this.name}`;\n\t\t} else {\n\t\t\tconsole.error('Username is required to start an UserAction');\n\t\t\tthrow new Error('Username is required to start an UserAction');\n\t\t}\n\t}\n\t//Get userlications or single userlication\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.user().get()] App(s) data loaded:', response);\n\t\t\treturn new User(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.user().get()] Error getting users list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Update an userlication\n\tupdate(userData) {\n\t\treturn request.put(this.endpoint, userData).then((response) => {\n\t\t\tconsole.log('[MatterClient.users().update()] App:', response);\n\t\t\treturn new User(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.users().update()] Error updating user: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Delete an userlication\n\t//TODO: Only do request if deleting personal account\n\tdel(userData) {\n\t\tconsole.error('Deleting a user is currently disabled.');\n\t\t// return request.delete(this.endpoint, userData).then((response) => {\n\t\t// \tconsole.log('[MatterClient.users().del()] Apps:', response);\n\t\t// \treturn new User(response);\n\t\t// })['catch']((errRes) => {\n\t\t// \tconsole.error('[MatterClient.users().del()] Error deleting user: ', errRes);\n\t\t// \treturn Promise.reject(errRes);\n\t\t// });\n\t}\n}\n\nexport default UserAction;\n","import libChecker from './utils/libChecker';\n// import Firebase from 'firebase';\nimport _ from 'underscore';\nimport AWS from 'aws-sdk';\n\nimport config from './config';\nimport request from './utils/request';\n\nimport AppsAction from './classes/AppsAction';\nimport AppAction from './classes/AppAction';\nimport Application from './classes/Application';\nimport User from './classes/User';\nimport UsersAction from './classes/UsersAction';\nimport UserAction from './classes/UserAction';\n\nlet user;\nlet token;\n\nlibChecker(['AWS', '_']);\n\n//Matter Client Class\nclass MatterClient {\n\t//Signup a new user\n\tsignup(signupData) {\n\t\treturn request.post(config.serverUrl + '/signup', signupData)\n\t\t.then((response) => {\n\t\t  console.log(response);\n\t\t  return response;\n\t\t})\n\t\t['catch']((errRes) => {\n\t\t  console.error('[MatterClient.signup()] Error signing up:', errRes);\n\t\t  return Promise.reject(errRes);\n\t\t});\n\t}\n\n\t//Login a user\n\tlogin(loginData) {\n\t\tif (!loginData || !loginData.password || !loginData.username) {\n\t\t\tconsole.error('Username/Email and Password are required to login.');\n\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login.'});\n\t\t}\n\t\treturn request.put(config.serverUrl + '/login', loginData)\n\t\t.then((response) => {\n\t\t\t//TODO: Save token locally\n\t\t\tconsole.log('[MatterClient.login()]: Login response: ', response);\n\t\t\ttoken = response.token;\n\t\t\tif (window.sessionStorage.getItem(config.tokenName) === null) {\n\t\t\t\twindow.sessionStorage.setItem(config.tokenName, response.token);\n\t\t\t\tconsole.log('[MatterClient.login()]: token set to storage:', window.sessionStorage.getItem(config.tokenName));\n\t\t\t}\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.login()] Error logging in: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tlogout() {\n\t\treturn request.put(config.serverUrl + '/logout', {\n\t\t}).then(function(response) {\n\t\t  console.log('[MatterClient.logout()] Logout successful: ', response);\n\t\t  if (typeof window != 'undefined' && typeof window.sessionStorage.getItem(config.tokenName) != null) {\n\t\t\t\t//Clear session storage\n\t\t\t\twindow.sessionStorage.clear();\n\t\t\t}\n\t\t\treturn response.body;\n\t\t})['catch'](function(errRes) {\n\t\t\tif (errRes.status && errRes.status == 401) {\n\t\t\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config.tokenName) != null) {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.error('[MatterClient.logout()] Error logging out: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tgetCurrentUser() {\n\t\t//TODO: Check Current user variable\n\t\treturn request.get(config.serverUrl + '/user', {\n\t\t}).then(function(response) {\n\t\t\t//TODO: Save user information locally\n\t\t\tconsole.log('[MatterClient.getCurrentUser()] Current User:', response);\n\t\t\tuser = response;\n\t\t\treturn user;\n\t\t})['catch'](function(errRes) {\n\t\t\tconsole.error('[MatterClient.getCurrentUser()] Error getting current user: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tgetAuthToken() {\n\t\tif (typeof window == 'undefined' || typeof window.sessionStorage.getItem(config.tokenName) == 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\treturn window.sessionStorage.getItem(config.tokenName);\n\t}\n\t//TODO: Use getter/setter to make this not a function\n\t//Start a new AppsAction\n\tget apps() {\n\t\tconsole.log('New AppsAction:', new AppsAction());\n\t\treturn new AppsAction();\n\t}\n\t//Start a new app action\n\tapp(appName) {\n\t\tconsole.log('New AppAction:', new AppAction(appName));\n\t\treturn new AppAction(appName);\n\t}\n\n\tget users() {\n\t\treturn new UsersAction();\n\t}\n\tuser(username) {\n\t\treturn new UserAction(username);\n\t}\n};\n\nexport default MatterClient;\n"],"sourceRoot":"/source/"}