{"version":3,"sources":["matter-client.min.js","/source/matter-client.js","/source/src/utils/request.js","/source/src/matter-client.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","require","define","amd","MatterClient","Firebase","AWS","_","this","handleResponse","req","Promise","resolve","reject","end","err","res","console","log","body","addAuthHeader","window","sessionStorage","getItem","request__config","tokenName","set","setAWSConfig","config","update","credentials","CognitoIdentityCredentials","IdentityPoolId","matter_client__config","aws","cognito","poolId","region","childrenStructureFromArray","fileArray","mappedStructure","map","file","buildStructureObject","combineLikeObjs","pathArray","has","path","split","Key","pick","name","currentObj","type","finalObj","each","loc","ind","list","first","join","children","$id","takenNames","finishedArray","mappedArray","obj","indexOf","push","likeObj","findWhere","union","request__superagent","undefined","superagent","error","serverUrl","request__request","get","endpoint","queryData","query","post","data","send","put","del","request__default","matter_client__user","matter_client__token","fbUrl","params","RoleArn","Application","appData","owner","collaborators","createdAt","updatedAt","frontend","backend","fbRef","value","getFiles","then","filesArray","childStruct","message","s3","S3","listParams","Bucket","bucketName","listObjects","Contents","fileData","saveParams","frontent","Body","content","ACL","contentType","ContentType","putObject","response","errRes","AppsAction","AppAction","appName","Error","app","getStructure","structure","signupData","loginData","password","username","token","setItem","setAuthHeader","clear","status","matter_client","File","re","ext","exec","divId"],"mappings":"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","file":"matter-client.min.js","sourcesContent":[null,"(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('firebase'), require('aws-sdk'), require('underscore')) :\n\ttypeof define === 'function' && define.amd ? define(['firebase', 'aws-sdk', 'underscore'], factory) :\n\tglobal.MatterClient = factory(global.Firebase, global.AWS, global._)\n}(this, function (Firebase, AWS, _) { 'use strict';\n\n\tlet request__superagent;\n\tif (typeof window.superagent == 'undefined') {\n\t\tconsole.error('Superagent is required to use Matter');\n\t} else {\n\t\trequest__superagent = window.superagent;\n\t}\n\n\t//TODO: Import config from seperate file\n\tconst request__config = {\n\t\tserverUrl: 'http://localhost:4000',\n\t\ttokenName: 'matter-client'\n\t};\n\tlet request__request = {\n\t\tget(endpoint, queryData) {\n\t\t\tvar req = request__superagent.get(endpoint);\n\t\t\tif (queryData) {\n\t\t\t\treq.query(queryData);\n\t\t\t}\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tpost(endpoint, data) {\n\t\t\tvar req = request__superagent.post(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tput(endpoint, data) {\n\t\t\tvar req = request__superagent.put(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tdel(endpoint, data) {\n\t\t\tvar req = request__superagent.put(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t}\n\n\t};\n\n\tvar request__default = request__request;\n\n\tfunction handleResponse(req) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treq.end((err, res) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log('Response:', res);\n\t\t\t\t\treturn resolve(res.body);\n\t\t\t\t} else {\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tfunction addAuthHeader(req) {\n\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(request__config.tokenName)) {\n\t\t\treq = req.set('Authorization', 'Bearer ' + sessionStorage.getItem(request__config.tokenName));\n\t\t\tconsole.log('Set auth header');\n\t\t}\n\t\treturn req;\n\t}\n\n\tlet matter_client__user;\n\tlet matter_client__token;\n\tconst matter_client__config = {\n\t\tserverUrl: 'http://localhost:4000',\n\t\ttokenName: 'matter-client',\n\t\tfbUrl: 'https://pruvit.firebaseio.com/',\n\t\taws: {\n\t\t\tregion: 'us-east-1',\n\t\t\tcognito: {\n\t\t\t\tpoolId: 'us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982',\n\t\t\t\tparams: {\n\t\t\t\t\tRoleArn: 'arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tif (typeof Firebase == 'undefined') {\n\t\tconsole.error('Firebase is required to use Matter');\n\t}\n\tif (typeof AWS == 'undefined') {\n\t\tconsole.error('AWS is required to use Matter');\n\t}\n\tif (typeof _ == 'undefined') {\n\t\tconsole.error('Underscore is required to use Matter');\n\t}\n\tif (typeof request__default == 'undefined') {\n\t\tconsole.error('Request is required to use Matter');\n\t}\n\t/**\n\t * Application class.\n\t *\n\t */\n\tclass Application {\n\t\tconstructor(appData) {\n\t\t\tthis.name = appData.name;\n\t\t\tthis.owner = appData.owner || null;\n\t\t\tthis.collaborators = appData.collaborators || [];\n\t\t\tthis.createdAt = appData.createdAt;\n\t\t\tthis.updatedAt = appData.updatedAt;\n\t\t\tthis.frontend = appData.frontend || {};\n\t\t\tthis.backend = appData.backend || {};\n\t\t\tif (Firebase) {\n\t\t\t\tthis.fbRef = new Firebase(matter_client__config.fbUrl + appData.name);\n\t\t\t}\n\t\t}\n\t\t//Get files list and convert to structure\n\t\tgetStructure() {\n\t\t\treturn this.getFiles().then((filesArray) => {\n\t\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\t\tconsole.log('Child struct from array:', childStruct);\n\t\t\t\treturn childStruct;\n\t\t\t}, (err) => {\n\t\t\t\tconsole.error('[Application.getStructure] Error getting files: ', err);\n\t\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t\t});\n\t\t}\n\t\t//Get files list from S3\n\t\tgetFiles() {\n\t\t\tif (!this.frontend) {\n\t\t\t\tconsole.error('[Applicaiton.getFiles] Attempting to get objects for bucket without name.');\n\t\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t// console.info('AWS creds are being updated to make request');\n\t\t\t\t\tsetAWSConfig();\n\t\t\t\t}\n\t\t\t\tvar s3 = new AWS.S3();\n\t\t\t\tvar listParams = {Bucket: bucketName};\n\t\t\t\treturn s3.listObjects(listParams, function(err, data) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tconsole.log('[Application.getObjects()] listObjects returned:', data);\n\t\t\t\t\t\treturn Promise.resolve(data.Contents);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('[Application.getObjects()] Error listing objects:', err);\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tpublishFile(fileData) {\n\t\t\tif (!this.frontend) {\n\t\t\t\tconsole.error('Frontend data not available. Make sure to call .get().');\n\t\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t\t}\n\t\t\tvar saveParams = {Bucket: this.frontent.bucketName, Key: fileData.key,  Body: fileData.content, ACL: 'public-read'};\n\t\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\t\tif (fileData.contentType) {\n\t\t\t\tsaveParams.ContentType = fileData.contentType;\n\t\t\t}\n\t\t\t// console.log('[$aws.$saveFiles] saveParams:', saveParams);\n\t\t\treturn s3.putObject(saveParams, function(err, data) {\n\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log('[Application.publishFile()] file saved successfully. Returning:', data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\telse {\n\t\t\t\t\tconsole.error('[Application.publishFile()] Error saving file:', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\taddStorage() {\n\t\t\t//TODO:Add storage bucket\n\t\t\tvar endpoint = matter_client__config.serverUrl + '/apps/' + this.name + '/storage';\n\t\t\treturn request__default.post(endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\tapplyTemplate() {\n\t\t\tvar endpoint = matter_client__config.serverUrl + '/apps/' + this.name + '/template';\n\t\t\tconsole.log('Applying templates to existing');\n\t\t\t// return request.post(endpoint, appData).then(function(response) {\n\t\t\t// \tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\t// \tif (!apps.isList) {\n\t\t\t// \t\treturn new Application(response);\n\t\t\t// \t}\n\t\t\t// \treturn response;\n\t\t\t// })['catch'](function(errRes) {\n\t\t\t// \tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\t// \treturn Promise.reject(errRes);\n\t\t\t// });\n\t\t}\n\t}\n\n\t//Actions for applications list\n\tclass AppsAction {\n\t\tconstructor() {\n\t\t\tthis.endpoint = matter_client__config.serverUrl + '/apps';\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\treturn request__default.post(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\t//Actions for specific application\n\tclass AppAction {\n\t\tconstructor(appName) {\n\t\t\tif (appName) {\n\t\t\t\tthis.name = appName;\n\t\t\t\tthis.endpoint = `${matter_client__config.serverUrl}/apps/${this.name}`;\n\t\t\t} else {\n\t\t\t\tconsole.error('Application name is required to start an AppAction');\n\t\t\t\tthrow new Error('Application name is required to start an AppAction');\n\t\t\t}\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.app().get()] App(s) data loaded:', response);\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.app().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update an application\n\t\tupdate(appData) {\n\t\t\treturn request__default.put(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().update()] App:', response);\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().update()] Error updating app: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete an application\n\t\tdel(appData) {\n\t\t\treturn request__default.delete(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().del()] Apps:', response);\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().del()] Error deleting app: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\tgetFiles() {\n\t\t\treturn this.get().then((app) => {\n\t\t\t\tapp.getFiles().then((filesArray)=> {\n\t\t\t\t\treturn filesArray;\n\t\t\t\t})['catch']((err) => {\n\t\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application files: ', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\n\t\tgetStructure() {\n\t\t\treturn this.get().then((app) => {\n\t\t\t\treturn app.getStructure().then((structure)=> {\n\t\t\t\t\tconsole.log('Structure loaded: ', structure);\n\t\t\t\t\treturn structure;\n\t\t\t\t})['catch']((err) => {\n\t\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application structure: ', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\t}\n\t//Matter Client Class\n\tclass MatterClient {\n\t\t//Signup a new user\n\t\tsignup(signupData) {\n\t\t\treturn request__default.post(matter_client__config.serverUrl + '/signup', signupData)\n\t\t\t.then((response) => {\n\t\t\t  console.log(response);\n\t\t\t  return response;\n\t\t\t})\n\t\t\t['catch']((errRes) => {\n\t\t\t  console.error('[MatterClient.signup()] Error signing up:', errRes);\n\t\t\t  return Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\t//Login a user\n\t\tlogin(loginData) {\n\t\t\tif (!loginData || !loginData.password || !loginData.username) {\n\t\t\t\tconsole.error('Username/Email and Password are required to login.');\n\t\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login.'});\n\t\t\t}\n\t\t\treturn request__default.put(matter_client__config.serverUrl + '/login', loginData)\n\t\t\t.then((response) => {\n\t\t\t\t//TODO: Save token locally\n\t\t\t\tconsole.log('[MatterClient.login()]: Login response: ', response);\n\t\t\t\tmatter_client__token = response.token;\n\t\t\t\tif (window.sessionStorage.getItem(matter_client__config.tokenName) === null) {\n\t\t\t\t\twindow.sessionStorage.setItem(matter_client__config.tokenName, response.token);\n\t\t\t\t\tconsole.log('[MatterClient.login()]: token set to storage:', window.sessionStorage.getItem(matter_client__config.tokenName));\n\t\t\t\t}\n\t\t\t\tsetAuthHeader();\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.login()] Error logging in: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tlogout() {\n\t\t\treturn request__default.put(matter_client__config.serverUrl + '/logout', {\n\t\t\t}).then(function(response) {\n\t\t\t  console.log('[MatterClient.logout()] Logout successful: ', response);\n\t\t\t  if (typeof window != 'undefined' && typeof window.sessionStorage.getItem(matter_client__config.tokenName) != null) {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t}\n\t\t\t\treturn response.body;\n\t\t\t})['catch'](function(errRes) {\n\t\t\t\tif (errRes.status && errRes.status == 401) {\n\t\t\t\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(matter_client__config.tokenName) != null) {\n\t\t\t\t\t\t//Clear session storage\n\t\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.error('[MatterClient.logout()] Error logging out: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tgetCurrentUser() {\n\t\t\t//TODO: Check Current user variable\n\t\t\treturn request__default.get(matter_client__config.serverUrl + '/user', {\n\t\t\t}).then(function(response) {\n\t\t\t\t//TODO: Save user information locally\n\t\t\t\tconsole.log('[MatterClient.getCurrentUser()] Current User:', response);\n\t\t\t\tmatter_client__user = response;\n\t\t\t\treturn matter_client__user;\n\t\t\t})['catch'](function(errRes) {\n\t\t\t\tconsole.error('[MatterClient.getCurrentUser()] Error getting current user: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tgetAuthToken() {\n\t\t\tif (typeof window == 'undefined' || typeof window.sessionStorage.getItem(matter_client__config.tokenName) == 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn window.sessionStorage.getItem(matter_client__config.tokenName);\n\t\t}\n\t\t//TODO: Use getter/setter to make this not a function\n\t\t//Start a new AppsAction\n\t\tapps() {\n\t\t\tconsole.log('New AppsAction:', new AppsAction());\n\t\t\treturn new AppsAction();\n\t\t}\n\t\t//Start a new app action\n\t\tapp(appName) {\n\t\t\tconsole.log('New AppAction:', new AppAction(appName));\n\t\t\treturn new AppAction(appName);\n\t\t}\n\t};\n\n\tclass File {\n\t\tconstructor(fileData) {\n\t\t\tthis.type = 'file';\n\t\t\tthis.path = fileData.path;\n\t\t\tlet pathArray = this.path.split('/');\n\t\t\tthis.name = pathArray[pathArray.length - 1];\n\t\t\tlet re = /(?:\\.([^.]+))?$/;\n\t\t\tthis.ext = re.exec(this.name)[1];\n\t\t\tconsole.log('new file constructed:', this);\n\t\t}\n\t\tgetTypes() {\n\t\t\t//Get content type and file type from extension\n\t\t}\n\t\topen() {\n\t\t\t//TODO:Return file contents\n\t\t}\n\t\topenWithFirepad(divId) {\n\t\t\t//TODO:Create new Firepad instance within div\n\t\t}\n\t\tgetDefaultContent() {\n\n\t\t}\n\t}\n\n\tclass Folder {\n\t\tconstructor(fileData) {\n\t\t\tthis.type = 'folder';\n\t\t\t//TODO: Add path\n\t\t}\n\t}\n\n\tvar matter_client = MatterClient;\n\n\t//------------------ Utility Functions ------------------//\n\n\t// AWS Config\n\tfunction setAWSConfig() {\n\t\tAWS.config.update({\n\t\t  credentials: new AWS.CognitoIdentityCredentials({\n\t\t  IdentityPoolId: matter_client__config.aws.cognito.poolId\n\t\t  }),\n\t\t  region: matter_client__config.aws.region\n\t\t});\n\t}\n\t//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n\t//Examples for two files (index.html and /testFolder/file.js):\n\t//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n\t//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\n\tfunction childrenStructureFromArray(fileArray) {\n\t\t// console.log('childStructureFromArray called:', fileArray);\n\t\t//Create a object for each file that stores the file in the correct 'children' level\n\t\tvar mappedStructure = fileArray.map(function(file) {\n\t\t\treturn buildStructureObject(file);\n\t\t});\n\t\treturn combineLikeObjs(mappedStructure);\n\t}\n\t//Convert file with key into a folder/file children object\n\tfunction buildStructureObject(file) {\n\t\tvar pathArray;\n\t\t// console.log('buildStructureObject with:', file);\n\t\tif (_.has(file, 'path')) {\n\t\t\t//Coming from files already having path (structure)\n\t\t\tpathArray = file.path.split('/');\n\t\t} else {\n\t\t\t//Coming from aws\n\t\t\tpathArray = file.Key.split('/');\n\t\t\t// console.log('file before pick:', file);\n\t\t\tfile = _.pick(file, 'Key');\n\t\t\tfile.path = file.Key;\n\t\t\tfile.name = file.Key;\n\t\t}\n\t\tvar currentObj = file;\n\t\tif (pathArray.length == 1) {\n\t\t\tcurrentObj.name = pathArray[0];\n\t\t\tif (!_.has(currentObj,'type')) {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t}\n\t\t\tcurrentObj.path = pathArray[0];\n\t\t\treturn currentObj;\n\t\t} else {\n\t\t\tvar finalObj = {};\n\t\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = _.first(list, ind + 1).join('/');\n\t\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t\t//TODO: Find out why this works\n\t\t\t\t\tif (ind == 0) {\n\t\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t\t} else {\n\t\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\t\tif (file.$id) {\n\t\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn finalObj;\n\t\t}\n\t}\n\t//Recursivley combine children of object's that have the same names\n\tfunction combineLikeObjs() {\n\t\tvar takenNames = [];\n\t\tvar finishedArray = [];\n\t\t_.each(mappedArray, (obj, ind, list) => {\n\t\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\t\ttakenNames.push(obj.name);\n\t\t\t\tfinishedArray.push(obj);\n\t\t\t} else {\n\t\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t\t//Combine children of like objects\n\t\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t\t// console.log('extended obj:',likeObj);\n\t\t\t}\n\t\t});\n\t\treturn finishedArray;\n\t}\n\n\treturn matter_client;\n\n}));\n","let superagent;\nif (typeof window.superagent == 'undefined') {\n\tconsole.error('Superagent is required to use Matter');\n} else {\n\tsuperagent = window.superagent;\n}\n\n//TODO: Import config from seperate file\nconst config = {\n\tserverUrl: 'http://localhost:4000',\n\ttokenName: 'matter-client'\n};\nlet request = {\n\tget(endpoint, queryData) {\n\t\tvar req = superagent.get(endpoint);\n\t\tif (queryData) {\n\t\t\treq.query(queryData);\n\t\t}\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tpost(endpoint, data) {\n\t\tvar req = superagent.post(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tput(endpoint, data) {\n\t\tvar req = superagent.put(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tdel(endpoint, data) {\n\t\tvar req = superagent.put(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t}\n\n};\n\nexport default request;\n\nfunction handleResponse(req) {\n\treturn new Promise((resolve, reject) => {\n\t\treq.end((err, res) => {\n\t\t\tif (!err) {\n\t\t\t\tconsole.log('Response:', res);\n\t\t\t\treturn resolve(res.body);\n\t\t\t} else {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t});\n\t});\n}\nfunction addAuthHeader(req) {\n\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config.tokenName)) {\n\t\treq = req.set('Authorization', 'Bearer ' + sessionStorage.getItem(config.tokenName));\n\t\tconsole.log('Set auth header');\n\t}\n\treturn req;\n}\n","import Firebase from 'firebase';\nimport AWS from 'aws-sdk';\nimport request from './utils/request';\nimport _ from 'underscore';\nlet user;\nlet token;\nconst config = {\n\tserverUrl: 'http://localhost:4000',\n\ttokenName: 'matter-client',\n\tfbUrl: 'https://pruvit.firebaseio.com/',\n\taws: {\n\t\tregion: 'us-east-1',\n\t\tcognito: {\n\t\t\tpoolId: 'us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982',\n\t\t\tparams: {\n\t\t\t\tRoleArn: 'arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1'\n\t\t\t}\n\t\t}\n\t}\n};\n\nif (typeof Firebase == 'undefined') {\n\tconsole.error('Firebase is required to use Matter');\n}\nif (typeof AWS == 'undefined') {\n\tconsole.error('AWS is required to use Matter');\n}\nif (typeof _ == 'undefined') {\n\tconsole.error('Underscore is required to use Matter');\n}\nif (typeof request == 'undefined') {\n\tconsole.error('Request is required to use Matter');\n}\n/**\n * Application class.\n *\n */\nclass Application {\n\tconstructor(appData) {\n\t\tthis.name = appData.name;\n\t\tthis.owner = appData.owner || null;\n\t\tthis.collaborators = appData.collaborators || [];\n\t\tthis.createdAt = appData.createdAt;\n\t\tthis.updatedAt = appData.updatedAt;\n\t\tthis.frontend = appData.frontend || {};\n\t\tthis.backend = appData.backend || {};\n\t\tif (Firebase) {\n\t\t\tthis.fbRef = new Firebase(config.fbUrl + appData.name);\n\t\t}\n\t}\n\t//Get files list and convert to structure\n\tgetStructure() {\n\t\treturn this.getFiles().then((filesArray) => {\n\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\tconsole.log('Child struct from array:', childStruct);\n\t\t\treturn childStruct;\n\t\t}, (err) => {\n\t\t\tconsole.error('[Application.getStructure] Error getting files: ', err);\n\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t});\n\t}\n\t//Get files list from S3\n\tgetFiles() {\n\t\tif (!this.frontend) {\n\t\t\tconsole.error('[Applicaiton.getFiles] Attempting to get objects for bucket without name.');\n\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t} else {\n\t\t\t//If AWS Credential do not exist, set them\n\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t// console.info('AWS creds are being updated to make request');\n\t\t\t\tsetAWSConfig();\n\t\t\t}\n\t\t\tvar s3 = new AWS.S3();\n\t\t\tvar listParams = {Bucket: bucketName};\n\t\t\treturn s3.listObjects(listParams, function(err, data) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log('[Application.getObjects()] listObjects returned:', data);\n\t\t\t\t\treturn Promise.resolve(data.Contents);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('[Application.getObjects()] Error listing objects:', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\tpublishFile(fileData) {\n\t\tif (!this.frontend) {\n\t\t\tconsole.error('Frontend data not available. Make sure to call .get().');\n\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t}\n\t\tvar saveParams = {Bucket: this.frontent.bucketName, Key: fileData.key,  Body: fileData.content, ACL: 'public-read'};\n\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\tif (fileData.contentType) {\n\t\t\tsaveParams.ContentType = fileData.contentType;\n\t\t}\n\t\t// console.log('[$aws.$saveFiles] saveParams:', saveParams);\n\t\treturn s3.putObject(saveParams, function(err, data) {\n\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\tif (!err) {\n\t\t\t\tconsole.log('[Application.publishFile()] file saved successfully. Returning:', data);\n\t\t\t\treturn data;\n\t\t\t}\telse {\n\t\t\t\tconsole.error('[Application.publishFile()] Error saving file:', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t}\n\t\t});\n\t}\n\taddStorage() {\n\t\t//TODO:Add storage bucket\n\t\tvar endpoint = config.serverUrl + '/apps/' + this.name + '/storage';\n\t\treturn request.post(endpoint, appData).then((response) => {\n\t\t\tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\tapplyTemplate() {\n\t\tvar endpoint = config.serverUrl + '/apps/' + this.name + '/template';\n\t\tconsole.log('Applying templates to existing');\n\t\t// return request.post(endpoint, appData).then(function(response) {\n\t\t// \tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t// \tif (!apps.isList) {\n\t\t// \t\treturn new Application(response);\n\t\t// \t}\n\t\t// \treturn response;\n\t\t// })['catch'](function(errRes) {\n\t\t// \tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t// \treturn Promise.reject(errRes);\n\t\t// });\n\t}\n}\n\n//Actions for applications list\nclass AppsAction {\n\tconstructor() {\n\t\tthis.endpoint = config.serverUrl + '/apps';\n\t}\n\t//Get applications or single application\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Add an application\n\tadd(appData) {\n\t\treturn request.post(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n}\n//Actions for specific application\nclass AppAction {\n\tconstructor(appName) {\n\t\tif (appName) {\n\t\t\tthis.name = appName;\n\t\t\tthis.endpoint = `${config.serverUrl}/apps/${this.name}`;\n\t\t} else {\n\t\t\tconsole.error('Application name is required to start an AppAction');\n\t\t\tthrow new Error('Application name is required to start an AppAction');\n\t\t}\n\t}\n\t//Get applications or single application\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.app().get()] App(s) data loaded:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.app().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Update an application\n\tupdate(appData) {\n\t\treturn request.put(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().update()] App:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().update()] Error updating app: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Delete an application\n\tdel(appData) {\n\t\treturn request.delete(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().del()] Apps:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().del()] Error deleting app: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\tgetFiles() {\n\t\treturn this.get().then((app) => {\n\t\t\tapp.getFiles().then((filesArray)=> {\n\t\t\t\treturn filesArray;\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application files: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t})['catch']((err) => {\n\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application: ', err);\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n\n\tgetStructure() {\n\t\treturn this.get().then((app) => {\n\t\t\treturn app.getStructure().then((structure)=> {\n\t\t\t\tconsole.log('Structure loaded: ', structure);\n\t\t\t\treturn structure;\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application structure: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t})['catch']((err) => {\n\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application: ', err);\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n}\n//Matter Client Class\nclass MatterClient {\n\t//Signup a new user\n\tsignup(signupData) {\n\t\treturn request.post(config.serverUrl + '/signup', signupData)\n\t\t.then((response) => {\n\t\t  console.log(response);\n\t\t  return response;\n\t\t})\n\t\t['catch']((errRes) => {\n\t\t  console.error('[MatterClient.signup()] Error signing up:', errRes);\n\t\t  return Promise.reject(errRes);\n\t\t});\n\t}\n\n\t//Login a user\n\tlogin(loginData) {\n\t\tif (!loginData || !loginData.password || !loginData.username) {\n\t\t\tconsole.error('Username/Email and Password are required to login.');\n\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login.'});\n\t\t}\n\t\treturn request.put(config.serverUrl + '/login', loginData)\n\t\t.then((response) => {\n\t\t\t//TODO: Save token locally\n\t\t\tconsole.log('[MatterClient.login()]: Login response: ', response);\n\t\t\ttoken = response.token;\n\t\t\tif (window.sessionStorage.getItem(config.tokenName) === null) {\n\t\t\t\twindow.sessionStorage.setItem(config.tokenName, response.token);\n\t\t\t\tconsole.log('[MatterClient.login()]: token set to storage:', window.sessionStorage.getItem(config.tokenName));\n\t\t\t}\n\t\t\tsetAuthHeader();\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.login()] Error logging in: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tlogout() {\n\t\treturn request.put(config.serverUrl + '/logout', {\n\t\t}).then(function(response) {\n\t\t  console.log('[MatterClient.logout()] Logout successful: ', response);\n\t\t  if (typeof window != 'undefined' && typeof window.sessionStorage.getItem(config.tokenName) != null) {\n\t\t\t\t//Clear session storage\n\t\t\t\twindow.sessionStorage.clear();\n\t\t\t}\n\t\t\treturn response.body;\n\t\t})['catch'](function(errRes) {\n\t\t\tif (errRes.status && errRes.status == 401) {\n\t\t\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config.tokenName) != null) {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.error('[MatterClient.logout()] Error logging out: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tgetCurrentUser() {\n\t\t//TODO: Check Current user variable\n\t\treturn request.get(config.serverUrl + '/user', {\n\t\t}).then(function(response) {\n\t\t\t//TODO: Save user information locally\n\t\t\tconsole.log('[MatterClient.getCurrentUser()] Current User:', response);\n\t\t\tuser = response;\n\t\t\treturn user;\n\t\t})['catch'](function(errRes) {\n\t\t\tconsole.error('[MatterClient.getCurrentUser()] Error getting current user: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tgetAuthToken() {\n\t\tif (typeof window == 'undefined' || typeof window.sessionStorage.getItem(config.tokenName) == 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\treturn window.sessionStorage.getItem(config.tokenName);\n\t}\n\t//TODO: Use getter/setter to make this not a function\n\t//Start a new AppsAction\n\tapps() {\n\t\tconsole.log('New AppsAction:', new AppsAction());\n\t\treturn new AppsAction();\n\t}\n\t//Start a new app action\n\tapp(appName) {\n\t\tconsole.log('New AppAction:', new AppAction(appName));\n\t\treturn new AppAction(appName);\n\t}\n};\n\nclass File {\n\tconstructor(fileData) {\n\t\tthis.type = 'file';\n\t\tthis.path = fileData.path;\n\t\tlet pathArray = this.path.split('/');\n\t\tthis.name = pathArray[pathArray.length - 1];\n\t\tlet re = /(?:\\.([^.]+))?$/;\n\t\tthis.ext = re.exec(this.name)[1];\n\t\tconsole.log('new file constructed:', this);\n\t}\n\tgetTypes() {\n\t\t//Get content type and file type from extension\n\t}\n\topen() {\n\t\t//TODO:Return file contents\n\t}\n\topenWithFirepad(divId) {\n\t\t//TODO:Create new Firepad instance within div\n\t}\n\tgetDefaultContent() {\n\n\t}\n}\n\nclass Folder {\n\tconstructor(fileData) {\n\t\tthis.type = 'folder';\n\t\t//TODO: Add path\n\t}\n}\n\nexport default MatterClient;\n\n//------------------ Utility Functions ------------------//\n\n// AWS Config\nfunction setAWSConfig() {\n\tAWS.config.update({\n\t  credentials: new AWS.CognitoIdentityCredentials({\n\t  IdentityPoolId: config.aws.cognito.poolId\n\t  }),\n\t  region: config.aws.region\n\t});\n}\n//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n//Examples for two files (index.html and /testFolder/file.js):\n//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\nfunction childrenStructureFromArray(fileArray) {\n\t// console.log('childStructureFromArray called:', fileArray);\n\t//Create a object for each file that stores the file in the correct 'children' level\n\tvar mappedStructure = fileArray.map(function(file) {\n\t\treturn buildStructureObject(file);\n\t});\n\treturn combineLikeObjs(mappedStructure);\n}\n//Convert file with key into a folder/file children object\nfunction buildStructureObject(file) {\n\tvar pathArray;\n\t// console.log('buildStructureObject with:', file);\n\tif (_.has(file, 'path')) {\n\t\t//Coming from files already having path (structure)\n\t\tpathArray = file.path.split('/');\n\t} else {\n\t\t//Coming from aws\n\t\tpathArray = file.Key.split('/');\n\t\t// console.log('file before pick:', file);\n\t\tfile = _.pick(file, 'Key');\n\t\tfile.path = file.Key;\n\t\tfile.name = file.Key;\n\t}\n\tvar currentObj = file;\n\tif (pathArray.length == 1) {\n\t\tcurrentObj.name = pathArray[0];\n\t\tif (!_.has(currentObj,'type')) {\n\t\t\tcurrentObj.type = 'file';\n\t\t}\n\t\tcurrentObj.path = pathArray[0];\n\t\treturn currentObj;\n\t} else {\n\t\tvar finalObj = {};\n\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\tcurrentObj.name = loc;\n\t\t\t\tcurrentObj.path = _.first(list, ind + 1).join('/');\n\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t//TODO: Find out why this works\n\t\t\t\tif (ind == 0) {\n\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t}\n\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t} else {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\tcurrentObj.name = loc;\n\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\tif (file.$id) {\n\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn finalObj;\n\t}\n}\n//Recursivley combine children of object's that have the same names\nfunction combineLikeObjs() {\n\tvar takenNames = [];\n\tvar finishedArray = [];\n\t_.each(mappedArray, (obj, ind, list) => {\n\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\ttakenNames.push(obj.name);\n\t\t\tfinishedArray.push(obj);\n\t\t} else {\n\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t//Combine children of like objects\n\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t// console.log('extended obj:',likeObj);\n\t\t}\n\t});\n\treturn finishedArray;\n}\n\n"],"sourceRoot":"/source/"}