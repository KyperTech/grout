{"version":3,"sources":["matter-client.min.js","/source/matter-client.js","/source/src/utils/request.js","/source/src/classes/Application.js","/source/src/config.js","/source/src/classes/AppsAction.js","/source/src/classes/AppAction.js","/source/src/matter-client.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","require","define","amd","MatterClient","Firebase","AWS","superagent","_","this","handleResponse","req","Promise","resolve","reject","end","err","res","body","addAuthHeader","window","sessionStorage","getItem","config__default","tokenName","set","setAWSConfig","config","update","credentials","CognitoIdentityCredentials","IdentityPoolId","aws","cognito","poolId","region","childrenStructureFromArray","fileArray","mappedStructure","map","file","buildStructureObject","combineLikeObjs","pathArray","has","path","split","Key","pick","name","currentObj","type","finalObj","each","loc","ind","list","first","join","children","$id","takenNames","finishedArray","mappedArray","obj","indexOf","push","likeObj","findWhere","union","config__config","serverUrl","fbUrl","params","RoleArn","location","hostname","request__requester","undefined","console","error","request__request","get","endpoint","queryData","query","post","data","send","put","del","request__default","AppsAction","value","then","response","log","errRes","appData","Application","Application__Application","owner","collaborators","createdAt","updatedAt","frontend","backend","fbRef","getFiles","filesArray","childStruct","message","s3","S3","listParams","Bucket","bucketName","listObjects","Contents","fileData","saveParams","frontent","Body","content","ACL","contentType","ContentType","putObject","Application__default","AppAction","appName","Error","app","getStructure","structure","matter_client__user","matter_client__token","signupData","loginData","password","username","token","setItem","clear","status","matter_client"],"mappings":"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","file":"matter-client.min.js","sourcesContent":[null,"(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('firebase'), require('aws-sdk'), require('superagent'), require('underscore')) :\n\ttypeof define === 'function' && define.amd ? define(['firebase', 'aws-sdk', 'superagent', 'underscore'], factory) :\n\tglobal.MatterClient = factory(global.Firebase, global.AWS, global.superagent, global._)\n}(this, function (Firebase, AWS, superagent, _) { 'use strict';\n\n\tlet config__config = {\n\t\tserverUrl: 'hypercube.elasticbeanstalk.com',\n\t\ttokenName: 'matter-client',\n\t\tfbUrl: 'https://pruvit.firebaseio.com/',\n\t\taws: {\n\t\t\tregion: 'us-east-1',\n\t\t\tcognito: {\n\t\t\t\tpoolId: 'us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982',\n\t\t\t\tparams: {\n\t\t\t\t\tRoleArn: 'arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t//Set server to local server if developing\n\tif (typeof window != 'undefined' && (window.location.hostname == '' || window.location.hostname == 'localhost')) {\n\t\tconfig__config.serverUrl = 'http://localhost:4000';\n\t}\n\tvar config__default = config__config;\n\n\tlet request__requester;\n\tif (typeof window == 'undefined') { //Node Mode\n\t\trequest__requester = superagent;\n\t} else if (typeof window.superagent == 'undefined') {\n\t\tconsole.error('Superagent is required to use Matter');\n\t} else { //Browser mode\n\t\trequest__requester = window.superagent;\n\t}\n\n\tlet request__request = {\n\t\tget(endpoint, queryData) {\n\t\t\tvar req = request__requester.get(endpoint);\n\t\t\tif (queryData) {\n\t\t\t\treq.query(queryData);\n\t\t\t}\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tpost(endpoint, data) {\n\t\t\tvar req = request__requester.post(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tput(endpoint, data) {\n\t\t\tvar req = request__requester.put(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tdel(endpoint, data) {\n\t\t\tvar req = request__requester.put(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t}\n\n\t};\n\n\tvar request__default = request__request;\n\n\tfunction handleResponse(req) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treq.end((err, res) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\t// console.log('Response:', res);\n\t\t\t\t\treturn resolve(res.body);\n\t\t\t\t} else {\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tfunction addAuthHeader(req) {\n\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config__default.tokenName)) {\n\t\t\treq = req.set('Authorization', 'Bearer ' + sessionStorage.getItem(config__default.tokenName));\n\t\t\t// console.log('Set auth header');\n\t\t}\n\t\treturn req;\n\t}\n\n\tclass AppsAction {\n\t\tconstructor() {\n\t\t\tthis.endpoint = config__default.serverUrl + '/apps';\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\treturn request__default.post(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tclass Application__Application {\n\t\tconstructor(appData) {\n\t\t\tthis.name = appData.name;\n\t\t\tthis.owner = appData.owner || null;\n\t\t\tthis.collaborators = appData.collaborators || [];\n\t\t\tthis.createdAt = appData.createdAt;\n\t\t\tthis.updatedAt = appData.updatedAt;\n\t\t\tthis.frontend = appData.frontend || {};\n\t\t\tthis.backend = appData.backend || {};\n\t\t\tif (Firebase) {\n\t\t\t\tthis.fbRef = new Firebase(config__default.fbUrl + appData.name);\n\t\t\t}\n\t\t}\n\t\t//Get files list and convert to structure\n\t\tgetStructure() {\n\t\t\treturn this.getFiles().then((filesArray) => {\n\t\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\t\tconsole.log('Child struct from array:', childStruct);\n\t\t\t\treturn childStruct;\n\t\t\t}, (err) => {\n\t\t\t\tconsole.error('[Application.getStructure] Error getting files: ', err);\n\t\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t\t});\n\t\t}\n\t\t//Get files list from S3\n\t\tgetFiles() {\n\t\t\tif (!this.frontend) {\n\t\t\t\tconsole.error('[Applicaiton.getFiles] Attempting to get objects for bucket without name.');\n\t\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t// console.info('AWS creds are being updated to make request');\n\t\t\t\t\tsetAWSConfig();\n\t\t\t\t}\n\t\t\t\tvar s3 = new AWS.S3();\n\t\t\t\tvar listParams = {Bucket: bucketName};\n\t\t\t\treturn s3.listObjects(listParams, function(err, data) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tconsole.log('[Application.getObjects()] listObjects returned:', data);\n\t\t\t\t\t\treturn Promise.resolve(data.Contents);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('[Application.getObjects()] Error listing objects:', err);\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tpublishFile(fileData) {\n\t\t\tif (!this.frontend) {\n\t\t\t\tconsole.error('Frontend data not available. Make sure to call .get().');\n\t\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t\t}\n\t\t\tvar saveParams = {Bucket: this.frontent.bucketName, Key: fileData.key,  Body: fileData.content, ACL: 'public-read'};\n\t\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\t\tif (fileData.contentType) {\n\t\t\t\tsaveParams.ContentType = fileData.contentType;\n\t\t\t}\n\t\t\t// console.log('[$aws.$saveFiles] saveParams:', saveParams);\n\t\t\treturn s3.putObject(saveParams, function(err, data) {\n\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log('[Application.publishFile()] file saved successfully. Returning:', data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\telse {\n\t\t\t\t\tconsole.error('[Application.publishFile()] Error saving file:', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\taddStorage() {\n\t\t\t//TODO:Add storage bucket\n\t\t\tvar endpoint = config__default.serverUrl + '/apps/' + this.name + '/storage';\n\t\t\treturn request__default.post(endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\t\treturn new Application__Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\tapplyTemplate() {\n\t\t\tvar endpoint = config__default.serverUrl + '/apps/' + this.name + '/template';\n\t\t\tconsole.log('Applying templates to existing');\n\t\t\t// return request.post(endpoint, appData).then(function(response) {\n\t\t\t// \tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\t// \tif (!apps.isList) {\n\t\t\t// \t\treturn new Application(response);\n\t\t\t// \t}\n\t\t\t// \treturn response;\n\t\t\t// })['catch'](function(errRes) {\n\t\t\t// \tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\t// \treturn Promise.reject(errRes);\n\t\t\t// });\n\t\t}\n\t}\n\n\tvar Application__default = Application__Application;\n\n\t//------------------ Utility Functions ------------------//\n\n\t// AWS Config\n\tfunction setAWSConfig() {\n\t\tAWS.config.update({\n\t\t  credentials: new AWS.CognitoIdentityCredentials({\n\t\t  IdentityPoolId: config__default.aws.cognito.poolId\n\t\t  }),\n\t\t  region: config__default.aws.region\n\t\t});\n\t}\n\n\t//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n\t//Examples for two files (index.html and /testFolder/file.js):\n\t//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n\t//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\n\tfunction childrenStructureFromArray(fileArray) {\n\t\t// console.log('childStructureFromArray called:', fileArray);\n\t\t//Create a object for each file that stores the file in the correct 'children' level\n\t\tvar mappedStructure = fileArray.map(function(file) {\n\t\t\treturn buildStructureObject(file);\n\t\t});\n\t\treturn combineLikeObjs(mappedStructure);\n\t}\n\t//Convert file with key into a folder/file children object\n\tfunction buildStructureObject(file) {\n\t\tvar pathArray;\n\t\t// console.log('buildStructureObject with:', file);\n\t\tif (_.has(file, 'path')) {\n\t\t\t//Coming from files already having path (structure)\n\t\t\tpathArray = file.path.split('/');\n\t\t} else {\n\t\t\t//Coming from aws\n\t\t\tpathArray = file.Key.split('/');\n\t\t\t// console.log('file before pick:', file);\n\t\t\tfile = _.pick(file, 'Key');\n\t\t\tfile.path = file.Key;\n\t\t\tfile.name = file.Key;\n\t\t}\n\t\tvar currentObj = file;\n\t\tif (pathArray.length == 1) {\n\t\t\tcurrentObj.name = pathArray[0];\n\t\t\tif (!_.has(currentObj,'type')) {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t}\n\t\t\tcurrentObj.path = pathArray[0];\n\t\t\treturn currentObj;\n\t\t} else {\n\t\t\tvar finalObj = {};\n\t\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = _.first(list, ind + 1).join('/');\n\t\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t\t//TODO: Find out why this works\n\t\t\t\t\tif (ind == 0) {\n\t\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t\t} else {\n\t\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\t\tif (file.$id) {\n\t\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn finalObj;\n\t\t}\n\t}\n\t//Recursivley combine children of object's that have the same names\n\tfunction combineLikeObjs() {\n\t\tvar takenNames = [];\n\t\tvar finishedArray = [];\n\t\t_.each(mappedArray, (obj, ind, list) => {\n\t\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\t\ttakenNames.push(obj.name);\n\t\t\t\tfinishedArray.push(obj);\n\t\t\t} else {\n\t\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t\t//Combine children of like objects\n\t\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t\t// console.log('extended obj:',likeObj);\n\t\t\t}\n\t\t});\n\t\treturn finishedArray;\n\t}\n\n\tclass AppAction {\n\t\tconstructor(appName) {\n\t\t\tif (appName) {\n\t\t\t\tthis.name = appName;\n\t\t\t\tthis.endpoint = `${config__default.serverUrl}/apps/${this.name}`;\n\t\t\t} else {\n\t\t\t\tconsole.error('Application name is required to start an AppAction');\n\t\t\t\tthrow new Error('Application name is required to start an AppAction');\n\t\t\t}\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.app().get()] App(s) data loaded:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.app().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update an application\n\t\tupdate(appData) {\n\t\t\treturn request__default.put(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().update()] App:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().update()] Error updating app: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete an application\n\t\tdel(appData) {\n\t\t\treturn request__default.delete(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().del()] Apps:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().del()] Error deleting app: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\tgetFiles() {\n\t\t\treturn this.get().then((app) => {\n\t\t\t\tapp.getFiles().then((filesArray)=> {\n\t\t\t\t\treturn filesArray;\n\t\t\t\t})['catch']((err) => {\n\t\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application files: ', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\n\t\tgetStructure() {\n\t\t\treturn this.get().then((app) => {\n\t\t\t\treturn app.getStructure().then((structure)=> {\n\t\t\t\t\tconsole.log('Structure loaded: ', structure);\n\t\t\t\t\treturn structure;\n\t\t\t\t})['catch']((err) => {\n\t\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application structure: ', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet matter_client__user;\n\tlet matter_client__token;\n\n\tif (typeof Firebase == 'undefined') {\n\t\tconsole.error('Firebase is required to use Matter');\n\t}\n\tif (typeof AWS == 'undefined') {\n\t\tconsole.error('AWS is required to use Matter');\n\t}\n\tif (typeof _ == 'undefined') {\n\t\tconsole.error('Underscore is required to use Matter');\n\t}\n\tif (typeof request__default == 'undefined') {\n\t\tconsole.error('Request is required to use Matter');\n\t}\n\n\t//Matter Client Class\n\tclass MatterClient {\n\t\t//Signup a new user\n\t\tsignup(signupData) {\n\t\t\treturn request__default.post(config__default.serverUrl + '/signup', signupData)\n\t\t\t.then((response) => {\n\t\t\t  console.log(response);\n\t\t\t  return response;\n\t\t\t})\n\t\t\t['catch']((errRes) => {\n\t\t\t  console.error('[MatterClient.signup()] Error signing up:', errRes);\n\t\t\t  return Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\t//Login a user\n\t\tlogin(loginData) {\n\t\t\tif (!loginData || !loginData.password || !loginData.username) {\n\t\t\t\tconsole.error('Username/Email and Password are required to login.');\n\t\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login.'});\n\t\t\t}\n\t\t\treturn request__default.put(config__default.serverUrl + '/login', loginData)\n\t\t\t.then((response) => {\n\t\t\t\t//TODO: Save token locally\n\t\t\t\tconsole.log('[MatterClient.login()]: Login response: ', response);\n\t\t\t\tmatter_client__token = response.token;\n\t\t\t\tif (window.sessionStorage.getItem(config__default.tokenName) === null) {\n\t\t\t\t\twindow.sessionStorage.setItem(config__default.tokenName, response.token);\n\t\t\t\t\tconsole.log('[MatterClient.login()]: token set to storage:', window.sessionStorage.getItem(config__default.tokenName));\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.login()] Error logging in: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tlogout() {\n\t\t\treturn request__default.put(config__default.serverUrl + '/logout', {\n\t\t\t}).then(function(response) {\n\t\t\t  console.log('[MatterClient.logout()] Logout successful: ', response);\n\t\t\t  if (typeof window != 'undefined' && typeof window.sessionStorage.getItem(config__default.tokenName) != null) {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t}\n\t\t\t\treturn response.body;\n\t\t\t})['catch'](function(errRes) {\n\t\t\t\tif (errRes.status && errRes.status == 401) {\n\t\t\t\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config__default.tokenName) != null) {\n\t\t\t\t\t\t//Clear session storage\n\t\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.error('[MatterClient.logout()] Error logging out: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tgetCurrentUser() {\n\t\t\t//TODO: Check Current user variable\n\t\t\treturn request__default.get(config__default.serverUrl + '/user', {\n\t\t\t}).then(function(response) {\n\t\t\t\t//TODO: Save user information locally\n\t\t\t\tconsole.log('[MatterClient.getCurrentUser()] Current User:', response);\n\t\t\t\tmatter_client__user = response;\n\t\t\t\treturn matter_client__user;\n\t\t\t})['catch'](function(errRes) {\n\t\t\t\tconsole.error('[MatterClient.getCurrentUser()] Error getting current user: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tgetAuthToken() {\n\t\t\tif (typeof window == 'undefined' || typeof window.sessionStorage.getItem(config__default.tokenName) == 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn window.sessionStorage.getItem(config__default.tokenName);\n\t\t}\n\t\t//TODO: Use getter/setter to make this not a function\n\t\t//Start a new AppsAction\n\t\tget apps() {\n\t\t\tconsole.log('New AppsAction:', new AppsAction());\n\t\t\treturn new AppsAction();\n\t\t}\n\t\t//Start a new app action\n\t\tapp(appName) {\n\t\t\tconsole.log('New AppAction:', new AppAction(appName));\n\t\t\treturn new AppAction(appName);\n\t\t}\n\t};\n\n\tvar matter_client = MatterClient;\n\n\treturn matter_client;\n\n}));\n","import config from '../config';\nimport superagent from 'superagent';\n\nlet requester;\nif (typeof window == 'undefined') { //Node Mode\n\trequester = superagent;\n} else if (typeof window.superagent == 'undefined') {\n\tconsole.error('Superagent is required to use Matter');\n} else { //Browser mode\n\trequester = window.superagent;\n}\n\nlet request = {\n\tget(endpoint, queryData) {\n\t\tvar req = requester.get(endpoint);\n\t\tif (queryData) {\n\t\t\treq.query(queryData);\n\t\t}\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tpost(endpoint, data) {\n\t\tvar req = requester.post(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tput(endpoint, data) {\n\t\tvar req = requester.put(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tdel(endpoint, data) {\n\t\tvar req = requester.put(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t}\n\n};\n\nexport default request;\n\nfunction handleResponse(req) {\n\treturn new Promise((resolve, reject) => {\n\t\treq.end((err, res) => {\n\t\t\tif (!err) {\n\t\t\t\t// console.log('Response:', res);\n\t\t\t\treturn resolve(res.body);\n\t\t\t} else {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t});\n\t});\n}\nfunction addAuthHeader(req) {\n\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config.tokenName)) {\n\t\treq = req.set('Authorization', 'Bearer ' + sessionStorage.getItem(config.tokenName));\n\t\t// console.log('Set auth header');\n\t}\n\treturn req;\n}\n","import config from '../config';\nimport request from '../utils/request';\nimport Firebase from 'firebase';\nimport _ from 'underscore';\n\n/**\n * Application class.\n *\n */\nclass Application {\n\tconstructor(appData) {\n\t\tthis.name = appData.name;\n\t\tthis.owner = appData.owner || null;\n\t\tthis.collaborators = appData.collaborators || [];\n\t\tthis.createdAt = appData.createdAt;\n\t\tthis.updatedAt = appData.updatedAt;\n\t\tthis.frontend = appData.frontend || {};\n\t\tthis.backend = appData.backend || {};\n\t\tif (Firebase) {\n\t\t\tthis.fbRef = new Firebase(config.fbUrl + appData.name);\n\t\t}\n\t}\n\t//Get files list and convert to structure\n\tgetStructure() {\n\t\treturn this.getFiles().then((filesArray) => {\n\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\tconsole.log('Child struct from array:', childStruct);\n\t\t\treturn childStruct;\n\t\t}, (err) => {\n\t\t\tconsole.error('[Application.getStructure] Error getting files: ', err);\n\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t});\n\t}\n\t//Get files list from S3\n\tgetFiles() {\n\t\tif (!this.frontend) {\n\t\t\tconsole.error('[Applicaiton.getFiles] Attempting to get objects for bucket without name.');\n\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t} else {\n\t\t\t//If AWS Credential do not exist, set them\n\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t// console.info('AWS creds are being updated to make request');\n\t\t\t\tsetAWSConfig();\n\t\t\t}\n\t\t\tvar s3 = new AWS.S3();\n\t\t\tvar listParams = {Bucket: bucketName};\n\t\t\treturn s3.listObjects(listParams, function(err, data) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log('[Application.getObjects()] listObjects returned:', data);\n\t\t\t\t\treturn Promise.resolve(data.Contents);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('[Application.getObjects()] Error listing objects:', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\tpublishFile(fileData) {\n\t\tif (!this.frontend) {\n\t\t\tconsole.error('Frontend data not available. Make sure to call .get().');\n\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t}\n\t\tvar saveParams = {Bucket: this.frontent.bucketName, Key: fileData.key,  Body: fileData.content, ACL: 'public-read'};\n\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\tif (fileData.contentType) {\n\t\t\tsaveParams.ContentType = fileData.contentType;\n\t\t}\n\t\t// console.log('[$aws.$saveFiles] saveParams:', saveParams);\n\t\treturn s3.putObject(saveParams, function(err, data) {\n\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\tif (!err) {\n\t\t\t\tconsole.log('[Application.publishFile()] file saved successfully. Returning:', data);\n\t\t\t\treturn data;\n\t\t\t}\telse {\n\t\t\t\tconsole.error('[Application.publishFile()] Error saving file:', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t}\n\t\t});\n\t}\n\taddStorage() {\n\t\t//TODO:Add storage bucket\n\t\tvar endpoint = config.serverUrl + '/apps/' + this.name + '/storage';\n\t\treturn request.post(endpoint, appData).then((response) => {\n\t\t\tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\tapplyTemplate() {\n\t\tvar endpoint = config.serverUrl + '/apps/' + this.name + '/template';\n\t\tconsole.log('Applying templates to existing');\n\t\t// return request.post(endpoint, appData).then(function(response) {\n\t\t// \tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t// \tif (!apps.isList) {\n\t\t// \t\treturn new Application(response);\n\t\t// \t}\n\t\t// \treturn response;\n\t\t// })['catch'](function(errRes) {\n\t\t// \tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t// \treturn Promise.reject(errRes);\n\t\t// });\n\t}\n}\n\nexport default Application;\n\n//------------------ Utility Functions ------------------//\n\n// AWS Config\nfunction setAWSConfig() {\n\tAWS.config.update({\n\t  credentials: new AWS.CognitoIdentityCredentials({\n\t  IdentityPoolId: config.aws.cognito.poolId\n\t  }),\n\t  region: config.aws.region\n\t});\n}\n\n//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n//Examples for two files (index.html and /testFolder/file.js):\n//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\nfunction childrenStructureFromArray(fileArray) {\n\t// console.log('childStructureFromArray called:', fileArray);\n\t//Create a object for each file that stores the file in the correct 'children' level\n\tvar mappedStructure = fileArray.map(function(file) {\n\t\treturn buildStructureObject(file);\n\t});\n\treturn combineLikeObjs(mappedStructure);\n}\n//Convert file with key into a folder/file children object\nfunction buildStructureObject(file) {\n\tvar pathArray;\n\t// console.log('buildStructureObject with:', file);\n\tif (_.has(file, 'path')) {\n\t\t//Coming from files already having path (structure)\n\t\tpathArray = file.path.split('/');\n\t} else {\n\t\t//Coming from aws\n\t\tpathArray = file.Key.split('/');\n\t\t// console.log('file before pick:', file);\n\t\tfile = _.pick(file, 'Key');\n\t\tfile.path = file.Key;\n\t\tfile.name = file.Key;\n\t}\n\tvar currentObj = file;\n\tif (pathArray.length == 1) {\n\t\tcurrentObj.name = pathArray[0];\n\t\tif (!_.has(currentObj,'type')) {\n\t\t\tcurrentObj.type = 'file';\n\t\t}\n\t\tcurrentObj.path = pathArray[0];\n\t\treturn currentObj;\n\t} else {\n\t\tvar finalObj = {};\n\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\tcurrentObj.name = loc;\n\t\t\t\tcurrentObj.path = _.first(list, ind + 1).join('/');\n\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t//TODO: Find out why this works\n\t\t\t\tif (ind == 0) {\n\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t}\n\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t} else {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\tcurrentObj.name = loc;\n\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\tif (file.$id) {\n\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn finalObj;\n\t}\n}\n//Recursivley combine children of object's that have the same names\nfunction combineLikeObjs() {\n\tvar takenNames = [];\n\tvar finishedArray = [];\n\t_.each(mappedArray, (obj, ind, list) => {\n\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\ttakenNames.push(obj.name);\n\t\t\tfinishedArray.push(obj);\n\t\t} else {\n\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t//Combine children of like objects\n\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t// console.log('extended obj:',likeObj);\n\t\t}\n\t});\n\treturn finishedArray;\n}\n","let config = {\n\tserverUrl: 'hypercube.elasticbeanstalk.com',\n\ttokenName: 'matter-client',\n\tfbUrl: 'https://pruvit.firebaseio.com/',\n\taws: {\n\t\tregion: 'us-east-1',\n\t\tcognito: {\n\t\t\tpoolId: 'us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982',\n\t\t\tparams: {\n\t\t\t\tRoleArn: 'arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1'\n\t\t\t}\n\t\t}\n\t}\n};\n//Set server to local server if developing\nif (typeof window != 'undefined' && (window.location.hostname == '' || window.location.hostname == 'localhost')) {\n\tconfig.serverUrl = 'http://localhost:4000';\n}\nexport default config;\n","import config from '../config';\nimport request from '../utils/request';\n\n//Actions for applications list\nclass AppsAction {\n\tconstructor() {\n\t\tthis.endpoint = config.serverUrl + '/apps';\n\t}\n\t//Get applications or single application\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Add an application\n\tadd(appData) {\n\t\treturn request.post(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n}\nexport default AppsAction;\n","import config from '../config';\nimport request from '../utils/request';\nimport Application from './Application';\n\n//Actions for specific application\nclass AppAction {\n\tconstructor(appName) {\n\t\tif (appName) {\n\t\t\tthis.name = appName;\n\t\t\tthis.endpoint = `${config.serverUrl}/apps/${this.name}`;\n\t\t} else {\n\t\t\tconsole.error('Application name is required to start an AppAction');\n\t\t\tthrow new Error('Application name is required to start an AppAction');\n\t\t}\n\t}\n\t//Get applications or single application\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.app().get()] App(s) data loaded:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.app().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Update an application\n\tupdate(appData) {\n\t\treturn request.put(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().update()] App:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().update()] Error updating app: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Delete an application\n\tdel(appData) {\n\t\treturn request.delete(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().del()] Apps:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().del()] Error deleting app: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\tgetFiles() {\n\t\treturn this.get().then((app) => {\n\t\t\tapp.getFiles().then((filesArray)=> {\n\t\t\t\treturn filesArray;\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application files: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t})['catch']((err) => {\n\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application: ', err);\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n\n\tgetStructure() {\n\t\treturn this.get().then((app) => {\n\t\t\treturn app.getStructure().then((structure)=> {\n\t\t\t\tconsole.log('Structure loaded: ', structure);\n\t\t\t\treturn structure;\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application structure: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t})['catch']((err) => {\n\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application: ', err);\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n}\n\nexport default AppAction;\n","import Firebase from 'firebase';\nimport AWS from 'aws-sdk';\nimport request from './utils/request';\nimport _ from 'underscore';\nimport config from './config';\n\nimport AppsAction from './classes/AppsAction';\nimport AppAction from './classes/AppAction';\nimport Application from './classes/Application';\n\nlet user;\nlet token;\n\nif (typeof Firebase == 'undefined') {\n\tconsole.error('Firebase is required to use Matter');\n}\nif (typeof AWS == 'undefined') {\n\tconsole.error('AWS is required to use Matter');\n}\nif (typeof _ == 'undefined') {\n\tconsole.error('Underscore is required to use Matter');\n}\nif (typeof request == 'undefined') {\n\tconsole.error('Request is required to use Matter');\n}\n\n//Matter Client Class\nclass MatterClient {\n\t//Signup a new user\n\tsignup(signupData) {\n\t\treturn request.post(config.serverUrl + '/signup', signupData)\n\t\t.then((response) => {\n\t\t  console.log(response);\n\t\t  return response;\n\t\t})\n\t\t['catch']((errRes) => {\n\t\t  console.error('[MatterClient.signup()] Error signing up:', errRes);\n\t\t  return Promise.reject(errRes);\n\t\t});\n\t}\n\n\t//Login a user\n\tlogin(loginData) {\n\t\tif (!loginData || !loginData.password || !loginData.username) {\n\t\t\tconsole.error('Username/Email and Password are required to login.');\n\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login.'});\n\t\t}\n\t\treturn request.put(config.serverUrl + '/login', loginData)\n\t\t.then((response) => {\n\t\t\t//TODO: Save token locally\n\t\t\tconsole.log('[MatterClient.login()]: Login response: ', response);\n\t\t\ttoken = response.token;\n\t\t\tif (window.sessionStorage.getItem(config.tokenName) === null) {\n\t\t\t\twindow.sessionStorage.setItem(config.tokenName, response.token);\n\t\t\t\tconsole.log('[MatterClient.login()]: token set to storage:', window.sessionStorage.getItem(config.tokenName));\n\t\t\t}\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.login()] Error logging in: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tlogout() {\n\t\treturn request.put(config.serverUrl + '/logout', {\n\t\t}).then(function(response) {\n\t\t  console.log('[MatterClient.logout()] Logout successful: ', response);\n\t\t  if (typeof window != 'undefined' && typeof window.sessionStorage.getItem(config.tokenName) != null) {\n\t\t\t\t//Clear session storage\n\t\t\t\twindow.sessionStorage.clear();\n\t\t\t}\n\t\t\treturn response.body;\n\t\t})['catch'](function(errRes) {\n\t\t\tif (errRes.status && errRes.status == 401) {\n\t\t\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config.tokenName) != null) {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.error('[MatterClient.logout()] Error logging out: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tgetCurrentUser() {\n\t\t//TODO: Check Current user variable\n\t\treturn request.get(config.serverUrl + '/user', {\n\t\t}).then(function(response) {\n\t\t\t//TODO: Save user information locally\n\t\t\tconsole.log('[MatterClient.getCurrentUser()] Current User:', response);\n\t\t\tuser = response;\n\t\t\treturn user;\n\t\t})['catch'](function(errRes) {\n\t\t\tconsole.error('[MatterClient.getCurrentUser()] Error getting current user: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tgetAuthToken() {\n\t\tif (typeof window == 'undefined' || typeof window.sessionStorage.getItem(config.tokenName) == 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\treturn window.sessionStorage.getItem(config.tokenName);\n\t}\n\t//TODO: Use getter/setter to make this not a function\n\t//Start a new AppsAction\n\tget apps() {\n\t\tconsole.log('New AppsAction:', new AppsAction());\n\t\treturn new AppsAction();\n\t}\n\t//Start a new app action\n\tapp(appName) {\n\t\tconsole.log('New AppAction:', new AppAction(appName));\n\t\treturn new AppAction(appName);\n\t}\n};\n\nexport default MatterClient;\n"],"sourceRoot":"/source/"}