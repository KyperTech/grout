{"version":3,"sources":["matter-client.js","src/config.js","src/utils/request.js","src/classes/AppsAction.js","src/classes/Application.js","src/classes/AppAction.js","src/matter-client.js"],"names":[],"mappings":"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","file":"matter-client.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('firebase'), require('aws-sdk'), require('superagent'), require('underscore')) :\n\ttypeof define === 'function' && define.amd ? define(['firebase', 'aws-sdk', 'superagent', 'underscore'], factory) :\n\tglobal.MatterClient = factory(global.Firebase, global.AWS, global.superagent, global._)\n}(this, function (Firebase, AWS, superagent, _) { 'use strict';\n\n\tlet config__config = {\n\t\tserverUrl: 'hypercube.elasticbeanstalk.com',\n\t\ttokenName: 'matter-client',\n\t\tfbUrl: 'https://pruvit.firebaseio.com/',\n\t\taws: {\n\t\t\tregion: 'us-east-1',\n\t\t\tcognito: {\n\t\t\t\tpoolId: 'us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982',\n\t\t\t\tparams: {\n\t\t\t\t\tRoleArn: 'arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t//Set server to local server if developing\n\tif (typeof window != 'undefined' && (window.location.hostname == '' || window.location.hostname == 'localhost')) {\n\t\tconfig__config.serverUrl = 'http://localhost:4000';\n\t}\n\tvar config__default = config__config;\n\n\tlet request__requester;\n\tif (typeof window == 'undefined') { //Node Mode\n\t\trequest__requester = superagent;\n\t} else if (typeof window.superagent == 'undefined') {\n\t\tconsole.error('Superagent is required to use Matter');\n\t} else { //Browser mode\n\t\trequest__requester = window.superagent;\n\t}\n\n\tlet request__request = {\n\t\tget(endpoint, queryData) {\n\t\t\tvar req = request__requester.get(endpoint);\n\t\t\tif (queryData) {\n\t\t\t\treq.query(queryData);\n\t\t\t}\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tpost(endpoint, data) {\n\t\t\tvar req = request__requester.post(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tput(endpoint, data) {\n\t\t\tvar req = request__requester.put(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tdel(endpoint, data) {\n\t\t\tvar req = request__requester.put(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t}\n\n\t};\n\n\tvar request__default = request__request;\n\n\tfunction handleResponse(req) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treq.end((err, res) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\t// console.log('Response:', res);\n\t\t\t\t\treturn resolve(res.body);\n\t\t\t\t} else {\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tfunction addAuthHeader(req) {\n\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config__default.tokenName)) {\n\t\t\treq = req.set('Authorization', 'Bearer ' + sessionStorage.getItem(config__default.tokenName));\n\t\t\t// console.log('Set auth header');\n\t\t}\n\t\treturn req;\n\t}\n\n\tclass AppsAction {\n\t\tconstructor() {\n\t\t\tthis.endpoint = config__default.serverUrl + '/apps';\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Add an application\n\t\tadd(appData) {\n\t\t\treturn request__default.post(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\t\treturn new Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t}\n\n\tclass Application__Application {\n\t\tconstructor(appData) {\n\t\t\tthis.name = appData.name;\n\t\t\tthis.owner = appData.owner || null;\n\t\t\tthis.collaborators = appData.collaborators || [];\n\t\t\tthis.createdAt = appData.createdAt;\n\t\t\tthis.updatedAt = appData.updatedAt;\n\t\t\tthis.frontend = appData.frontend || {};\n\t\t\tthis.backend = appData.backend || {};\n\t\t\tif (Firebase) {\n\t\t\t\tthis.fbRef = new Firebase(config__default.fbUrl + appData.name);\n\t\t\t}\n\t\t}\n\t\t//Get files list and convert to structure\n\t\tgetStructure() {\n\t\t\treturn this.getFiles().then((filesArray) => {\n\t\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\t\tconsole.log('Child struct from array:', childStruct);\n\t\t\t\treturn childStruct;\n\t\t\t}, (err) => {\n\t\t\t\tconsole.error('[Application.getStructure] Error getting files: ', err);\n\t\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t\t});\n\t\t}\n\t\t//Get files list from S3\n\t\tgetFiles() {\n\t\t\tif (!this.frontend) {\n\t\t\t\tconsole.error('[Applicaiton.getFiles] Attempting to get objects for bucket without name.');\n\t\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t\t} else {\n\t\t\t\t//If AWS Credential do not exist, set them\n\t\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t\t// console.info('AWS creds are being updated to make request');\n\t\t\t\t\tsetAWSConfig();\n\t\t\t\t}\n\t\t\t\tvar s3 = new AWS.S3();\n\t\t\t\tvar listParams = {Bucket: bucketName};\n\t\t\t\treturn s3.listObjects(listParams, function(err, data) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tconsole.log('[Application.getObjects()] listObjects returned:', data);\n\t\t\t\t\t\treturn Promise.resolve(data.Contents);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('[Application.getObjects()] Error listing objects:', err);\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tpublishFile(fileData) {\n\t\t\tif (!this.frontend) {\n\t\t\t\tconsole.error('Frontend data not available. Make sure to call .get().');\n\t\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t\t}\n\t\t\tvar saveParams = {Bucket: this.frontent.bucketName, Key: fileData.key,  Body: fileData.content, ACL: 'public-read'};\n\t\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\t\tif (fileData.contentType) {\n\t\t\t\tsaveParams.ContentType = fileData.contentType;\n\t\t\t}\n\t\t\t// console.log('[$aws.$saveFiles] saveParams:', saveParams);\n\t\t\treturn s3.putObject(saveParams, function(err, data) {\n\t\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log('[Application.publishFile()] file saved successfully. Returning:', data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\telse {\n\t\t\t\t\tconsole.error('[Application.publishFile()] Error saving file:', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\taddStorage() {\n\t\t\t//TODO:Add storage bucket\n\t\t\tvar endpoint = config__default.serverUrl + '/apps/' + this.name + '/storage';\n\t\t\treturn request__default.post(endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\t\treturn new Application__Application(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\tapplyTemplate() {\n\t\t\tvar endpoint = config__default.serverUrl + '/apps/' + this.name + '/template';\n\t\t\tconsole.log('Applying templates to existing');\n\t\t\t// return request.post(endpoint, appData).then(function(response) {\n\t\t\t// \tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\t// \tif (!apps.isList) {\n\t\t\t// \t\treturn new Application(response);\n\t\t\t// \t}\n\t\t\t// \treturn response;\n\t\t\t// })['catch'](function(errRes) {\n\t\t\t// \tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\t// \treturn Promise.reject(errRes);\n\t\t\t// });\n\t\t}\n\t}\n\n\tvar Application__default = Application__Application;\n\n\t//------------------ Utility Functions ------------------//\n\n\t// AWS Config\n\tfunction setAWSConfig() {\n\t\tAWS.config.update({\n\t\t  credentials: new AWS.CognitoIdentityCredentials({\n\t\t  IdentityPoolId: config__default.aws.cognito.poolId\n\t\t  }),\n\t\t  region: config__default.aws.region\n\t\t});\n\t}\n\n\t//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n\t//Examples for two files (index.html and /testFolder/file.js):\n\t//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n\t//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\n\tfunction childrenStructureFromArray(fileArray) {\n\t\t// console.log('childStructureFromArray called:', fileArray);\n\t\t//Create a object for each file that stores the file in the correct 'children' level\n\t\tvar mappedStructure = fileArray.map(function(file) {\n\t\t\treturn buildStructureObject(file);\n\t\t});\n\t\treturn combineLikeObjs(mappedStructure);\n\t}\n\t//Convert file with key into a folder/file children object\n\tfunction buildStructureObject(file) {\n\t\tvar pathArray;\n\t\t// console.log('buildStructureObject with:', file);\n\t\tif (_.has(file, 'path')) {\n\t\t\t//Coming from files already having path (structure)\n\t\t\tpathArray = file.path.split('/');\n\t\t} else {\n\t\t\t//Coming from aws\n\t\t\tpathArray = file.Key.split('/');\n\t\t\t// console.log('file before pick:', file);\n\t\t\tfile = _.pick(file, 'Key');\n\t\t\tfile.path = file.Key;\n\t\t\tfile.name = file.Key;\n\t\t}\n\t\tvar currentObj = file;\n\t\tif (pathArray.length == 1) {\n\t\t\tcurrentObj.name = pathArray[0];\n\t\t\tif (!_.has(currentObj,'type')) {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t}\n\t\t\tcurrentObj.path = pathArray[0];\n\t\t\treturn currentObj;\n\t\t} else {\n\t\t\tvar finalObj = {};\n\t\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = _.first(list, ind + 1).join('/');\n\t\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t\t//TODO: Find out why this works\n\t\t\t\t\tif (ind == 0) {\n\t\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t\t} else {\n\t\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\t\tcurrentObj.name = loc;\n\t\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\t\tif (file.$id) {\n\t\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn finalObj;\n\t\t}\n\t}\n\t//Recursivley combine children of object's that have the same names\n\tfunction combineLikeObjs() {\n\t\tvar takenNames = [];\n\t\tvar finishedArray = [];\n\t\t_.each(mappedArray, (obj, ind, list) => {\n\t\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\t\ttakenNames.push(obj.name);\n\t\t\t\tfinishedArray.push(obj);\n\t\t\t} else {\n\t\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t\t//Combine children of like objects\n\t\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t\t// console.log('extended obj:',likeObj);\n\t\t\t}\n\t\t});\n\t\treturn finishedArray;\n\t}\n\n\tclass AppAction {\n\t\tconstructor(appName) {\n\t\t\tif (appName) {\n\t\t\t\tthis.name = appName;\n\t\t\t\tthis.endpoint = `${config__default.serverUrl}/apps/${this.name}`;\n\t\t\t} else {\n\t\t\t\tconsole.error('Application name is required to start an AppAction');\n\t\t\t\tthrow new Error('Application name is required to start an AppAction');\n\t\t\t}\n\t\t}\n\t\t//Get applications or single application\n\t\tget() {\n\t\t\treturn request__default.get(this.endpoint).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.app().get()] App(s) data loaded:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.app().get()] Error getting apps list: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Update an application\n\t\tupdate(appData) {\n\t\t\treturn request__default.put(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().update()] App:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().update()] Error updating app: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t//Delete an application\n\t\tdel(appData) {\n\t\t\treturn request__default.delete(this.endpoint, appData).then((response) => {\n\t\t\t\tconsole.log('[MatterClient.apps().del()] Apps:', response);\n\t\t\t\treturn new Application__default(response);\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.apps().del()] Error deleting app: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\tgetFiles() {\n\t\t\treturn this.get().then((app) => {\n\t\t\t\tapp.getFiles().then((filesArray)=> {\n\t\t\t\t\treturn filesArray;\n\t\t\t\t})['catch']((err) => {\n\t\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application files: ', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\n\t\tgetStructure() {\n\t\t\treturn this.get().then((app) => {\n\t\t\t\treturn app.getStructure().then((structure)=> {\n\t\t\t\t\tconsole.log('Structure loaded: ', structure);\n\t\t\t\t\treturn structure;\n\t\t\t\t})['catch']((err) => {\n\t\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application structure: ', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet matter_client__user;\n\tlet matter_client__token;\n\n\tif (typeof Firebase == 'undefined') {\n\t\tconsole.error('Firebase is required to use Matter');\n\t}\n\tif (typeof AWS == 'undefined') {\n\t\tconsole.error('AWS is required to use Matter');\n\t}\n\tif (typeof _ == 'undefined') {\n\t\tconsole.error('Underscore is required to use Matter');\n\t}\n\tif (typeof request__default == 'undefined') {\n\t\tconsole.error('Request is required to use Matter');\n\t}\n\n\t//Matter Client Class\n\tclass MatterClient {\n\t\t//Signup a new user\n\t\tsignup(signupData) {\n\t\t\treturn request__default.post(config__default.serverUrl + '/signup', signupData)\n\t\t\t.then((response) => {\n\t\t\t  console.log(response);\n\t\t\t  return response;\n\t\t\t})\n\t\t\t['catch']((errRes) => {\n\t\t\t  console.error('[MatterClient.signup()] Error signing up:', errRes);\n\t\t\t  return Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\t//Login a user\n\t\tlogin(loginData) {\n\t\t\tif (!loginData || !loginData.password || !loginData.username) {\n\t\t\t\tconsole.error('Username/Email and Password are required to login.');\n\t\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login.'});\n\t\t\t}\n\t\t\treturn request__default.put(config__default.serverUrl + '/login', loginData)\n\t\t\t.then((response) => {\n\t\t\t\t//TODO: Save token locally\n\t\t\t\tconsole.log('[MatterClient.login()]: Login response: ', response);\n\t\t\t\tmatter_client__token = response.token;\n\t\t\t\tif (window.sessionStorage.getItem(config__default.tokenName) === null) {\n\t\t\t\t\twindow.sessionStorage.setItem(config__default.tokenName, response.token);\n\t\t\t\t\tconsole.log('[MatterClient.login()]: token set to storage:', window.sessionStorage.getItem(config__default.tokenName));\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tconsole.error('[MatterClient.login()] Error logging in: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tlogout() {\n\t\t\treturn request__default.put(config__default.serverUrl + '/logout', {\n\t\t\t}).then(function(response) {\n\t\t\t  console.log('[MatterClient.logout()] Logout successful: ', response);\n\t\t\t  if (typeof window != 'undefined' && typeof window.sessionStorage.getItem(config__default.tokenName) != null) {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t}\n\t\t\t\treturn response.body;\n\t\t\t})['catch'](function(errRes) {\n\t\t\t\tif (errRes.status && errRes.status == 401) {\n\t\t\t\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config__default.tokenName) != null) {\n\t\t\t\t\t\t//Clear session storage\n\t\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.error('[MatterClient.logout()] Error logging out: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tgetCurrentUser() {\n\t\t\t//TODO: Check Current user variable\n\t\t\treturn request__default.get(config__default.serverUrl + '/user', {\n\t\t\t}).then(function(response) {\n\t\t\t\t//TODO: Save user information locally\n\t\t\t\tconsole.log('[MatterClient.getCurrentUser()] Current User:', response);\n\t\t\t\tmatter_client__user = response;\n\t\t\t\treturn matter_client__user;\n\t\t\t})['catch'](function(errRes) {\n\t\t\t\tconsole.error('[MatterClient.getCurrentUser()] Error getting current user: ', errRes);\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\n\t\tgetAuthToken() {\n\t\t\tif (typeof window == 'undefined' || typeof window.sessionStorage.getItem(config__default.tokenName) == 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn window.sessionStorage.getItem(config__default.tokenName);\n\t\t}\n\t\t//TODO: Use getter/setter to make this not a function\n\t\t//Start a new AppsAction\n\t\tapps() {\n\t\t\tconsole.log('New AppsAction:', new AppsAction());\n\t\t\treturn new AppsAction();\n\t\t}\n\t\t//Start a new app action\n\t\tapp(appName) {\n\t\t\tconsole.log('New AppAction:', new AppAction(appName));\n\t\t\treturn new AppAction(appName);\n\t\t}\n\t};\n\n\tvar matter_client = MatterClient;\n\n\treturn matter_client;\n\n}));\n","let config = {\n\tserverUrl: 'hypercube.elasticbeanstalk.com',\n\ttokenName: 'matter-client',\n\tfbUrl: 'https://pruvit.firebaseio.com/',\n\taws: {\n\t\tregion: 'us-east-1',\n\t\tcognito: {\n\t\t\tpoolId: 'us-east-1:7f3bc1ff-8484-48dd-9e13-27e5cd3de982',\n\t\t\tparams: {\n\t\t\t\tRoleArn: 'arn:aws:iam::823322155619:role/Cognito_HypercubeTestAuth_Role1'\n\t\t\t}\n\t\t}\n\t}\n};\n//Set server to local server if developing\nif (typeof window != 'undefined' && (window.location.hostname == '' || window.location.hostname == 'localhost')) {\n\tconfig.serverUrl = 'http://localhost:4000';\n}\nexport default config;\n","import config from '../config';\nimport superagent from 'superagent';\n\nlet requester;\nif (typeof window == 'undefined') { //Node Mode\n\trequester = superagent;\n} else if (typeof window.superagent == 'undefined') {\n\tconsole.error('Superagent is required to use Matter');\n} else { //Browser mode\n\trequester = window.superagent;\n}\n\nlet request = {\n\tget(endpoint, queryData) {\n\t\tvar req = requester.get(endpoint);\n\t\tif (queryData) {\n\t\t\treq.query(queryData);\n\t\t}\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tpost(endpoint, data) {\n\t\tvar req = requester.post(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tput(endpoint, data) {\n\t\tvar req = requester.put(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t},\n\tdel(endpoint, data) {\n\t\tvar req = requester.put(endpoint).send(data);\n\t\treq = addAuthHeader(req);\n\t\treturn handleResponse(req);\n\t}\n\n};\n\nexport default request;\n\nfunction handleResponse(req) {\n\treturn new Promise((resolve, reject) => {\n\t\treq.end((err, res) => {\n\t\t\tif (!err) {\n\t\t\t\t// console.log('Response:', res);\n\t\t\t\treturn resolve(res.body);\n\t\t\t} else {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t});\n\t});\n}\nfunction addAuthHeader(req) {\n\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config.tokenName)) {\n\t\treq = req.set('Authorization', 'Bearer ' + sessionStorage.getItem(config.tokenName));\n\t\t// console.log('Set auth header');\n\t}\n\treturn req;\n}\n","import config from '../config';\nimport request from '../utils/request';\n\n//Actions for applications list\nclass AppsAction {\n\tconstructor() {\n\t\tthis.endpoint = config.serverUrl + '/apps';\n\t}\n\t//Get applications or single application\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().get()] App(s) data loaded:', response);\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Add an application\n\tadd(appData) {\n\t\treturn request.post(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().add()] Application added successfully: ', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.getApps()] Error adding application: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n}\nexport default AppsAction;\n","import config from '../config';\nimport request from '../utils/request';\nimport Firebase from 'firebase';\nimport _ from 'underscore';\n\n/**\n * Application class.\n *\n */\nclass Application {\n\tconstructor(appData) {\n\t\tthis.name = appData.name;\n\t\tthis.owner = appData.owner || null;\n\t\tthis.collaborators = appData.collaborators || [];\n\t\tthis.createdAt = appData.createdAt;\n\t\tthis.updatedAt = appData.updatedAt;\n\t\tthis.frontend = appData.frontend || {};\n\t\tthis.backend = appData.backend || {};\n\t\tif (Firebase) {\n\t\t\tthis.fbRef = new Firebase(config.fbUrl + appData.name);\n\t\t}\n\t}\n\t//Get files list and convert to structure\n\tgetStructure() {\n\t\treturn this.getFiles().then((filesArray) => {\n\t\t\tconst childStruct = childrenStructureFromArray(filesArray);\n\t\t\tconsole.log('Child struct from array:', childStruct);\n\t\t\treturn childStruct;\n\t\t}, (err) => {\n\t\t\tconsole.error('[Application.getStructure] Error getting files: ', err);\n\t\t\treturn Promise.reject({message: 'Error getting files.', error: err});\n\t\t});\n\t}\n\t//Get files list from S3\n\tgetFiles() {\n\t\tif (!this.frontend) {\n\t\t\tconsole.error('[Applicaiton.getFiles] Attempting to get objects for bucket without name.');\n\t\t\treturn Promise.reject({message: 'Bucket name required to get objects'});\n\t\t} else {\n\t\t\t//If AWS Credential do not exist, set them\n\t\t\tif (typeof AWS.config.credentials == 'undefined' || !AWS.config.credentials) {\n\t\t\t\t// console.info('AWS creds are being updated to make request');\n\t\t\t\tsetAWSConfig();\n\t\t\t}\n\t\t\tvar s3 = new AWS.S3();\n\t\t\tvar listParams = {Bucket: bucketName};\n\t\t\treturn s3.listObjects(listParams, function(err, data) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log('[Application.getObjects()] listObjects returned:', data);\n\t\t\t\t\treturn Promise.resolve(data.Contents);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('[Application.getObjects()] Error listing objects:', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\tpublishFile(fileData) {\n\t\tif (!this.frontend) {\n\t\t\tconsole.error('Frontend data not available. Make sure to call .get().');\n\t\t\treturn Promise.reject({message: 'Front end data is required to publish file.'});\n\t\t}\n\t\tvar saveParams = {Bucket: this.frontent.bucketName, Key: fileData.key,  Body: fileData.content, ACL: 'public-read'};\n\t\t//Set contentType from fileData to ContentType parameter of new object\n\t\tif (fileData.contentType) {\n\t\t\tsaveParams.ContentType = fileData.contentType;\n\t\t}\n\t\t// console.log('[$aws.$saveFiles] saveParams:', saveParams);\n\t\treturn s3.putObject(saveParams, function(err, data) {\n\t\t\t//[TODO] Add putting object ACL (make public)\n\t\t\tif (!err) {\n\t\t\t\tconsole.log('[Application.publishFile()] file saved successfully. Returning:', data);\n\t\t\t\treturn data;\n\t\t\t}\telse {\n\t\t\t\tconsole.error('[Application.publishFile()] Error saving file:', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t}\n\t\t});\n\t}\n\taddStorage() {\n\t\t//TODO:Add storage bucket\n\t\tvar endpoint = config.serverUrl + '/apps/' + this.name + '/storage';\n\t\treturn request.post(endpoint, appData).then((response) => {\n\t\t\tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\tapplyTemplate() {\n\t\tvar endpoint = config.serverUrl + '/apps/' + this.name + '/template';\n\t\tconsole.log('Applying templates to existing');\n\t\t// return request.post(endpoint, appData).then(function(response) {\n\t\t// \tconsole.log('[Application.addStorage()] Apps:', response);\n\t\t// \tif (!apps.isList) {\n\t\t// \t\treturn new Application(response);\n\t\t// \t}\n\t\t// \treturn response;\n\t\t// })['catch'](function(errRes) {\n\t\t// \tconsole.error('[Application.addStorage()] Error getting apps list: ', errRes);\n\t\t// \treturn Promise.reject(errRes);\n\t\t// });\n\t}\n}\n\nexport default Application;\n\n//------------------ Utility Functions ------------------//\n\n// AWS Config\nfunction setAWSConfig() {\n\tAWS.config.update({\n\t  credentials: new AWS.CognitoIdentityCredentials({\n\t  IdentityPoolId: config.aws.cognito.poolId\n\t  }),\n\t  region: config.aws.region\n\t});\n}\n\n//Convert from array file structure (from S3) to 'children' structure used in Editor GUI (angular-tree-control)\n//Examples for two files (index.html and /testFolder/file.js):\n//Array structure: [{path:'index.html'}, {path:'testFolder/file.js'}]\n//Children Structure [{type:'folder', name:'testfolder', children:[{path:'testFolder/file.js', name:'file.js', filetype:'javascript', contentType:'application/javascript'}]}]\nfunction childrenStructureFromArray(fileArray) {\n\t// console.log('childStructureFromArray called:', fileArray);\n\t//Create a object for each file that stores the file in the correct 'children' level\n\tvar mappedStructure = fileArray.map(function(file) {\n\t\treturn buildStructureObject(file);\n\t});\n\treturn combineLikeObjs(mappedStructure);\n}\n//Convert file with key into a folder/file children object\nfunction buildStructureObject(file) {\n\tvar pathArray;\n\t// console.log('buildStructureObject with:', file);\n\tif (_.has(file, 'path')) {\n\t\t//Coming from files already having path (structure)\n\t\tpathArray = file.path.split('/');\n\t} else {\n\t\t//Coming from aws\n\t\tpathArray = file.Key.split('/');\n\t\t// console.log('file before pick:', file);\n\t\tfile = _.pick(file, 'Key');\n\t\tfile.path = file.Key;\n\t\tfile.name = file.Key;\n\t}\n\tvar currentObj = file;\n\tif (pathArray.length == 1) {\n\t\tcurrentObj.name = pathArray[0];\n\t\tif (!_.has(currentObj,'type')) {\n\t\t\tcurrentObj.type = 'file';\n\t\t}\n\t\tcurrentObj.path = pathArray[0];\n\t\treturn currentObj;\n\t} else {\n\t\tvar finalObj = {};\n\t\t_.each(pathArray, (loc, ind, list) => {\n\t\t\tif (ind != list.length - 1) {//Not the last loc\n\t\t\t\tcurrentObj.name = loc;\n\t\t\t\tcurrentObj.path = _.first(list, ind + 1).join('/');\n\t\t\t\tcurrentObj.type = 'folder';\n\t\t\t\tcurrentObj.children = [{}];\n\t\t\t\t//TODO: Find out why this works\n\t\t\t\tif (ind == 0) {\n\t\t\t\t\tfinalObj = currentObj;\n\t\t\t\t}\n\t\t\t\tcurrentObj = currentObj.children[0];\n\t\t\t} else {\n\t\t\t\tcurrentObj.type = 'file';\n\t\t\t\tcurrentObj.name = loc;\n\t\t\t\tcurrentObj.path = pathArray.join('/');\n\t\t\t\tif (file.$id) {\n\t\t\t\t\tcurrentObj.$id = file.$id;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn finalObj;\n\t}\n}\n//Recursivley combine children of object's that have the same names\nfunction combineLikeObjs() {\n\tvar takenNames = [];\n\tvar finishedArray = [];\n\t_.each(mappedArray, (obj, ind, list) => {\n\t\tif (takenNames.indexOf(obj.name) == -1) {\n\t\t\ttakenNames.push(obj.name);\n\t\t\tfinishedArray.push(obj);\n\t\t} else {\n\t\t\tvar likeObj = _.findWhere(mappedArray, {name: obj.name});\n\t\t\t//Combine children of like objects\n\t\t\tlikeObj.children = _.union(obj.children, likeObj.children);\n\t\t\tlikeObj.children = combineLikeObjs(likeObj.children);\n\t\t\t// console.log('extended obj:',likeObj);\n\t\t}\n\t});\n\treturn finishedArray;\n}\n","import config from '../config';\nimport request from '../utils/request';\nimport Application from './Application';\n\n//Actions for specific application\nclass AppAction {\n\tconstructor(appName) {\n\t\tif (appName) {\n\t\t\tthis.name = appName;\n\t\t\tthis.endpoint = `${config.serverUrl}/apps/${this.name}`;\n\t\t} else {\n\t\t\tconsole.error('Application name is required to start an AppAction');\n\t\t\tthrow new Error('Application name is required to start an AppAction');\n\t\t}\n\t}\n\t//Get applications or single application\n\tget() {\n\t\treturn request.get(this.endpoint).then((response) => {\n\t\t\tconsole.log('[MatterClient.app().get()] App(s) data loaded:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.app().get()] Error getting apps list: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Update an application\n\tupdate(appData) {\n\t\treturn request.put(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().update()] App:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().update()] Error updating app: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\t//Delete an application\n\tdel(appData) {\n\t\treturn request.delete(this.endpoint, appData).then((response) => {\n\t\t\tconsole.log('[MatterClient.apps().del()] Apps:', response);\n\t\t\treturn new Application(response);\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.apps().del()] Error deleting app: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\tgetFiles() {\n\t\treturn this.get().then((app) => {\n\t\t\tapp.getFiles().then((filesArray)=> {\n\t\t\t\treturn filesArray;\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application files: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t})['catch']((err) => {\n\t\t\tconsole.error('[MatterClient.app().getFiles()] Error getting application: ', err);\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n\n\tgetStructure() {\n\t\treturn this.get().then((app) => {\n\t\t\treturn app.getStructure().then((structure)=> {\n\t\t\t\tconsole.log('Structure loaded: ', structure);\n\t\t\t\treturn structure;\n\t\t\t})['catch']((err) => {\n\t\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application structure: ', err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t})['catch']((err) => {\n\t\t\tconsole.error('[MatterClient.app().getStructure()] Error getting application: ', err);\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n}\n\nexport default AppAction;\n","import Firebase from 'firebase';\nimport AWS from 'aws-sdk';\nimport request from './utils/request';\nimport _ from 'underscore';\nimport config from './config';\n\nimport AppsAction from './classes/AppsAction';\nimport AppAction from './classes/AppAction';\nimport Application from './classes/Application';\n\nlet user;\nlet token;\n\nif (typeof Firebase == 'undefined') {\n\tconsole.error('Firebase is required to use Matter');\n}\nif (typeof AWS == 'undefined') {\n\tconsole.error('AWS is required to use Matter');\n}\nif (typeof _ == 'undefined') {\n\tconsole.error('Underscore is required to use Matter');\n}\nif (typeof request == 'undefined') {\n\tconsole.error('Request is required to use Matter');\n}\n\n//Matter Client Class\nclass MatterClient {\n\t//Signup a new user\n\tsignup(signupData) {\n\t\treturn request.post(config.serverUrl + '/signup', signupData)\n\t\t.then((response) => {\n\t\t  console.log(response);\n\t\t  return response;\n\t\t})\n\t\t['catch']((errRes) => {\n\t\t  console.error('[MatterClient.signup()] Error signing up:', errRes);\n\t\t  return Promise.reject(errRes);\n\t\t});\n\t}\n\n\t//Login a user\n\tlogin(loginData) {\n\t\tif (!loginData || !loginData.password || !loginData.username) {\n\t\t\tconsole.error('Username/Email and Password are required to login.');\n\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login.'});\n\t\t}\n\t\treturn request.put(config.serverUrl + '/login', loginData)\n\t\t.then((response) => {\n\t\t\t//TODO: Save token locally\n\t\t\tconsole.log('[MatterClient.login()]: Login response: ', response);\n\t\t\ttoken = response.token;\n\t\t\tif (window.sessionStorage.getItem(config.tokenName) === null) {\n\t\t\t\twindow.sessionStorage.setItem(config.tokenName, response.token);\n\t\t\t\tconsole.log('[MatterClient.login()]: token set to storage:', window.sessionStorage.getItem(config.tokenName));\n\t\t\t}\n\t\t\treturn response;\n\t\t})['catch']((errRes) => {\n\t\t\tconsole.error('[MatterClient.login()] Error logging in: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tlogout() {\n\t\treturn request.put(config.serverUrl + '/logout', {\n\t\t}).then(function(response) {\n\t\t  console.log('[MatterClient.logout()] Logout successful: ', response);\n\t\t  if (typeof window != 'undefined' && typeof window.sessionStorage.getItem(config.tokenName) != null) {\n\t\t\t\t//Clear session storage\n\t\t\t\twindow.sessionStorage.clear();\n\t\t\t}\n\t\t\treturn response.body;\n\t\t})['catch'](function(errRes) {\n\t\t\tif (errRes.status && errRes.status == 401) {\n\t\t\t\tif (typeof window != 'undefined' && window.sessionStorage.getItem(config.tokenName) != null) {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.error('[MatterClient.logout()] Error logging out: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tgetCurrentUser() {\n\t\t//TODO: Check Current user variable\n\t\treturn request.get(config.serverUrl + '/user', {\n\t\t}).then(function(response) {\n\t\t\t//TODO: Save user information locally\n\t\t\tconsole.log('[MatterClient.getCurrentUser()] Current User:', response);\n\t\t\tuser = response;\n\t\t\treturn user;\n\t\t})['catch'](function(errRes) {\n\t\t\tconsole.error('[MatterClient.getCurrentUser()] Error getting current user: ', errRes);\n\t\t\treturn Promise.reject(errRes);\n\t\t});\n\t}\n\n\tgetAuthToken() {\n\t\tif (typeof window == 'undefined' || typeof window.sessionStorage.getItem(config.tokenName) == 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\treturn window.sessionStorage.getItem(config.tokenName);\n\t}\n\t//TODO: Use getter/setter to make this not a function\n\t//Start a new AppsAction\n\tapps() {\n\t\tconsole.log('New AppsAction:', new AppsAction());\n\t\treturn new AppsAction();\n\t}\n\t//Start a new app action\n\tapp(appName) {\n\t\tconsole.log('New AppAction:', new AppAction(appName));\n\t\treturn new AppAction(appName);\n\t}\n};\n\nexport default MatterClient;\n"],"sourceRoot":"/source/"}